{"version":3,"sources":["/./node_modules/moment/locale sync ^\\.\\/.*$","/./src/$_lazy_route_resource lazy namespace object","/./src/app/add-amazon-rds/add-amazon-rds.component.html","/./src/app/add-amazon-rds/add-amazon-rds.component.ts","/./src/app/add-amazon-rds/add-amazon-rds.service.ts","/./src/app/add-instance/add-instance.component.html","/./src/app/add-instance/add-instance.component.ts","/./src/app/add-remote-instances/add-remote-instance.component.html","/./src/app/add-remote-instances/add-remote-instance.component.ts","/./src/app/add-remote-instances/add-remote-instance.service.ts","/./src/app/app-routing.module.ts","/./src/app/app.component.html","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/core/core.module.ts","/./src/app/core/json-tree/json-tree.component.html","/./src/app/core/json-tree/json-tree.component.ts","/./src/app/core/models/colum-state.mode.ts","/./src/app/core/models/column-config.model.ts","/./src/app/core/page-not-found/page-not-found.component.html","/./src/app/core/page-not-found/page-not-found.component.ts","/./src/app/core/services/events.service.ts","/./src/app/core/services/filter-search.service.ts","/./src/app/core/services/instance.service.ts","/./src/app/core/services/query-params.service.ts","/./src/app/environment.ts","/./src/app/inventory/agents-table/agents-table.component.html","/./src/app/inventory/agents-table/agents-table.component.ts","/./src/app/inventory/agents-table/agents-table.service.ts","/./src/app/inventory/agents-table/models/external-exporter.model.ts","/./src/app/inventory/agents-table/models/general-db-exporter.model.ts","/./src/app/inventory/agents-table/models/general-qan-agent.model.ts","/./src/app/inventory/agents-table/models/node-exporter.model.ts","/./src/app/inventory/agents-table/models/pmm-agent.model.ts","/./src/app/inventory/agents-table/models/rds-exporter.model.ts","/./src/app/inventory/custom-labels.model.ts","/./src/app/inventory/inventory.component.html","/./src/app/inventory/inventory.component.ts","/./src/app/inventory/inventory.service.ts","/./src/app/inventory/nodes-table/models/container.model.ts","/./src/app/inventory/nodes-table/models/generic.model.ts","/./src/app/inventory/nodes-table/models/remote-amazon-rds.model.ts","/./src/app/inventory/nodes-table/models/remote.model.ts","/./src/app/inventory/nodes-table/nodes-table.component.html","/./src/app/inventory/nodes-table/nodes-table.component.ts","/./src/app/inventory/nodes-table/nodes-table.service.ts","/./src/app/inventory/services-table/models/services-general.model.ts","/./src/app/inventory/services-table/services-table.component.html","/./src/app/inventory/services-table/services-table.component.ts","/./src/app/inventory/services-table/services-table.service.ts","/./src/app/pmm-api-services/api-configuration.ts","/./src/app/pmm-api-services/api.module.ts","/./src/app/pmm-api-services/base-service.ts","/./src/app/pmm-api-services/services.ts","/./src/app/pmm-api-services/services/actions.service.ts","/./src/app/pmm-api-services/services/agents.service.ts","/./src/app/pmm-api-services/services/filters.service.ts","/./src/app/pmm-api-services/services/metrics-names.service.ts","/./src/app/pmm-api-services/services/mongo-db.service.ts","/./src/app/pmm-api-services/services/my-sql.service.ts","/./src/app/pmm-api-services/services/node.service.ts","/./src/app/pmm-api-services/services/nodes.service.ts","/./src/app/pmm-api-services/services/object-details.service.ts","/./src/app/pmm-api-services/services/postgre-sql.service.ts","/./src/app/pmm-api-services/services/profile.service.ts","/./src/app/pmm-api-services/services/proxy-sql.service.ts","/./src/app/pmm-api-services/services/server.service.ts","/./src/app/pmm-api-services/services/service.service.ts","/./src/app/pmm-api-services/services/services.service.ts","/./src/app/qan/data/metric-catalogue.ts","/./src/app/qan/edit-column/qan-edit-column.service.ts","/./src/app/qan/filter-menu-viewer/filter-menu-viewer.component.html","/./src/app/qan/filter-menu-viewer/filter-menu-viewer.component.ts","/./src/app/qan/filter-menu/filter-groups-list.ts","/./src/app/qan/filter-menu/filter-menu.component.html","/./src/app/qan/filter-menu/filter-menu.component.ts","/./src/app/qan/filter-menu/filter-menu.service.ts","/./src/app/qan/filter-menu/filter-viewer.service.ts","/./src/app/qan/filter-menu/models/filter-group.model.ts","/./src/app/qan/filter-menu/models/filter.model.ts","/./src/app/qan/filter-menu/models/filters-search.model.ts","/./src/app/qan/main-cell/main-cell.component.html","/./src/app/qan/main-cell/main-cell.component.ts","/./src/app/qan/main-cell/mock/group-by.mock.ts","/./src/app/qan/profile-details/components/details-fingerprint/details-fingerprint.component.html","/./src/app/qan/profile-details/components/details-fingerprint/details-fingerprint.component.ts","/./src/app/qan/profile-details/components/details-labels/details-labels.component.html","/./src/app/qan/profile-details/components/details-labels/details-labels.component.ts","/./src/app/qan/profile-details/components/details-row/details-row.component.html","/./src/app/qan/profile-details/components/details-row/details-row.component.ts","/./src/app/qan/profile-details/components/details-table/details-table.component.html","/./src/app/qan/profile-details/components/details-table/details-table.component.ts","/./src/app/qan/profile-details/components/examples-viewer/examples-viewer.component.html","/./src/app/qan/profile-details/components/examples-viewer/examples-viewer.component.ts","/./src/app/qan/profile-details/components/explain/explain.component.html","/./src/app/qan/profile-details/components/explain/explain.component.ts","/./src/app/qan/profile-details/components/query-example/query-example.component.html","/./src/app/qan/profile-details/components/query-example/query-example.component.ts","/./src/app/qan/profile-details/components/tables/components/table-create/table-create.component.html","/./src/app/qan/profile-details/components/tables/components/table-create/table-create.component.ts","/./src/app/qan/profile-details/components/tables/components/table-indexes/table-indexes.component.html","/./src/app/qan/profile-details/components/tables/components/table-indexes/table-indexes.component.ts","/./src/app/qan/profile-details/components/tables/components/table-status/table-status.component.html","/./src/app/qan/profile-details/components/tables/components/table-status/table-status.component.ts","/./src/app/qan/profile-details/components/tables/tables.component.html","/./src/app/qan/profile-details/components/tables/tables.component.ts","/./src/app/qan/profile-details/models/details-sparkline.model.ts","/./src/app/qan/profile-details/profile-details.component.html","/./src/app/qan/profile-details/profile-details.component.ts","/./src/app/qan/profile-details/profile-details.service.ts","/./src/app/qan/profile-table/models/metric.model.ts","/./src/app/qan/profile-table/models/table-data.model.ts","/./src/app/qan/profile-table/profile-table.component.html","/./src/app/qan/profile-table/profile-table.component.ts","/./src/app/qan/profile/qan-profile.component.html","/./src/app/qan/profile/qan-profile.component.ts","/./src/app/qan/profile/qan-profile.service.ts","/./src/app/qan/search-autocomplete/search-autocomplete.component.html","/./src/app/qan/search-autocomplete/search-autocomplete.component.ts","/./src/app/qan/table-cell/table-cell.component.html","/./src/app/qan/table-cell/table-cell.component.ts","/./src/app/qan/table-header-cell/modesl/select-option.model.ts","/./src/app/qan/table-header-cell/table-header-cell.component.html","/./src/app/qan/table-header-cell/table-header-cell.component.ts","/./src/app/remote-instances-list/remote-instances-list.component.html","/./src/app/remote-instances-list/remote-instances-list.component.ts","/./src/app/remote-instances-list/remote-instances-list.service.ts","/./src/app/settings/settings.component.ts","/./src/app/settings/settings.service.ts","/./src/app/shared/autofocus.directive.ts","/./src/app/shared/humanize-symbol-pipe.ts","/./src/app/shared/humanize.pipe.ts","/./src/app/shared/latency-chart.directive.ts","/./src/app/shared/load-polygon-chart.directive.ts","/./src/app/shared/moment-format.pipe.ts","/./src/app/shared/parse-query-param-date.pipe.ts","/./src/app/shared/pmm-tooltip.directive.ts","/./src/app/shared/shared.module.ts","/./src/app/shared/sorting-table.pipe.ts","/./src/app/shared/tooltip/tooltip.component.html","/./src/app/shared/tooltip/tooltip.component.ts","/./src/app/src/app/shared/ellipsis-middle.pipe.ts","/./src/app/summary/summary.component.ts","/./src/app/summary/summary.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<section class=\"content-wrapper\">\n  <h3 class=\"content-wrapper__title\">AWS Credentials</h3>\n  <form (ngSubmit)=\"onSubmit()\" class=\"center-children content-wrapper__credentials\">\n    <input [(ngModel)]=\"rdsCredentials.aws_access_key_id\"\n           name=\"aws_access_key_id\" type=\"text\"\n           class=\"input-field\"\n           id=\"aws_access_key_id\"\n           placeholder=\"AWS_ACCESS_KEY_ID\">\n    <input [(ngModel)]=\"rdsCredentials.aws_secret_access_key\"\n           name=\"aws_secret_access_key\" type=\"password\"\n           class=\"input-field\"\n           id=\"aws_secret_access_key\" aria-describedby=\"aws_secret_access_key\"\n           placeholder=\"AWS_SECRET_ACCESS_KEY\">\n    <button type=\"submit\" class=\"button button--dark\">Discover</button>\n  </form>\n  <a class=\"content-wrapper__link highlight-content\"\n     href=\"https://www.percona.com/doc/percona-monitoring-and-management/amazon-rds.html#pmm-amazon-rds-permission-access-db-instance-iam-user-creating\"\n     target=\"_blank\">\n    Where do I get the security credentials for my Amazon RDS DB instance?\n  </a>\n  <div *ngIf=\"isLoading && !allRDSInstances?.length\" class=\"spinner-wrapper spinner-wrapper--centered\">\n    <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\n  </div>\n  <div *ngIf=\"errorMessage\" class=\"alert alert-warning w-75 mx-auto m-2\" role=\"alert\">\n    <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n    {{ errorMessage }}\n  </div>\n  <section *ngIf=\"allRDSInstances?.length\" class=\"content-wrapper__rds-instances\">\n    <h3>RDS Instances</h3>\n    <form (ngSubmit)=\"onConnect()\">\n      <section class=\"grid-table\">\n        <header class=\"grid-table__row grid-table__row--instances\">\n          <span>Name</span>\n          <span>Region</span>\n          <span>Endpoint</span>\n          <span>Engine</span>\n          <span>Enabled</span>\n        </header>\n        <ng-template ngFor let-instance [ngForOf]=\"allRDSInstances\" let-i=\"index\" let-odd=\"odd\">\n          <div [ngClass]=\"{'active': showConnect(instance.node)}\" class=\"grid-table__row grid-table__row--instances\">\n            <span>{{ instance.node.name }}</span>\n            <span>{{ instance.node.region }}</span>\n            <span>{{ instance.service.address }}:{{ instance.service.port }}</span>\n            <span>{{ instance.service.engine }} v{{ instance.service.engine_version }}</span>\n            <div>\n              <label class=\"switcher\">\n                <input type=\"checkbox\"\n                       class=\"switcher__checkbox\"\n                       [checked]=\"isEnabled(instance)\"\n                       (click)=\"$event.preventDefault(); !isConnectLoading && onCheckboxChange(instance.node, instance, currentInput);\"\n                       id=\"{{i}}\" #currentInput>\n                <span class=\"switcher__slider\">\n                </span>\n              </label>\n              <div *ngIf=\"isDisabling && currentInputId === currentInput.id\" class=\"spinner-wrapper\">\n                <i class=\"fa fa-spinner fa-one-half fa-pulse fa-fw\"></i>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"showConnect(instance.node)\" class=\"grid-table__row grid-table__row--connect-instances\">\n            <div>\n              <input type=\"text\" [(ngModel)]=\"mysqlCredentials.username\"\n                     name=\"username\" class=\"input-field\" placeholder=\"MySQL username\">\n            </div>\n            <div>\n              <input type=\"password\" [(ngModel)]=\"mysqlCredentials.password\"\n                     name=\"password\" class=\"input-field\" placeholder=\"MySQL Password\">\n            </div>\n            <div>\n              <button type=\"submit\" [disabled]=\"isDemo\" class=\"button button--dark\">Connect</button>\n              <button type=\"reset\" (click)=\"cancel()\" class=\"button button--dark\">Cancel</button>\n              <div *ngIf=\"isConnectLoading\" class=\"spinner-wrapper\">\n                <i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </section>\n    </form>\n  </section>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { RDSCredentials, MySQLCredentials, RDSInstance, RDSNode, AddAmazonRDSService } from './add-amazon-rds.service'\nimport { environment } from '../environment';\n\n@Component({\n  selector: 'app-add-aws',\n  templateUrl: './add-amazon-rds.component.html',\n  styleUrls: ['./add-amazon-rds.component.scss']\n})\nexport class AddAmazonRDSComponent implements OnInit {\n\n  rdsCredentials = new RDSCredentials();\n  mysqlCredentials = new MySQLCredentials();\n  rdsNode = {} as RDSNode;\n  allRDSInstances: RDSInstance[] = [];\n  registeredRDSInstances: RDSInstance[] = [];\n  registeredNames: string[] = [];\n  isLoading: boolean;\n  isConnectLoading: boolean;\n  isDisabling: boolean;\n  currentInputId: string;\n  errorMessage: string;\n  isDemo = false;\n  submitted = false;\n\n  constructor(public addAmazonRDSService: AddAmazonRDSService) {\n    this.isDemo = environment.demoHosts.includes(location.hostname);\n  }\n\n  async ngOnInit() {\n    this.errorMessage = '';\n    try {\n      const allRDSInstances = await this.addAmazonRDSService.discover(this.rdsCredentials);\n      if (this.submitted) { // ignore results if user submitted form with creds.\n        return;\n      }\n      await this.getRegistered();\n      this.allRDSInstances = allRDSInstances;\n      this.errorMessage = '';\n\n    } catch (err) {\n      if (this.submitted) { // ignore results if user submitted form with creds.\n        return;\n      }\n\n      this.checkErrorMessage(err);\n    }\n  }\n\n  onCheckboxChange(node, instance, input) {\n    const isEnable = this.isEnabled(instance);\n    this.currentInputId = input.id;\n    return isEnable ? this.disableInstanceMonitoring(node) : this.enableInstanceMonitoring(node);\n  }\n\n  checkErrorMessage(err) {\n    const msg = this.isJsonError(err) ? err.error : 'Bad response';\n    this.errorMessage = msg.startsWith('NoCredentialProviders') ?\n      'Cannot automatically discover instances - please provide AWS access credentials' : msg;\n    return this.errorMessage;\n  }\n\n  isJsonError(err) {\n    try {\n      return err.json().error;\n    } catch {\n      return false;\n    }\n  }\n\n  async onSubmit() {\n    this.errorMessage = '';\n    this.isLoading = true;\n    this.submitted = true;\n    try {\n      this.allRDSInstances = await this.addAmazonRDSService.discover(this.rdsCredentials);\n      await this.getRegistered();\n      this.errorMessage = '';\n    } catch (err) {\n      this.allRDSInstances = [];\n      this.checkErrorMessage(err);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  enableInstanceMonitoring(node: RDSNode) {\n    this.mysqlCredentials = new MySQLCredentials();\n    this.rdsNode = { name: node.name, region: node.region } as RDSNode;\n  }\n\n  showConnect(node: RDSNode): boolean {\n    return this.rdsNode.name === node.name && this.rdsNode.region === node.region;\n  }\n\n  cancel() {\n    this.rdsNode.name = '';\n    this.rdsNode.region = '';\n  }\n\n  async onConnect() {\n    this.errorMessage = '';\n    this.isConnectLoading = true;\n    try {\n      const res = await this.addAmazonRDSService.enable(this.rdsCredentials, this.rdsNode, this.mysqlCredentials);\n    } catch (err) {\n      this.isConnectLoading = false;\n      this.errorMessage = this.isJsonError(err) ? err.error : 'Bad response';\n      return;\n    }\n    this.rdsNode = {} as RDSNode;\n    this.cancel();\n    this.isConnectLoading = false;\n    await this.getRegistered();\n  }\n\n  /* istanbul ignore next */\n  async disableInstanceMonitoring(node: RDSNode) {\n    if (this.isDemo) {\n      return false;\n    }\n    this.errorMessage = '';\n    this.isDisabling = true;\n    const text = `Are you sure want to disable monitoring of '${node.name}:${node.region}' node?`;\n    if (confirm(text)) {\n      try {\n        const res = await this.addAmazonRDSService.disable(node);\n        await this.getRegistered();\n      } catch (err) {\n        this.errorMessage = this.isJsonError(err) ? err.error : 'Bad response';\n      }\n    }\n    this.isDisabling = false;\n  }\n\n  isEnabled(rdsInstance: RDSInstance): boolean {\n    return this.registeredNames.indexOf(rdsInstance.node.name + ':' + rdsInstance.node.region) > -1;\n  }\n\n  async getRegistered() {\n    this.errorMessage = '';\n    try {\n      this.registeredRDSInstances = await this.addAmazonRDSService.getRegistered();\n    } catch (err) {\n      this.errorMessage = this.isJsonError(err) ? err.error : 'Bad response';\n    }\n    this.registeredNames = [];\n    if (this.registeredRDSInstances !== undefined) {\n      this.registeredRDSInstances.forEach(element => {\n        this.registeredNames.push(`${element.node.name}:${element.node.region}`);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n/* istanbul ignore next */\nexport class RDSCredentials {\n  constructor(public aws_access_key_id = '', public aws_secret_access_key = '') { }\n}\n\n/* istanbul ignore next */\nexport class MySQLCredentials {\n  constructor(public username = '', public password = '') { }\n}\n\nexport interface RDSNode {\n  name: string;\n  region: string;\n}\n\nexport interface RDSService {\n  address: string;\n  port: number;\n  engine: string;\n  engine_version: string;\n}\n\nexport interface RDSInstance {\n  node: RDSNode;\n  service: RDSService;\n}\n\n@Injectable()\nexport class AddAmazonRDSService {\n\n  private httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private httpClient: HttpClient) { }\n\n  async discover(rdsCredentials: RDSCredentials): Promise<RDSInstance[]> {\n    const url = `/managed/v0/rds/discover`;\n    const data = {\n      aws_access_key_id: rdsCredentials.aws_access_key_id,\n      aws_secret_access_key: rdsCredentials.aws_secret_access_key\n    };\n\n    const response: any = await this.httpClient\n      .post(url, data, { headers: this.httpHeaders })\n      .toPromise();\n    return response.instances as RDSInstance[];\n  }\n\n  async enable(rdsCredentials: RDSCredentials, node: RDSNode, mysqlCredentials: MySQLCredentials): Promise<{}> {\n    const url = `/managed/v0/rds`;\n    const data = {\n      aws_access_key_id: rdsCredentials.aws_access_key_id,\n      aws_secret_access_key: rdsCredentials.aws_secret_access_key,\n      id: { name: node.name, region: node.region },\n      password: mysqlCredentials.password,\n      username: mysqlCredentials.username\n    };\n\n    return await this.httpClient\n      .post(url, data, { headers: this.httpHeaders })\n      .toPromise()\n  }\n\n  async disable(node: RDSNode): Promise<{}> {\n    const url = `/managed/v0/rds`;\n    const body = { id: { name: node.name, region: node.region } };\n\n    return await this.httpClient.request('delete', url, { headers: this.httpHeaders, body: body })\n      .toPromise();\n  }\n\n  async getRegistered(): Promise<RDSInstance[]> {\n    const url = `/managed/v0/rds`;\n    const response: any = await this.httpClient.request('get', url, { headers: this.httpHeaders })\n      .toPromise();\n    return response.instances as RDSInstance[];\n  }\n}\n","<section class=\"content-wrapper\">\n  <h3>How to Add an Instance</h3>\n  <nav class=\"navigation\">\n      <!--\n    <a routerLink=\"/add-amazon-rds\" class=\"navigation__link\">\n      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Add an AWS RDS MySQL or Aurora MySQL Instance\n    </a>\n    -->\n    <a routerLink=\"/add-remote-postgresql\" class=\"navigation__link\">\n      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Add a Remote PostgreSQL Instance\n    </a>\n    <a routerLink=\"/add-remote-mysql\" class=\"navigation__link\">\n      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Add a Remote MySQL Instance\n    </a>\n    <a routerLink=\"/add-remote-mongodb\" class=\"navigation__link\">\n      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Add a Remote MongoDB Instance\n    </a>\n    <a routerLink=\"/add-remote-proxysql\" class=\"navigation__link\">\n      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Add a Remote ProxySQL Instance\n    </a>\n      <!--\n    <a class=\"navigation__link\"\n       href=\"https://www.percona.com/doc/percona-monitoring-and-management/pmm-admin.html#adding-mysql-metrics-service\"\n       target=\"blank\">\n      <i class=\"fa fa-external-link\" aria-hidden=\"true\"></i> How to add a MySQL Instance\n    </a>\n    <a class=\"navigation__link\"\n       href=\"https://www.percona.com/doc/percona-monitoring-and-management/pmm-admin.html#adding-mongodb-query-analytics-service\"\n       target=\"blank\">\n      <i class=\"fa fa-external-link\" aria-hidden=\"true\"></i> How to add a MongoDB Instance\n    </a>\n    <a class=\"navigation__link\"\n       href=\"https://www.percona.com/doc/percona-monitoring-and-management/pmm-admin.html#adding-general-system-metrics-service\"\n       target=\"blank\">\n      <i class=\"fa fa-external-link\" aria-hidden=\"true\"></i> How to add a Linux Instance\n    </a>\n    <a class=\"navigation__link\"\n       href=\"https://www.percona.com/doc/percona-monitoring-and-management/conf-postgres.html\"\n       target=\"blank\">\n      <i class=\"fa fa-external-link\" aria-hidden=\"true\"></i> How to add a PostgreSQL Instance\n    </a>\n    -->\n  </nav>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-instance',\n  templateUrl: './add-instance.component.html',\n  styleUrls: ['./add-instance.component.scss']\n})\nexport class AddInstanceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<form #addInstanceForm=\"ngForm\" (ngSubmit)=\"onSubmit(addInstanceForm)\" class=\"add-instance-form\">\n    <h5 class=\"add-instance-form__title\">Add remote {{instanceType}} Instance</h5>\n\n    <div class=\"add-instance-panel\">\n        <h6>Main details</h6><span></span>\n        <input [(ngModel)]=\"remoteInstanceCredentials.address\"\n               [class.input--invalid]=\"hostname?.errors && isSubmitted\"\n               #hostname=\"ngModel\"\n               type=\"text\" class=\"input-field  input-field--dark\"\n               placeholder=\"*Hostname\" name=\"Hostname\" id=\"hostname\" required>\n        <span class=\"description\">\n            Public DNS hostname of your instance\n        </span>\n\n        <input [(ngModel)]=\"remoteInstanceCredentials.service_name\" #name=\"ngModel\"\n               type=\"text\" class=\"input-field input-field--dark\"\n               placeholder=\"Service name (default: Hostname)\" id=\"name\" name=\"Name\">\n        <span class=\"description\">\n            Service name to use.\n        </span>\n\n        <input [(ngModel)]=\"remoteInstanceCredentials.port\" #port=\"ngModel\"\n               type=\"text\" class=\"input-field input-field--dark\" placeholder=\"Port\"\n               [placeholder]=\"'Port (default: '+ defaultPort+')'\"\n               id=\"port\" name=\"Port\">\n        <span class=\"description\">\n            Port your service is listening on\n        </span>\n\n        <input [(ngModel)]=\"remoteInstanceCredentials.username\"\n               [class.input--invalid]=\"username?.errors && isSubmitted\"\n               #username=\"ngModel\"\n               type=\"text\" class=\"input-field input-field--dark\"\n               placeholder=\"*Username\" name=\"Username\" id=\"username\" required>\n        <span class=\"description\">\n            Your database user name\n        </span>\n\n        <input [(ngModel)]=\"remoteInstanceCredentials.password\"\n               [class.input--invalid]=\"password?.errors && isSubmitted\"\n               #password=\"ngModel\"\n               type=\"password\" class=\"input-field input-field--dark\"\n               placeholder=\"*Password\" name=\"Password\" id=\"password\" required>\n        <span class=\"description\">\n            Your database password\n        </span>\n    </div>\n\n    <div class=\"add-instance-panel\">\n        <h6>Labels</h6><span></span>\n        <input [(ngModel)]=\"remoteInstanceCredentials.environment\"\n               type=\"text\" class=\"input-field  input-field--dark\"\n               placeholder=\"Environment\" name=\"environment\" id=\"environment\">\n        <span class=\"description\">\n        </span>\n\n        <input [(ngModel)]=\"remoteInstanceCredentials.replication_set\"\n               type=\"text\" class=\"input-field input-field--dark\"\n               placeholder=\"Replication set\" id=\"replication_set\" name=\"replication_set\">\n        <span class=\"description\">\n        </span>\n\n        <input [(ngModel)]=\"remoteInstanceCredentials.cluster\"\n               type=\"text\" class=\"input-field input-field--dark\"\n               placeholder=\"Cluster\" id=\"cluster\" name=\"cluster\">\n        <span class=\"description\">\n        </span>\n\n        <textarea [(ngModel)]=\"customLabels\"\n                  rows=\"5\"\n               type=\"text\" class=\"input-field input-field--textarea input-field--dark\"\n                  placeholder=\"Custom labels\nFormat:\nkey1:value1\nkey2:value2\" id=\"customlabels\" name=\"customlabels\"></textarea>\n        <div class=\"description custom-labels\">\n        </div>\n    </div>\n\n    <div class=\"add-instance-panel\">\n        <h6>Additional options</h6><span></span>\n        <div>\n            <input [(ngModel)]=\"remoteInstanceCredentials.skip_connection_check\"\n                   type=\"checkbox\" class=\"input-field--dark\"\n                   name=\"skip_connection_check\" id=\"skip_connection_check\">\n            <label class=\"description\" for=\"skip_connection_check\">\n                Skip connection check\n            </label>\n        </div>\n        <span class=\"description\">\n        </span>\n        <div>\n            <input [(ngModel)]=\"remoteInstanceCredentials.tls\"\n                   type=\"checkbox\" class=\"input-field--dark\"\n                   name=\"tls\" id=\"tls\">\n            <label class=\"description\" for=\"tls\">\n                Use TLS for database connections.\n            </label>\n        </div>\n        <span class=\"description\">\n        </span>\n        <div>\n            <input [(ngModel)]=\"remoteInstanceCredentials.tls_skip_verify\"\n                   type=\"checkbox\" class=\"input-field--dark\"\n                   name=\"tls_skip_verify\" id=\"tls_skip_verify\">\n            <label class=\"description\" for=\"tls_skip_verify\">\n                Skip TLS certificate and hostname validation\n            </label>\n        </div>\n        <span class=\"description\">\n        </span>\n\n        <div *ngIf=\"instanceType == 'MySQL'\" class=\"full-row\">\n            <input [(ngModel)]=\"remoteInstanceCredentials.qan_mysql_perfschema\"\n                   type=\"checkbox\" class=\"input-field--dark\"\n                   name=\"qan_mysql_perfschema\" id=\"qan_mysql_perfschema\">\n            <label class=\"description\" for=\"qan_mysql_perfschema\">\n                Use performance schema\n            </label>\n        </div>\n\n        <div *ngIf=\"instanceType == 'PostgreSQL'\" class=\"full-row\">\n            <input [(ngModel)]=\"remoteInstanceCredentials.qan_postgresql_pgstatements_agent\"\n                   type=\"checkbox\" class=\"input-field--dark\"\n                   name=\"qan_postgresql_pgstatements_agent\" id=\"qan_postgresql_pgstatements_agent\">\n            <label class=\"description\" for=\"qan_postgresql_pgstatements_agent\">\n                Use Pg Stat Statements\n            </label>\n        </div>\n\n        <div *ngIf=\"instanceType == 'MongoDB'\" class=\"full-row\">\n            <input [(ngModel)]=\"remoteInstanceCredentials.qan_mongodb_profiler\"\n                   type=\"checkbox\" class=\"input-field--dark\"\n                   name=\"qan_mongodb_profiler\" id=\"qan_mongodb_profiler\">\n            <label class=\"description\" for=\"qan_mongodb_profiler\">\n                Use QAN MongoDB Profiler\n            </label>\n        </div>\n    </div>\n\n    <div class=\"add-instance-form__submit-block\">\n        <button type=\"submit\" [disabled]=\"isDemo\" class=\"button button--dark\" id=\"addInstance\">Add service</button>\n        <div *ngIf=\"errorMessage && isSubmitted && addInstanceForm.valid\">*{{ errorMessage }}</div>\n        <div *ngIf=\"isSubmitted && !addInstanceForm.valid\">Fields marked with an asterisk (*) are required</div>\n        <div *ngIf=\"isLoading\" class=\"spinner-wrapper\">\n            <i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>\n        </div>\n    </div>\n</form>\n","import { Component, NgModule, OnInit } from '@angular/core';\nimport {\n  AddMySQLCredentials,\n  AddPostgreSQLCredentials,\n  AddNodeParams,\n  AddRemoteInstanceService,\n  BaseCredentials,\n  NodeRemote,\n  AddMongoDBCredentials,\n  AddProxySQLCredentials\n} from './add-remote-instance.service'\nimport { environment } from '../environment';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  imports: [NgSelectModule]\n})\n\n@Component({\n  selector: 'app-add-remote-instance',\n  templateUrl: './add-remote-instance.component.html',\n  styleUrls: ['./add-remote-instance.component.scss']\n})\nexport class AddRemoteInstanceComponent implements OnInit {\n\n  remoteInstanceCredentials = {} as BaseCredentials;\n  nodes = Array<NodeRemote>();\n  errorMessage: string;\n  isDemo = false;\n  isLoading = false;\n  isSubmitted = false;\n  instanceType: string;\n  currentUrl: string;\n  customLabels: string;\n  defaultPort = 3306;\n\n  constructor(public addRemoteInstanceService: AddRemoteInstanceService,\n    private router: Router\n  ) {\n    this.isDemo = environment.demoHosts.includes(location.hostname);\n    this.currentUrl = this.router.url;\n  }\n\n  async ngOnInit() {\n    this.errorMessage = '';\n    this.isLoading = false;\n    switch (this.addRemoteInstanceService.checkInstanceType(this.currentUrl)) {\n      case 'postgresql':\n        this.instanceType = 'PostgreSQL';\n        this.remoteInstanceCredentials = {} as AddPostgreSQLCredentials;\n        this.defaultPort = 5432;\n        break;\n      case 'mysql':\n        this.instanceType = 'MySQL';\n        this.remoteInstanceCredentials = {} as AddMySQLCredentials;\n        this.defaultPort = 3306;\n        break;\n      case 'mongodb':\n        this.instanceType = 'MongoDB';\n        this.remoteInstanceCredentials = {} as AddMongoDBCredentials;\n        this.defaultPort = 27017;\n        break;\n      case 'proxysql':\n        this.instanceType = 'ProxySQL';\n        this.remoteInstanceCredentials = {} as AddProxySQLCredentials;\n        this.defaultPort = 6032;\n        break;\n    }\n  }\n\n  async onSubmit(form) {\n    const currentUrl = `${window.parent.location}`;\n    const newURL = currentUrl.split('/graph/d/').shift() + '/graph/d/pmm-inventory/';\n\n    this.errorMessage = '';\n    this.isSubmitted = true;\n    if (!form.valid) {\n      return;\n    }\n    this.isLoading = true;\n\n    if (this.remoteInstanceCredentials.service_name === undefined || this.remoteInstanceCredentials.service_name === '') {\n      this.remoteInstanceCredentials.service_name = this.remoteInstanceCredentials.address; // set default value for name (like address)\n    }\n\n    if (this.remoteInstanceCredentials.add_node === undefined) {\n      this.remoteInstanceCredentials.add_node = {\n        node_name: this.remoteInstanceCredentials.service_name,\n        node_type: 'REMOTE_NODE'\n      } as AddNodeParams;\n    }\n\n    if (this.remoteInstanceCredentials.port === undefined || this.remoteInstanceCredentials.port === 0) {\n      this.remoteInstanceCredentials.port = this.defaultPort; // set default value for port\n    }\n    if (this.remoteInstanceCredentials.pmm_agent_id === undefined || this.remoteInstanceCredentials.pmm_agent_id === '') {\n      this.remoteInstanceCredentials.pmm_agent_id = 'pmm-server'; // set default value for pmm agent id\n    }\n\n    if (this.customLabels !== undefined) {\n      this.remoteInstanceCredentials.custom_labels = this.extractCustomLabels(this.customLabels);\n    }\n\n    const addObservable: Observable<Object> = this.addRemoteInstanceService.addService(this.remoteInstanceCredentials, this.currentUrl);\n    addObservable.subscribe(value => {\n      this.isLoading = false;\n      window.parent.location.assign(newURL);\n    }, err => {\n      this.errorMessage = err.error.error;\n      this.isLoading = false;\n    })\n  }\n\n  private extractCustomLabels(rawCustomLabels) {\n    const labels = {} as { [key: string]: string };\n    const labelPairs = rawCustomLabels.split('\\n');\n    labelPairs.map(pair => {\n      const [key, value] = pair.split(':');\n      labels[key] = value\n    });\n    return labels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MySQLService } from '../pmm-api-services/services/my-sql.service';\nimport { PostgreSQLService } from '../pmm-api-services/services/postgre-sql.service';\nimport { Observable } from 'rxjs';\nimport { MongoDBService } from '../pmm-api-services/services/mongo-db.service';\nimport { ProxySQLService } from '../pmm-api-services/services/proxy-sql.service';\n\nexport interface AddNodeParams {\n  node_name: string\n  node_type: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE'\n  machine_id?: string\n  distro?: string\n  container_id?: string\n  container_name?: string\n  node_model?: string\n  region?: string\n  az?: string\n  custom_labels?: { [key: string]: string }\n}\n\nexport interface BaseCredentials {\n  node_id?: string\n  add_node?: AddNodeParams\n  address?: string\n  service_name?: string\n  port?: number\n  username?: string\n  password?: string\n  environment?: string\n  replication_set?: string\n  cluster?: string\n  custom_labels?: { [key: string]: string }\n  pmm_agent_id?: string\n  skip_connection_check?: boolean\n  tls?: boolean\n  tls_skip_verify?: boolean\n}\n\nexport interface AddMySQLCredentials extends BaseCredentials {\n  qan_mysql_perfschema?: boolean\n  qan_mysql_slowlog?: boolean\n}\n\nexport interface AddPostgreSQLCredentials extends BaseCredentials {\n  qan_postgresql_pgstatements_agent?: boolean\n}\n\nexport interface AddMongoDBCredentials extends BaseCredentials {\n  qan_mongodb_profiler?: boolean\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AddProxySQLCredentials extends BaseCredentials { }\n\nexport interface NodeContainer {\n  address?: string\n  az?: string\n  container_id?: string\n  container_name?: string\n  custom_labels?: { [key: string]: string }\n  machine_id?: string\n  node_id?: string\n  node_model?: string\n  node_name?: string\n  region?: string\n}\n\nexport interface NodeGeneric {\n  address?: string\n  az?: string\n  custom_labels?: { [key: string]: string }\n  distro?: string\n  machine_id?: string\n  node_id?: string\n  node_model?: string\n  node_name?: string\n  region?: string\n}\n\nexport interface NodeRemote {\n  address?: string\n  az?: string\n  custom_labels?: { [key: string]: string }\n  node_id?: string\n  node_name?: string\n  region?: string\n}\n\nexport interface NodeRemoteAmazon {\n  custom_labels?: { [key: string]: string }\n  instance?: string\n  node_id?: string\n  node_name?: string\n  region?: string\n}\n\nexport interface Node {\n  container?: Array<NodeContainer>\n  generic?: Array<NodeGeneric>\n  remote?: Array<NodeRemote>\n  remote_amazon_rds?: Array<NodeRemoteAmazon>\n}\n\nexport class NodeType {\n  value: string;\n  label: string;\n\n  constructor(value, label) {\n    this.value = value;\n    this.label = label;\n  }\n}\n\nexport interface RemoteInstanceNode {\n  id: number\n  name: string\n  region: string\n}\n\nexport interface RemoteInstanceService {\n  type: string;\n  address: string;\n  port: number;\n  engine: string;\n  engine_version: string;\n}\n\nexport interface RemoteInstance {\n  node: RemoteInstanceNode;\n  service: RemoteInstanceService;\n}\n\n@Injectable()\nexport class AddRemoteInstanceService {\n\n  private httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n  instanceUrlPart: string;\n\n  constructor(\n    private mySQLService: MySQLService,\n    private postgreSQLService: PostgreSQLService,\n    private mongodbService: MongoDBService,\n    private proxySQLService: ProxySQLService\n  ) {\n  }\n  /**\n   * Returns type of remote instance\n   * @param currentUrl current page url\n   */\n  checkInstanceType(currentUrl) {\n    return currentUrl.replace('/add-remote-', '');\n  }\n\n  addService(remoteInstanceCredentials: BaseCredentials, currentUrl: string) {\n    const instanceType = this.checkInstanceType(currentUrl);\n    switch (instanceType) {\n      case 'mysql':\n        return this.mySQLService.AddMySQL(remoteInstanceCredentials);\n      case 'postgresql':\n        return this.postgreSQLService.AddPostgreSQL(remoteInstanceCredentials);\n      case 'mongodb':\n        return this.mongodbService.AddMongoDB(remoteInstanceCredentials);\n      case 'proxysql':\n        return this.proxySQLService.AddProxySQL(remoteInstanceCredentials);\n      default:\n        return Observable.throw({ error: { error: 'unsupported instance type' } });\n    }\n  }\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport { Routes, Router, RouterModule, CanActivate } from '@angular/router';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\n\nimport { QanProfileComponent } from './qan/profile/qan-profile.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AddInstanceComponent } from './add-instance/add-instance.component';\nimport { AddAmazonRDSComponent } from './add-amazon-rds/add-amazon-rds.component';\nimport { InstanceService } from './core/services/instance.service';\nimport { AddRemoteInstanceComponent } from './add-remote-instances/add-remote-instance.component';\nimport { RemoteInstancesListComponent } from './remote-instances-list/remote-instances-list.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { ProfileDetailsComponent } from './qan/profile-details/profile-details.component';\n\n@Injectable()\nexport class RegisteredInstanceGuard implements CanActivate {\n\n  private existsRegisteredInstances: boolean;\n\n  constructor(public instanceService: InstanceService, public router: Router) {\n    this.existsRegisteredInstances = instanceService.dbServers.length > 0;\n  }\n\n  canActivate() {\n    if (!this.existsRegisteredInstances) {\n      this.router.navigate(['add-instance']);\n    }\n    return this.existsRegisteredInstances;\n  }\n}\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'profile', pathMatch: 'full', canActivate: [RegisteredInstanceGuard] },\n  {\n    path: 'profile', component: QanProfileComponent, children: [\n      { path: 'details/:id', component: ProfileDetailsComponent }\n    ]\n  },\n  { path: 'sys-summary', component: SummaryComponent, pathMatch: 'full', canActivate: [RegisteredInstanceGuard] },\n  { path: 'settings', component: SettingsComponent, pathMatch: 'full', canActivate: [RegisteredInstanceGuard] },\n  { path: 'add-instance', component: AddInstanceComponent, pathMatch: 'full' },\n  { path: 'add-amazon-rds', component: AddAmazonRDSComponent, pathMatch: 'full' },\n  { path: 'add-remote-postgresql', component: AddRemoteInstanceComponent, pathMatch: 'full' },\n  { path: 'add-remote-mysql', component: AddRemoteInstanceComponent, pathMatch: 'full' },\n  { path: 'add-remote-mongodb', component: AddRemoteInstanceComponent, pathMatch: 'full' },\n  { path: 'add-remote-proxysql', component: AddRemoteInstanceComponent, pathMatch: 'full' },\n  { path: 'pmm-list', component: RemoteInstancesListComponent, pathMatch: 'full' },\n  { path: 'pmm-inventory', component: InventoryComponent, pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  providers: [RegisteredInstanceGuard],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","<div>\n  <main>\n    <router-outlet></router-outlet>\n  </main>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { InstanceService } from './core/services/instance.service';\nimport { environment } from './environment';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Query Analytics';\n  isDemo = false;\n  hideNav = false;\n  isInstancesListEmpty: boolean;\n  theme = 'app-theme-light';\n\n  constructor(instanceService: InstanceService, @Inject(DOCUMENT) private document) {\n    this.isDemo = environment.demoHosts.indexOf(location.hostname) > -1;\n    // show message how to configure pmm-client.\n    this.hideNav = this.inIframe() || instanceService.dbServers.length === 0;\n  }\n\n  ngOnInit() {\n    let res: any;\n    res = this.getJsonFromUrl();\n    const theme = res.theme || '';\n    if (theme === '') {\n      this.theme = this.getCookie('theme');\n    } else if (theme === 'dark') {\n      this.theme = 'app-theme-dark';\n    } else if (theme === 'light') {\n      this.theme = 'app-theme-light';\n    }\n    this.setCookie('theme', this.theme);\n    this.document.body.className = this.theme;\n  }\n\n  toggleTheme() {\n    this.theme = this.theme === 'app-theme-light' ? 'app-theme-dark' : 'app-theme-light';\n    this.setCookie('theme', this.theme);\n    this.document.body.className = this.theme;\n  }\n\n  /**\n   * inIframe is used to show/hide navbar.\n   */\n  inIframe(): boolean {\n    let inIframe = false;\n    try {\n      inIframe = window.self !== window.top;\n    } catch (e) {\n      inIframe = true;\n    }\n    return inIframe;\n  }\n\n  getCookie(name) {\n    return document.cookie.split('; ').reduce((r, v) => {\n      const parts = v.split('=');\n      return parts[0] === name ? decodeURIComponent(parts[1]) : r;\n    }, '');\n  }\n\n  setCookie(key, value) {\n    const expireDays = moment().utc().add(7, 'y').toString();\n    document.cookie = `${key}=${value}; expires=${expireDays}; path=/`;\n  }\n\n  getJsonFromUrl() {\n    const query = location.search.substr(1);\n    const result = {};\n    query.split('&').forEach(function(part) {\n      const item = part.split('=');\n      result[item[0]] = decodeURIComponent(item[1]);\n    });\n    return result;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { InstanceService } from './core/services/instance.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    HttpClientModule,\n    CoreModule,\n    FormsModule,\n    NgbModule.forRoot(),\n    SharedModule,\n  ],\n  providers: [\n    InstanceService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { JSONTreeComponent } from './json-tree/json-tree.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { InstanceService } from './services/instance.service';\nimport { QanProfileComponent } from '../qan/profile/qan-profile.component';\nimport { QanProfileService } from '../qan/profile/qan-profile.service';\nimport { SummaryComponent } from '../summary/summary.component';\nimport { SummaryService } from '../summary/summary.service';\nimport { SettingsComponent } from '../settings/settings.component';\nimport { SettingsService } from '../settings/settings.service';\nimport { AddAmazonRDSService } from '../add-amazon-rds/add-amazon-rds.service';\nimport { AddRemoteInstanceService } from '../add-remote-instances/add-remote-instance.service';\nimport { RemoteInstancesListService } from '../remote-instances-list/remote-instances-list.service';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { RemoteInstancesListComponent } from '../remote-instances-list/remote-instances-list.component';\nimport { EditColumnComponent } from '../qan/edit-column/edit-column.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FilterMenuComponent } from '../qan/filter-menu/filter-menu.component';\nimport { FilterMenuService } from '../qan/filter-menu/filter-menu.service';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { FilterSearchService } from './services/filter-search.service';\nimport { EditColumnService } from '../qan/edit-column/qan-edit-column.service';\nimport { SearchAutocompleteComponent } from '../qan/search-autocomplete/search-autocomplete.component';\nimport { ProfileDetailsComponent } from '../qan/profile-details/profile-details.component';\nimport { ProfileDetailsService } from '../qan/profile-details/profile-details.service';\nimport { ApiModule } from '../pmm-api-services/api.module';\nimport { InventoryService } from '../inventory/inventory.service';\nimport { NodesService } from '../pmm-api-services/services/nodes.service';\nimport { ServicesService } from '../pmm-api-services/services/services.service';\nimport { AgentsService } from '../pmm-api-services/services/agents.service';\nimport { InventoryComponent } from '../inventory/inventory.component';\nimport { ServicesTableComponent } from '../inventory/services-table/services-table.component';\nimport { AgentsTableComponent } from '../inventory/agents-table/agents-table.component';\nimport { NodesTableComponent } from '../inventory/nodes-table/nodes-table.component';\nimport { TableCellComponent } from '../qan/table-cell/table-cell.component';\nimport { ProfileTableComponent } from '../qan/profile-table/profile-table.component';\nimport { TableHeaderCellComponent } from '../qan/table-header-cell/table-header-cell.component';\nimport { MainCellComponent } from '../qan/main-cell/main-cell.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { DetailsRowComponent } from '../qan/profile-details/components/details-row/details-row.component';\nimport { DetailsLabelsComponent } from '../qan/profile-details/components/details-labels/details-labels.component';\nimport { ExamplesViewerComponent } from '../qan/profile-details/components/examples-viewer/examples-viewer.component';\nimport { QueryExampleComponent } from '../qan/profile-details/components/query-example/query-example.component';\nimport { ExplainComponent } from '../qan/profile-details/components/explain/explain.component';\nimport { FilterMenuViewerComponent } from '../qan/filter-menu-viewer/filter-menu-viewer.component';\nimport { ActionsService } from '../pmm-api-services/services/actions.service';\nimport { TablesComponent } from '../qan/profile-details/components/tables/tables.component';\nimport { TableCreateComponent } from '../qan/profile-details/components/tables/components/table-create/table-create.component';\nimport { TableStatusComponent } from '../qan/profile-details/components/tables/components/table-status/table-status.component';\nimport { DetailsTableComponent } from '../qan/profile-details/components/details-table/details-table.component';\nimport { DetailsFingerprintComponent } from '../qan/profile-details/components/details-fingerprint/details-fingerprint.component';\nimport { TableIndexesComponent } from '../qan/profile-details/components/tables/components/table-indexes/table-indexes.component';\nimport { AddAmazonRDSComponent } from '../add-amazon-rds/add-amazon-rds.component';\nimport { AddRemoteInstanceComponent } from '../add-remote-instances/add-remote-instance.component';\nimport { AddInstanceComponent } from '../add-instance/add-instance.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ClipboardModule,\n    NgSelectModule,\n    NgxPaginationModule,\n    PerfectScrollbarModule,\n    ApiModule\n  ],\n  declarations: [\n    PageNotFoundComponent,\n    QanProfileComponent,\n    FilterMenuComponent,\n    SummaryComponent,\n    SettingsComponent,\n    JSONTreeComponent,\n    SearchAutocompleteComponent,\n    RemoteInstancesListComponent,\n    EditColumnComponent,\n    ProfileDetailsComponent,\n    InventoryComponent,\n    ServicesTableComponent,\n    AgentsTableComponent,\n    NodesTableComponent,\n    ProfileTableComponent,\n    TableHeaderCellComponent,\n    TableCellComponent,\n    MainCellComponent,\n    DetailsRowComponent,\n    DetailsLabelsComponent,\n    ExamplesViewerComponent,\n    QueryExampleComponent,\n    ExplainComponent,\n    FilterMenuViewerComponent,\n    TablesComponent,\n    TableCreateComponent,\n    TableStatusComponent,\n    DetailsTableComponent,\n    DetailsFingerprintComponent,\n    TableIndexesComponent,\n    AddAmazonRDSComponent,\n    AddRemoteInstanceComponent,\n    AddInstanceComponent,\n  ],\n  exports: [\n    PageNotFoundComponent,\n    QanProfileComponent,\n    FilterMenuComponent,\n    SummaryComponent,\n    SettingsComponent,\n    JSONTreeComponent,\n    SearchAutocompleteComponent,\n    RemoteInstancesListComponent,\n    EditColumnComponent,\n    ProfileDetailsComponent,\n    InventoryComponent,\n    ServicesTableComponent,\n    AgentsTableComponent,\n    NodesTableComponent,\n    DetailsRowComponent,\n    DetailsLabelsComponent,\n    ExamplesViewerComponent,\n    QueryExampleComponent,\n    ExplainComponent,\n    FilterMenuViewerComponent,\n    TablesComponent,\n    TableCreateComponent,\n    TableStatusComponent,\n    DetailsTableComponent,\n    DetailsFingerprintComponent,\n    TableIndexesComponent,\n    AddAmazonRDSComponent,\n    AddRemoteInstanceComponent,\n    AddInstanceComponent,\n  ],\n  providers: [\n    InstanceService,\n    QanProfileService,\n    SummaryService,\n    SettingsService,\n    AddAmazonRDSService,\n    AddRemoteInstanceService,\n    ProfileDetailsService,\n    RemoteInstancesListService,\n    EditColumnService,\n    FilterMenuService,\n    FilterSearchService,\n    InventoryService,\n    NodesService,\n    ServicesService,\n    AgentsService,\n    ActionsService,\n  ]\n})\nexport class CoreModule { }\n","<div id=\"json-tree__viewer\"></div>\n<button class=\"button button--inside button--fixed button--expand\"\n        [class.button--inside-active]=\"!isCollapsed\"\n        (click)=\"toggleAll()\">{{isCollapsed ? 'Expand All' : 'Collapse All'}}\n</button>\n","import { Component, Input, OnChanges, ElementRef } from '@angular/core';\nimport * as renderjson from 'renderjson';\n\n@Component({\n  selector: 'app-json-tree',\n  templateUrl: './json-tree.component.html',\n  styleUrls: ['./json-tree.component.scss']\n})\n\nexport class JSONTreeComponent implements OnChanges {\n  public element: ElementRef;\n  public isCollapsed = true;\n\n  @Input() public json: any;\n\n  constructor(element: ElementRef) {\n    this.element = element;\n    renderjson.set_icons('+', '-');\n  }\n\n  /**\n   * Reset state of JSON viewer\n   */\n  ngOnChanges() {\n    this.isCollapsed = true;\n    this.resetJson();\n  }\n\n  /**\n   * Collapse all JSON viewer object\n   */\n  public toggleAll() {\n    this.isCollapsed = !this.isCollapsed;\n    this.resetJson();\n  }\n\n  /**\n   * Reset JSON object for viewer\n   */\n  public resetJson() {\n    renderjson.set_show_to_level(this.isCollapsed ? '' : 'all');\n\n    this.element.nativeElement.querySelector('#json-tree__viewer').innerHTML = '';\n    this.element.nativeElement.querySelector('#json-tree__viewer').appendChild(renderjson(this.json));\n  }\n}\n\n\n","export class ColumnStateModel {\n  name: string;\n  value: boolean;\n\n  constructor(column: any = {}, storedColumns: any = []) {\n    const currentColumn = storedColumns.find(storedColumn => column === storedColumn.name);\n    const columnValue = storedColumns.length && currentColumn ? currentColumn.value : true;\n    this.name = column;\n    this.value = columnValue;\n  }\n}\n","import { ColumnStateModel } from './colum-state.mode';\n\nexport class ColumnConfigModel {\n  name: string;\n  checked: boolean;\n  columns: Array<{}>;\n\n  constructor(config: any, localConfig: any) {\n    const storedColumnsConfig = localConfig && localConfig.columns ? localConfig.columns : [];\n    this.name = config.name;\n    this.checked = localConfig ? localConfig.checked : true;\n    this.columns = config.columns.map(column => new ColumnStateModel(column, storedColumnsConfig));\n  }\n}\n","<div class=\"mx-auto\" style=\"width: 200px;\">\n  <div class=\"alert alert-warning\" role=\"alert\">\n    <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n    Page Not Found\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  private customEvents = {\n    checkFilters: new Event('checkFilters'),\n    copySuccess: new Event('showSuccessNotification'),\n    selectQuery: new Event('selectQuery'),\n    searchQuery: new Event('searchQuery'),\n    updateUrl: new Event('updateUrl'),\n    sendEvent: (event) => setTimeout(() => document.dispatchEvent(event), 0)\n  };\n\n  constructor() { }\n\n  get events() {\n    return this.customEvents;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FilterSearchService {\n\n  constructor() {\n  }\n\n  /**\n   * Search substring in string\n   * @param where - string where need to search\n   * @param what - search value\n   * @return matches string\n   */\n  findBySearch(where: string, what: string) {\n    return this.transformForSearch(where).includes(this.transformForSearch(what));\n  }\n\n  /**\n   * Change current search value for relevant search\n   * @param value\n   */\n  transformForSearch(value: string) {\n    return value.toLowerCase().trim();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Instance {\n  Created: string;\n  DSN: string;\n  Deleted: string;\n  Distro: string;\n  Id: number;\n  Name: string;\n  ParentUUID: string;\n  Subsystem: string;\n  UUID: string;\n  Version: string;\n  Agent?: Instance | null;\n}\n\n@Injectable()\nexport class InstanceService {\n  public dbServers: Array<Instance> = [];\n  public dbServerMap: { [key: string]: Instance } = {};\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventsService } from './events.service';\nimport { QueryParams } from '../../qan/profile/interfaces/query-params.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryParamsService {\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private eventsService: EventsService\n  ) {\n    const queryParams = this.takeParams();\n    if (queryParams.filter_by) {\n      this.router.navigate(['profile/details', queryParams.filter_by], {\n        queryParams: queryParams\n      });\n    }\n  }\n\n  addSelectedToURL(selected) {\n    const params: QueryParams = this.takeParams();\n\n    const parametersGroups = [\n      'az',\n      'city',\n      'client_host',\n      'cluster',\n      'container_id',\n      'container_name',\n      'database',\n      'environment',\n      'machine_id',\n      'node_id',\n      'node_model',\n      'node_name',\n      'node_type',\n      'region',\n      'replication_set',\n      'schema',\n      'service_id',\n      'service_name',\n      'service_type',\n      'username'\n    ];\n\n    parametersGroups.forEach(parameterName => {\n      if (params[`var-${parameterName}`]) {\n        delete params[`var-${parameterName}`];\n      }\n    });\n    selected.forEach(filter => {\n      if (params[`var-${filter.groupName}`]) {\n        params[`var-${filter.groupName}`] = [\n          ...params[`var-${filter.groupName}`],\n          filter.filterName\n        ].filter((value, index, self) => self.indexOf(value) === index);\n      } else {\n        params[`var-${filter.groupName}`] = [filter.filterName];\n      }\n    });\n    console.log(params)\n    this.navigateWithCurrentParams(params);\n  }\n\n  setColumnsToURL(columns) {\n    const params: QueryParams = this.takeParams();\n    params.columns = JSON.stringify(columns);\n    params.main_metric = columns[0];\n    this.navigateWithCurrentParams(params);\n  }\n\n  addSortingOrderToURL(order_by) {\n    const params: QueryParams = this.takeParams();\n    params.order_by = order_by;\n    this.navigateWithCurrentParams(params);\n  }\n\n  addDimension(group_by: string) {\n    const params: QueryParams = this.takeParams();\n    params.group_by = group_by;\n    this.navigateWithCurrentParams(params);\n  }\n\n  addDetailsToURL(filter_by) {\n    const params: QueryParams = this.takeParams();\n    params.filter_by = filter_by;\n    this.navigateWithCurrentParams(params);\n  }\n\n  addActiveTabToUrl(tab_id) {\n    const params: QueryParams = this.takeParams();\n    params.active_details_tab = tab_id;\n    this.navigateWithCurrentParams(params);\n  }\n\n  takeParams(): QueryParams {\n    return this.getJsonFromUrl();\n  }\n\n  navigateWithCurrentParams(params) {\n    console.log(params, 'navigate')\n    const routerLink = this.setRouterLink(params);\n    this.router.navigate(routerLink, { queryParams: params });\n    this.eventsService.events.sendEvent(this.eventsService.events.updateUrl);\n  }\n\n  setRouterLink(params = {}) {\n    const filterBy =\n      this.route.snapshot.queryParams.filter_by || params['filter_by'];\n    console.log(\n      filterBy,\n      this.route.snapshot.queryParams.filter_by,\n      params['filter_by']\n    );\n    return filterBy !== undefined\n      ? ['profile/details/', filterBy]\n      : ['profile'];\n  }\n\n  getJsonFromUrl() {\n    const query = location.search.substr(1);\n    const result = {};\n    console.log(query.split('&'))\n    query.split('&').forEach(function(part) {\n      const [groupName, value] = part.split('=');\n      if (groupName !== '') {\n        if (groupName.startsWith('var-') && result[groupName]) {\n          result[groupName] = [\n            ...result[groupName],\n            decodeURIComponent(value)\n          ].filter((item, index, self) => self.indexOf(item) === item);\n        } else if (groupName.startsWith('var-')) {\n          result[groupName] = [decodeURIComponent(value)];\n        } else {\n          result[groupName] = decodeURIComponent(value);\n        }\n      }\n    });\n    console.log(result)\n    return result;\n  }\n}\n","export const environment = {\n  production: false,\n  demoHosts: ['163.172.51.248', 'pmmdemo.percona.com'],\n  version: '1.0.0'\n};\n","<table class=\"inventory-table\">\n  <tr>\n    <th class=\"inventory-table__cell\">ID</th>\n    <th class=\"inventory-table__cell\">Type</th>\n    <th class=\"inventory-table__cell\">Other Details</th>\n  </tr>\n  <tr *ngFor=\"let agentData of agentsData\">\n    <td class=\"inventory-table__cell\">{{agentData?.agent_id}}</td>\n    <td class=\"inventory-table__cell\">{{agentData.agentType}}</td>\n    <td class=\"inventory-table__cell\">\n      <div class=\"cell__details\">\n        <span *ngIf=\"agentData?.connected\">connected: {{agentData.connected}}</span>\n        <span *ngIf=\"agentData?.runs_on_node_id\">runs_on_node: {{agentData.runs_on_node_id}}</span>\n        <span *ngIf=\"agentData?.metrics_url\">metrics_url: {{agentData.metrics_url}}</span>\n        <span *ngIf=\"agentData?.listen_port\">listen_port: {{agentData.listen_port}}</span>\n        <span *ngIf=\"agentData?.pmm_agent_id\">pmm_agent_id: {{agentData.pmm_agent_id}}</span>\n        <span *ngIf=\"agentData?.service_id\">service_id: {{agentData.service_id}}</span>\n        <span *ngIf=\"agentData?.status\">status: {{agentData.status}}</span>\n        <span *ngIf=\"agentData?.username\">username: {{agentData.username}}</span>\n        <span *ngIf=\"agentData?.username\">password: ******</span>\n        <span *ngIf=\"agentData?.disabled && !isString(agentData?.disabled)\">disabled: {{agentData.disabled}}</span>\n        <span *ngIf=\"agentData?.service_ids?.length\">\n          service_ids: <span *ngFor=\"let service_id of agentData.service_ids\">{{service_id}} </span>\n        </span>\n        <span *ngIf=\"agentsData?.custom_labels?.length\">\n          custom_labels:\n          <span *ngFor=\"let custom_label of agentData.custom_labels\" class=\"point\">\n            {{custom_label.key}}: {{custom_label.value}}</span>\n        </span>\n      </div>\n    </td>\n  </tr>\n</table>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AgentsService } from '../../pmm-api-services/services/agents.service';\nimport { InventoryService } from '../inventory.service';\nimport { AgentsTableService } from './agents-table.service';\n\n@Component({\n  selector: 'app-agents-table',\n  templateUrl: './agents-table.component.html',\n  styleUrls: ['./agents-table.component.scss']\n})\nexport class AgentsTableComponent implements OnInit, OnDestroy {\n  private agentsList$: any;\n  private agentsTableData$: any;\n\n  public agentsData: any;\n\n  constructor(\n    private agentsService: AgentsService,\n    private agentTableService: AgentsTableService,\n    private inventoryService: InventoryService\n  ) {\n    this.agentsList$ = this.agentsService.ListAgents({}).subscribe(item => {\n      const dataStructure = this.inventoryService.generateStructure(item);\n      this.agentTableService.setAgentsData(dataStructure);\n    });\n    this.agentsTableData$ = this.agentTableService.agentsData.subscribe(agents => {\n      if (agents.length) {\n        this.agentsData = agents.filter(agent => !agent.isDeleted);\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.agentsList$.unsubscribe();\n    this.agentsTableData$.unsubscribe();\n  }\n\n  isString(value): boolean {\n    return typeof value === 'string';\n  }\n\n  removeAgents(id) {\n    this.agentsService.RemoveAgent({ agent_id: id }).subscribe(() => {\n      this.agentTableService.setAgentsData(this.agentsData);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgentsTableService {\n  private agentsDataSource = new BehaviorSubject([]);\n\n  constructor() { }\n\n  setAgentsData(data) {\n    this.agentsDataSource.next(data)\n  }\n\n  get agentsData() {\n    return this.agentsDataSource;\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class ExternalExporterModel {\n  agent_id: string;\n  custom_labels: Array<CustomLabelsModel>;\n  metrics_url: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.agent_id = params.agent_id || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.metrics_url = params.metrics_url || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class GeneralDbExporterModel {\n  agent_id: string;\n  custom_labels: Array<CustomLabelsModel>;\n  disabled: boolean | string;\n  listen_port: number;\n  username: string;\n  password: string;\n  pmm_agent_id: string;\n  service_id: string;\n  status: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.agent_id = params.agent_id || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.disabled = params.disabled || '';\n    this.listen_port = params.listen_port || '';\n    this.username = params.username || '';\n    this.password = params.password || '';\n    this.pmm_agent_id = params.pmm_agent_id || '';\n    this.service_id = params.service_id || '';\n    this.status = params.status || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class GeneralQanAgentModel {\n  agent_id: string;\n  custom_labels: Array<CustomLabelsModel>;\n  disabled: boolean | string;\n  password: string;\n  pmm_agent_id: string;\n  service_id: string;\n  status: string;\n  username: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.agent_id = params.agent_id || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.disabled = params.disabled || '';\n    this.password = params.password || '';\n    this.pmm_agent_id = params.pmm_agent_id || '';\n    this.service_id = params.service_id || '';\n    this.status = params.status || '';\n    this.username = params.username || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class NodeExporterModel {\n  agent_id: string;\n  custom_labels: Array<CustomLabelsModel>;\n  disabled: boolean;\n  listen_port: number;\n  pmm_agent_id: string;\n  status: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.agent_id = params.agent_id || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.disabled = params.disabled || '';\n    this.listen_port = params.listen_port || '';\n    this.pmm_agent_id = params.pmm_agent_id || '';\n    this.status = params.status || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class PmmAgentModel {\n  agent_id: string;\n  connected: boolean;\n  custom_labels: Array<CustomLabelsModel>;\n  runs_on_node_id: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.agent_id = params.agent_id || '';\n    this.connected = params.connected || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.runs_on_node_id = params.runs_on_node_id || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class RdsExporterModel {\n  agent_id: string;\n  custom_labels: Array<CustomLabelsModel>;\n  disabled: boolean | string;\n  listen_port: number;\n  pmm_agent_id: string;\n  service_ids: Array<string>;\n  status: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.agent_id = params.agent_id || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.disabled = params.disabled || '';\n    this.listen_port = params.listen_port || '';\n    this.pmm_agent_id = params.pmm_agent_id || '';\n    this.service_ids = params.service_ids && params.service_ids.length ? params.service_ids : [];\n    this.status = params.status || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n\n","export class CustomLabelsModel {\n  key: string;\n  value: string;\n\n  constructor(customLabel) {\n    this.key = customLabel[0];\n    this.value = customLabel[1];\n  }\n}\n","<ngb-tabset class=\"pmm-grafana-tabset\">\n  <ngb-tab title=\"Services\">\n    <ng-template ngbTabContent>\n      <app-services-table></app-services-table>\n    </ng-template>\n  </ngb-tab>\n  <ngb-tab title=\"Agents\">\n    <ng-template ngbTabContent>\n      <app-agents-table></app-agents-table>\n    </ng-template>\n  </ngb-tab>\n  <ngb-tab title=\"Nodes\">\n    <ng-template ngbTabContent>\n      <app-nodes-table></app-nodes-table>\n    </ng-template>\n  </ngb-tab>\n</ngb-tabset>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\n\nexport class InventoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","import { Injectable } from '@angular/core';\nimport { ExternalExporterModel } from './agents-table/models/external-exporter.model';\nimport { GeneralDbExporterModel } from './agents-table/models/general-db-exporter.model';\nimport { NodeExporterModel } from './agents-table/models/node-exporter.model';\nimport { PmmAgentModel } from './agents-table/models/pmm-agent.model';\nimport { RdsExporterModel } from './agents-table/models/rds-exporter.model';\nimport { ContainerModel } from './nodes-table/models/container.model';\nimport { GenericModel } from './nodes-table/models/generic.model';\nimport { RemoteModel } from './nodes-table/models/remote.model';\nimport { RemoteAmazonRdsModel } from './nodes-table/models/remote-amazon-rds.model';\nimport { ServicesGeneralModel } from './services-table/models/services-general.model';\nimport { GeneralQanAgentModel } from './agents-table/models/general-qan-agent.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n\n  constructor() {\n  }\n\n  generateStructure(item) {\n    const addAgentType = Object.keys(item).map(agentType => new Object({ agentType: agentType, params: item[agentType] }));\n    const createParams = addAgentType.map(agent => agent['params'].map(arrItem => this.checkType(arrItem, agent['agentType'])));\n    return [].concat(...createParams);\n  }\n\n  checkType(params, type) {\n    switch (type) {\n      case 'external_exporter':\n        return new ExternalExporterModel(params, 'External exporter');\n      case 'mongodb_exporter':\n      case 'mysqld_exporter':\n      case 'postgres_exporter':\n      case 'proxysql_exporter':\n        return new GeneralDbExporterModel(params, this.humanizeType(type));\n      case 'node_exporter':\n        return new NodeExporterModel(params, 'Node exporter');\n      case 'pmm_agent':\n        return new PmmAgentModel(params, 'PMM Agent');\n      case 'qan_mongodb_profiler_agent':\n      case 'qan_mysql_perfschema_agent':\n      case 'qan_mysql_slowlog_agent':\n      case 'qan_postgresql_pgstatements_agent':\n        return new GeneralQanAgentModel(params, this.humanizeType(type));\n      case 'rds_exporter':\n        return new RdsExporterModel(params, 'RDS exporter');\n      case 'container':\n        return new ContainerModel(params, 'Container');\n      case 'generic':\n        return new GenericModel(params, 'Generic');\n      case 'remote':\n        return new RemoteModel(params, 'Remote');\n      case 'remote_amazon_rds':\n        return new RemoteAmazonRdsModel(params, 'Remote Amazon RDS');\n      case 'amazon_rds_mysql':\n      case 'mongodb':\n      case 'mysql':\n      case 'postgresql':\n      case 'proxysql':\n        return new ServicesGeneralModel(params, this.humanizeType(type));\n      default:\n        return {}\n    }\n  }\n\n  humanizeType(type: string) {\n    switch (type) {\n      case 'mongodb_exporter':\n        return 'MongoDB exporter';\n      case 'mysqld_exporter':\n        return 'MySQL exporter';\n      case 'postgres_exporter':\n        return 'Postgres exporter';\n      case 'proxysql_exporter':\n        return 'ProxySQL exporter';\n      case 'qan_mysql_perfschema_agent':\n        return 'Qan MySQL Perfschema Agent';\n      case 'qan_mongodb_profiler_agent':\n        return 'Qan MongoDB Profiler Agent';\n      case 'qan_mysql_slowlog_agent':\n        return 'Qan MySQL Slowlog Agent';\n      case 'qan_postgresql_pgstatements_agent':\n        return 'QAN PostgreSQL PgStatements Agent';\n      case 'amazon_rds_mysql':\n        return 'Amazon RDS MySQL';\n      case 'mongodb':\n        return 'MongoDB';\n      case 'mysql':\n        return 'MySQL';\n      case 'postgresql':\n        return 'PostgreSQL';\n      case 'proxysql':\n        return 'ProxySQL';\n      default:\n        return '';\n    }\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class ContainerModel {\n  address: string;\n  az: string;\n  docker_container_id: string;\n  docker_container_name: string;\n  custom_labels: Array<CustomLabelsModel>;\n  machine_id: string;\n  node_id: string;\n  node_model: string;\n  node_name: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.address = params.address || '';\n    this.az = params.az || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.docker_container_id = params.docker_container_id || '';\n    this.docker_container_name = params.docker_container_name || '';\n    this.machine_id = params.machine_id || '';\n    this.node_id = params.node_id || '';\n    this.node_model = params.node_model || '';\n    this.node_name = params.node_name || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class GenericModel {\n  address: string;\n  az: string;\n  custom_labels: Array<CustomLabelsModel>;\n  distro: string;\n  distro_version: string;\n  machine_id: string;\n  node_id: string;\n  node_name: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.address = params.address || '';\n    this.az = params.az || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.distro = params.distro || '';\n    this.distro_version = params.distro_version || '';\n    this.machine_id = params.machine_id || '';\n    this.node_id = params.node_id || '';\n    this.node_name = params.node_name || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class RemoteAmazonRdsModel {\n  custom_labels: Array<CustomLabelsModel>;\n  instance: string;\n  node_id: string;\n  node_name: string;\n  region: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.instance = params.instance || '';\n    this.node_id = params.node_id || '';\n    this.node_name = params.node_name || '';\n    this.region = params.region || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class RemoteModel {\n  custom_labels: Array<CustomLabelsModel>;\n  node_id: string;\n  node_name: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.node_id = params.node_id || '';\n    this.node_name = params.node_name || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n","<table class=\"inventory-table\">\n  <tr>\n    <th class=\"inventory-table__cell\">ID</th>\n    <th class=\"inventory-table__cell\">Node Name</th>\n    <th class=\"inventory-table__cell\">Address</th>\n    <th class=\"inventory-table__cell\">Other Details</th>\n  </tr>\n  <tr *ngFor=\"let nodeData of nodesData\">\n    <td class=\"inventory-table__cell\">{{nodeData?.node_id}}</td>\n    <td class=\"inventory-table__cell\">{{nodeData?.node_name}}</td>\n    <td class=\"inventory-table__cell\">{{nodeData?.address}}</td>\n    <td class=\"inventory-table__cell\">\n      <div class=\"cell__details\">\n        <span *ngIf=\"nodeData?.docker_container_id\">docker_container_id: {{nodeData.docker_container_id}}</span>\n        <span *ngIf=\"nodeData?.docker_container_name\">docker_container_name: {{nodeData.docker_container_name}}</span>\n        <span *ngIf=\"nodeData?.machine_id\">machine_id: {{nodeData.machine_id}}</span>\n        <span *ngIf=\"nodeData?.distro\">distro: {{nodeData.distro}}</span>\n        <span *ngIf=\"nodeData?.distro_version\">distro_version: {{nodeData.distro_version}}</span>\n        <span *ngIf=\"nodeData?.node_id\">node_id: {{nodeData.node_id}}</span>\n        <span *ngIf=\"nodeData?.node_name\">node_name: {{nodeData.node_name}}</span>\n        <span *ngIf=\"nodeData?.instance\">instance: {{nodeData.instance}}</span>\n        <span *ngIf=\"nodeData?.region\">region: {{nodeData.region}}</span>\n        <span *ngIf=\"nodeData?.address\">address: {{nodeData.address}}</span>\n        <span *ngIf=\"nodeData?.custom_labels?.length\">\n          custom_labels:\n          <span *ngFor=\"let custom_label of nodeData.custom_labels\" class=\"point\">\n            {{custom_label.key}}: {{custom_label.value}}\n          </span>\n        </span>\n      </div>\n    </td>\n  </tr>\n</table>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NodesService } from '../../pmm-api-services/services/nodes.service';\nimport { InventoryService } from '../inventory.service';\nimport { NodesTableService } from './nodes-table.service';\n\n@Component({\n  selector: 'app-nodes-table',\n  templateUrl: './nodes-table.component.html',\n  styleUrls: ['./nodes-table.component.scss']\n})\nexport class NodesTableComponent implements OnInit, OnDestroy {\n  private nodesList$: any;\n  private nodesTableData$: any;\n\n  public nodesData: any;\n\n  constructor(\n    private nodesService: NodesService,\n    private nodesTableService: NodesTableService,\n    private inventoryService: InventoryService\n  ) {\n    this.nodesList$ = this.nodesService.ListNodes({}).subscribe(item => {\n      const dataStructure = this.inventoryService.generateStructure(item);\n      this.nodesTableService.setNodesData(dataStructure);\n    });\n    this.nodesTableData$ = this.nodesTableService.nodesData.subscribe(nodes => {\n      if (nodes.length) {\n        this.nodesData = nodes.filter(agent => !agent.isDeleted);\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.nodesList$.unsubscribe();\n    this.nodesTableData$.unsubscribe();\n  }\n\n  removeNode(id) {\n    this.nodesService.RemoveNode({ node_id: id }).subscribe(\n      () => this.nodesTableService.setNodesData(this.nodesData)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodesTableService {\n  private nodesDataSource = new BehaviorSubject([]);\n\n  constructor() { }\n\n  setNodesData(data) {\n    this.nodesDataSource.next(data)\n  }\n\n  get nodesData() {\n    return this.nodesDataSource;\n  }\n}\n","import { CustomLabelsModel } from '../../custom-labels.model';\n\nexport class ServicesGeneralModel {\n  address: string;\n  cluster: string;\n  custom_labels: Array<CustomLabelsModel>;\n  environment: string;\n  node_id: string;\n  port: number;\n  replication_set: string;\n  service_id: string;\n  service_name: string;\n  agentType: string;\n  isDeleted: boolean;\n\n  constructor(params, type) {\n    this.address = params.address || '';\n    this.cluster = params.cluster || '';\n    this.custom_labels = params.custom_labels && Object.keys(params.custom_labels).length ?\n      Object.entries(params.custom_labels).map(item => new CustomLabelsModel(item)) : [];\n    this.environment = params.environment || '';\n    this.node_id = params.node_id || '';\n    this.port = params.port || '';\n    this.replication_set = params.replication_set || '';\n    this.service_id = params.service_id || '';\n    this.service_name = params.service_name || '';\n    this.agentType = type;\n    this.isDeleted = false;\n  }\n}\n","<table class=\"inventory-table\">\n  <tr>\n    <th class=\"inventory-table__cell\">ID</th>\n    <th class=\"inventory-table__cell\">Type</th>\n    <th class=\"inventory-table__cell\">Service Name</th>\n    <th class=\"inventory-table__cell\">Node ID</th>\n    <th class=\"inventory-table__cell\">Addresses</th>\n    <th class=\"inventory-table__cell\">Port</th>\n    <th class=\"inventory-table__cell\">Other Details</th>\n  </tr>\n  <tr *ngFor=\"let serviceData of servicesData\">\n    <td class=\"inventory-table__cell\">{{serviceData?.service_id}}</td>\n    <td class=\"inventory-table__cell\">{{serviceData.agentType}}</td>\n    <td class=\"inventory-table__cell\">{{serviceData?.service_name}}</td>\n    <td class=\"inventory-table__cell\">{{serviceData?.node_id}}</td>\n    <td class=\"inventory-table__cell\">{{serviceData?.address}}</td>\n    <td class=\"inventory-table__cell\">{{serviceData?.port}}</td>\n    <td class=\"inventory-table__cell\">\n      <div class=\"cell__details\">\n        <span *ngIf=\"serviceData?.custom_labels?.length\">\n          custom_labels:\n          <span *ngFor=\"let custom_label of serviceData.custom_labels\" class=\"point\">\n            {{custom_label.key}}: {{custom_label.value}}\n          </span>\n        </span>\n      </div>\n    </td>\n  </tr>\n</table>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ServicesService } from '../../pmm-api-services/services/services.service';\nimport { InventoryService } from '../inventory.service';\nimport { ServicesTableService } from './services-table.service';\n\n@Component({\n  selector: 'app-services-table',\n  templateUrl: './services-table.component.html',\n  styleUrls: ['./services-table.component.scss']\n})\nexport class ServicesTableComponent implements OnInit, OnDestroy {\n  private servicesList$: any;\n  private servicesTableData$: any;\n\n  public servicesData: any;\n\n  constructor(\n    private servicesService: ServicesService,\n    private servicesTableService: ServicesTableService,\n    private inventoryService: InventoryService\n  ) {\n    this.servicesList$ = this.servicesService.ListServices({}).subscribe(item => {\n      const dataStructure = this.inventoryService.generateStructure(item);\n      this.servicesTableService.setServicesData(dataStructure);\n    });\n    this.servicesTableData$ = this.servicesTableService.servicesData.subscribe(services => {\n      if (services.length) {\n        this.servicesData = services.filter(agent => !agent.isDeleted);\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.servicesList$.unsubscribe();\n    this.servicesTableData$.unsubscribe();\n  }\n\n  removeService(id) {\n    this.servicesService.RemoveService({ service_id: id }).subscribe(\n      () => this.servicesTableService.setServicesData(this.servicesData)\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesTableService {\n  private servicesDataSource = new BehaviorSubject([]);\n\n  constructor() { }\n\n  setServicesData(data) {\n    this.servicesDataSource.next(data)\n  }\n\n  get servicesData() {\n    return this.servicesDataSource;\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n\n/**\n * Global configuration for Api services\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = '';\n}\n\nexport interface ApiConfigurationInterface {\n  rootUrl?: string;\n}\n","/* tslint:disable */\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiConfiguration, ApiConfigurationInterface } from './api-configuration';\n\nimport { FiltersService } from './services/filters.service';\nimport { MetricsNamesService } from './services/metrics-names.service';\nimport { ProfileService } from './services/profile.service';\nimport { ObjectDetailsService } from './services/object-details.service';\nimport { ServerService } from './services/server.service';\nimport { AgentsService } from './services/agents.service';\nimport { NodesService } from './services/nodes.service';\nimport { ServicesService } from './services/services.service';\nimport { ActionsService } from './services/actions.service';\nimport { MongoDBService } from './services/mongo-db.service';\nimport { MySQLService } from './services/my-sql.service';\nimport { NodeService } from './services/node.service';\nimport { PostgreSQLService } from './services/postgre-sql.service';\nimport { ProxySQLService } from './services/proxy-sql.service';\nimport { ServiceService } from './services/service.service';\n\n/**\n * Provider for all Api services, plus ApiConfiguration\n */\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  exports: [\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    ApiConfiguration,\n    FiltersService,\n    MetricsNamesService,\n    ProfileService,\n    ObjectDetailsService,\n    ServerService,\n    AgentsService,\n    NodesService,\n    ServicesService,\n    ActionsService,\n    MongoDBService,\n    MySQLService,\n    NodeService,\n    PostgreSQLService,\n    ProxySQLService,\n    ServiceService\n  ],\n})\nexport class ApiModule {\n  static forRoot(customParams: ApiConfigurationInterface): ModuleWithProviders {\n    return {\n      ngModule: ApiModule,\n      providers: [\n        {\n          provide: ApiConfiguration,\n          useValue: { rootUrl: customParams.rootUrl }\n        }\n      ]\n    }\n  }\n}\n","/* tslint:disable */\nimport { HttpClient, HttpParameterCodec, HttpParams } from '@angular/common/http';\nimport { ApiConfiguration } from './api-configuration';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst PARAMETER_CODEC = new ParameterCodec();\n\n/**\n * Base class for API services\n */\nexport class BaseService {\n  constructor(\n    protected config: ApiConfiguration,\n    protected http: HttpClient\n  ) {\n  }\n\n  private _rootUrl: string = '';\n\n  /**\n   * Returns the root url for API operations. If not set directly in this\n   * service, will fallback to ApiConfiguration.rootUrl.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n\n  /**\n   * Creates a new `HttpParams` with the correct codec\n   */\n  protected newParams(): HttpParams {\n    return new HttpParams({\n      encoder: PARAMETER_CODEC\n    });\n  }\n}\n","export { FiltersService } from './services/filters.service';\nexport { MetricsNamesService } from './services/metrics-names.service';\nexport { ProfileService } from './services/profile.service';\nexport { ObjectDetailsService } from './services/object-details.service';\nexport { ServerService } from './services/server.service';\nexport { AgentsService } from './services/agents.service';\nexport { NodesService } from './services/nodes.service';\nexport { ServicesService } from './services/services.service';\nexport { ActionsService } from './services/actions.service';\nexport { MongoDBService } from './services/mongo-db.service';\nexport { MySQLService } from './services/my-sql.service';\nexport { NodeService } from './services/node.service';\nexport { PostgreSQLService } from './services/postgre-sql.service';\nexport { ProxySQLService } from './services/proxy-sql.service';\nexport { ServiceService } from './services/service.service';\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass ActionsService extends __BaseService {\n  static readonly CancelActionPath = '/v1/management/Actions/Cancel';\n  static readonly GetActionPath = '/v1/management/Actions/Get';\n  static readonly StartMySQLExplainActionPath = '/v1/management/Actions/StartMySQLExplain';\n  static readonly StartMySQLExplainJSONActionPath = '/v1/management/Actions/StartMySQLExplainJSON';\n  static readonly StartMySQLExplainTraditionalJSONActionPath = '/v1/management/Actions/StartMySQLExplainTraditionalJSON';\n  static readonly StartMySQLShowCreateTableActionPath = '/v1/management/Actions/StartMySQLShowCreateTable';\n  static readonly StartMySQLShowIndexActionPath = '/v1/management/Actions/StartMySQLShowIndex';\n  static readonly StartMySQLShowTableStatusActionPath = '/v1/management/Actions/StartMySQLShowTableStatus';\n  static readonly StartPostgreSQLShowCreateTableActionPath = '/v1/management/Actions/StartPostgreSQLShowCreateTable';\n  static readonly StartPostgreSQLShowIndexActionPath = '/v1/management/Actions/StartPostgreSQLShowIndex';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  CancelActionResponse(body: { action_id?: string }): __Observable<__StrictHttpResponse<{}>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/Cancel`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{}>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  CancelAction(body: { action_id?: string }): __Observable<{}> {\n    return this.CancelActionResponse(body).pipe(\n      __map(_r => _r.body as {})\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetActionResponse(body: { action_id?: string }): __Observable<__StrictHttpResponse<{ action_id?: string, done?: boolean, error?: string, output?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/Get`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, done?: boolean, error?: string, output?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetAction(body: { action_id?: string }): __Observable<{ action_id?: string, done?: boolean, error?: string, output?: string, pmm_agent_id?: string }> {\n    return this.GetActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, done?: boolean, error?: string, output?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLExplainActionResponse(body: { database?: string, pmm_agent_id?: string, query?: string, service_id?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartMySQLExplain`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLExplainAction(body: { database?: string, pmm_agent_id?: string, query?: string, service_id?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartMySQLExplainActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLExplainJSONActionResponse(body: { database?: string, pmm_agent_id?: string, query?: string, service_id?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartMySQLExplainJSON`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLExplainJSONAction(body: { database?: string, pmm_agent_id?: string, query?: string, service_id?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartMySQLExplainJSONActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLExplainTraditionalJSONActionResponse(body: { database?: string, pmm_agent_id?: string, query?: string, service_id?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartMySQLExplainTraditionalJSON`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLExplainTraditionalJSONAction(body: { database?: string, pmm_agent_id?: string, query?: string, service_id?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartMySQLExplainTraditionalJSONActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLShowCreateTableActionResponse(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartMySQLShowCreateTable`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLShowCreateTableAction(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartMySQLShowCreateTableActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLShowIndexActionResponse(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartMySQLShowIndex`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLShowIndexAction(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartMySQLShowIndexActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLShowTableStatusActionResponse(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartMySQLShowTableStatus`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartMySQLShowTableStatusAction(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartMySQLShowTableStatusActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartPostgreSQLShowCreateTableActionResponse(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartPostgreSQLShowCreateTable`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartPostgreSQLShowCreateTableAction(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartPostgreSQLShowCreateTableActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartPostgreSQLShowIndexActionResponse(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<__StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Actions/StartPostgreSQLShowIndex`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ action_id?: string, pmm_agent_id?: string }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartPostgreSQLShowIndexAction(body: { database?: string, pmm_agent_id?: string, service_id?: string, table_name?: string, tls?: boolean, tls_skip_verify?: boolean }): __Observable<{ action_id?: string, pmm_agent_id?: string }> {\n    return this.StartPostgreSQLShowIndexActionResponse(body).pipe(\n      __map(_r => _r.body as { action_id?: string, pmm_agent_id?: string })\n    );\n  }\n}\n\nmodule ActionsService {\n}\n\nexport { ActionsService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass AgentsService extends __BaseService {\n  static readonly AddMongoDBExporterPath = '/v1/inventory/Agents/AddMongoDBExporter';\n  static readonly AddMySQLdExporterPath = '/v1/inventory/Agents/AddMySQLdExporter';\n  static readonly AddNodeExporterPath = '/v1/inventory/Agents/AddNodeExporter';\n  static readonly AddPMMAgentPath = '/v1/inventory/Agents/AddPMMAgent';\n  static readonly AddPostgresExporterPath = '/v1/inventory/Agents/AddPostgresExporter';\n  static readonly AddProxySQLExporterPath = '/v1/inventory/Agents/AddProxySQLExporter';\n  static readonly AddQANMongoDBProfilerAgentPath = '/v1/inventory/Agents/AddQANMongoDBProfilerAgent';\n  static readonly AddQANMySQLPerfSchemaAgentPath = '/v1/inventory/Agents/AddQANMySQLPerfSchemaAgent';\n  static readonly AddQANMySQLSlowlogAgentPath = '/v1/inventory/Agents/AddQANMySQLSlowlogAgent';\n  static readonly AddQANPostgreSQLPgStatementsAgentPath = '/v1/inventory/Agents/AddQANPostgreSQLPgStatementsAgent';\n  static readonly ChangeMongoDBExporterPath = '/v1/inventory/Agents/ChangeMongoDBExporter';\n  static readonly ChangeMySQLdExporterPath = '/v1/inventory/Agents/ChangeMySQLdExporter';\n  static readonly ChangeNodeExporterPath = '/v1/inventory/Agents/ChangeNodeExporter';\n  static readonly ChangePostgresExporterPath = '/v1/inventory/Agents/ChangePostgresExporter';\n  static readonly ChangeProxySQLExporterPath = '/v1/inventory/Agents/ChangeProxySQLExporter';\n  static readonly ChangeQANMongoDBProfilerAgentPath = '/v1/inventory/Agents/ChangeQANMongoDBProfilerAgent';\n  static readonly ChangeQANMySQLPerfSchemaAgentPath = '/v1/inventory/Agents/ChangeQANMySQLPerfSchemaAgent';\n  static readonly ChangeQANMySQLSlowlogAgentPath = '/v1/inventory/Agents/ChangeQANMySQLSlowlogAgent';\n  static readonly ChangeQANPostgreSQLPgStatementsAgentPath = '/v1/inventory/Agents/ChangeQANPostgreSQLPgStatementsAgent';\n  static readonly GetAgentPath = '/v1/inventory/Agents/Get';\n  static readonly ListAgentsPath = '/v1/inventory/Agents/List';\n  static readonly RemoveAgentPath = '/v1/inventory/Agents/Remove';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMongoDBExporterResponse(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddMongoDBExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMongoDBExporter(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddMongoDBExporterResponse(body).pipe(\n      __map(_r => _r.body as { mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMySQLdExporterResponse(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddMySQLdExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMySQLdExporter(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddMySQLdExporterResponse(body).pipe(\n      __map(_r => _r.body as { mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddNodeExporterResponse(body: { custom_labels?: { [key: string]: string }, pmm_agent_id?: string }): __Observable<__StrictHttpResponse<{ node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddNodeExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddNodeExporter(body: { custom_labels?: { [key: string]: string }, pmm_agent_id?: string }): __Observable<{ node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } }> {\n    return this.AddNodeExporterResponse(body).pipe(\n      __map(_r => _r.body as { node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPMMAgentResponse(body: { custom_labels?: { [key: string]: string }, runs_on_node_id?: string }): __Observable<__StrictHttpResponse<{ pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddPMMAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPMMAgent(body: { custom_labels?: { [key: string]: string }, runs_on_node_id?: string }): __Observable<{ pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } }> {\n    return this.AddPMMAgentResponse(body).pipe(\n      __map(_r => _r.body as { pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPostgresExporterResponse(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddPostgresExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPostgresExporter(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddPostgresExporterResponse(body).pipe(\n      __map(_r => _r.body as { postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddProxySQLExporterResponse(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddProxySQLExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddProxySQLExporter(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddProxySQLExporterResponse(body).pipe(\n      __map(_r => _r.body as { proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANMongoDBProfilerAgentResponse(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddQANMongoDBProfilerAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANMongoDBProfilerAgent(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddQANMongoDBProfilerAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANMySQLPerfSchemaAgentResponse(body: { custom_labels?: { [key: string]: string }, disable_query_examples?: boolean, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddQANMySQLPerfSchemaAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANMySQLPerfSchemaAgent(body: { custom_labels?: { [key: string]: string }, disable_query_examples?: boolean, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddQANMySQLPerfSchemaAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANMySQLSlowlogAgentResponse(body: { custom_labels?: { [key: string]: string }, disable_query_examples?: boolean, max_slowlog_file_size?: string, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddQANMySQLSlowlogAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANMySQLSlowlogAgent(body: { custom_labels?: { [key: string]: string }, disable_query_examples?: boolean, max_slowlog_file_size?: string, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddQANMySQLSlowlogAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANPostgreSQLPgStatementsAgentResponse(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/AddQANPostgreSQLPgStatementsAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddQANPostgreSQLPgStatementsAgent(body: { custom_labels?: { [key: string]: string }, password?: string, pmm_agent_id?: string, service_id?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.AddQANPostgreSQLPgStatementsAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeMongoDBExporterResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeMongoDBExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeMongoDBExporter(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangeMongoDBExporterResponse(body).pipe(\n      __map(_r => _r.body as { mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeMySQLdExporterResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeMySQLdExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeMySQLdExporter(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangeMySQLdExporterResponse(body).pipe(\n      __map(_r => _r.body as { mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeNodeExporterResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeNodeExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeNodeExporter(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } }> {\n    return this.ChangeNodeExporterResponse(body).pipe(\n      __map(_r => _r.body as { node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangePostgresExporterResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangePostgresExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangePostgresExporter(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangePostgresExporterResponse(body).pipe(\n      __map(_r => _r.body as { postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeProxySQLExporterResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeProxySQLExporter`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeProxySQLExporter(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangeProxySQLExporterResponse(body).pipe(\n      __map(_r => _r.body as { proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANMongoDBProfilerAgentResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeQANMongoDBProfilerAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANMongoDBProfilerAgent(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangeQANMongoDBProfilerAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANMySQLPerfSchemaAgentResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeQANMySQLPerfSchemaAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANMySQLPerfSchemaAgent(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangeQANMySQLPerfSchemaAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANMySQLSlowlogAgentResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeQANMySQLSlowlogAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANMySQLSlowlogAgent(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangeQANMySQLSlowlogAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANPostgreSQLPgStatementsAgentResponse(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<__StrictHttpResponse<{ qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/ChangeQANPostgreSQLPgStatementsAgent`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeQANPostgreSQLPgStatementsAgent(body: { agent_id?: string, common?: { custom_labels?: { [key: string]: string }, disabled?: boolean, enabled?: boolean, remove_custom_labels?: boolean } }): __Observable<{ qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.ChangeQANPostgreSQLPgStatementsAgentResponse(body).pipe(\n      __map(_r => _r.body as { qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetAgentResponse(body: { agent_id?: string }): __Observable<__StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }, postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/Get`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }, postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetAgent(body: { agent_id?: string }): __Observable<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }, postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } }> {\n    return this.GetAgentResponse(body).pipe(\n      __map(_r => _r.body as { mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, node_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }, postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ListAgentsResponse(body: { node_id?: string, pmm_agent_id?: string, service_id?: string }): __Observable<__StrictHttpResponse<{ mongodb_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, mysqld_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, node_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }>, pmm_agent?: Array<{ agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }>, postgres_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, proxysql_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mongodb_profiler_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_perfschema_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_slowlog_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_postgresql_pgstatements_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }> }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/List`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, mysqld_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, node_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }>, pmm_agent?: Array<{ agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }>, postgres_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, proxysql_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mongodb_profiler_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_perfschema_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_slowlog_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_postgresql_pgstatements_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }> }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ListAgents(body: { node_id?: string, pmm_agent_id?: string, service_id?: string }): __Observable<{ mongodb_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, mysqld_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, node_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }>, pmm_agent?: Array<{ agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }>, postgres_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, proxysql_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mongodb_profiler_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_perfschema_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_slowlog_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_postgresql_pgstatements_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }> }> {\n    return this.ListAgentsResponse(body).pipe(\n      __map(_r => _r.body as { mongodb_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, mysqld_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, node_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE' }>, pmm_agent?: Array<{ agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string }>, postgres_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, proxysql_exporter?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mongodb_profiler_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_perfschema_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_mysql_slowlog_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }>, qan_postgresql_pgstatements_agent?: Array<{ agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }> })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveAgentResponse(body: { agent_id?: string, force?: boolean }): __Observable<__StrictHttpResponse<{}>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Agents/Remove`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{}>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveAgent(body: { agent_id?: string, force?: boolean }): __Observable<{}> {\n    return this.RemoveAgentResponse(body).pipe(\n      __map(_r => _r.body as {})\n    );\n  }\n}\n\nmodule AgentsService {\n}\n\nexport { AgentsService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass FiltersService extends __BaseService {\n  static readonly GetPath = '/v0/qan/Filters/Get';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetResponse(body: { main_metric_name?: string, period_start_from?: string, period_start_to?: string }): __Observable<__StrictHttpResponse<{ labels?: { [key: string]: { name?: Array<{ main_metric_per_sec?: number, main_metric_percent?: number, value?: string }> } } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v0/qan/Filters/Get`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ labels?: { [key: string]: { name?: Array<{ main_metric_per_sec?: number, main_metric_percent?: number, value?: string }> } } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  Get(body: { main_metric_name?: string, period_start_from?: string, period_start_to?: string }): __Observable<{ labels?: { [key: string]: { name?: Array<{ main_metric_per_sec?: number, main_metric_percent?: number, value?: string }> } } }> {\n    return this.GetResponse(body).pipe(\n      __map(_r => _r.body as { labels?: { [key: string]: { name?: Array<{ main_metric_per_sec?: number, main_metric_percent?: number, value?: string }> } } })\n    );\n  }\n}\n\nmodule FiltersService {\n}\n\nexport { FiltersService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass MetricsNamesService extends __BaseService {\n  static readonly GetMetricsNamesPath = '/v0/qan/GetMetricsNames';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetMetricsNamesResponse(body: {}): __Observable<__StrictHttpResponse<{ data?: { [key: string]: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v0/qan/GetMetricsNames`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ data?: { [key: string]: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetMetricsNames(body: {}): __Observable<{ data?: { [key: string]: string } }> {\n    return this.GetMetricsNamesResponse(body).pipe(\n      __map(_r => _r.body as { data?: { [key: string]: string } })\n    );\n  }\n}\n\nmodule MetricsNamesService {\n}\n\nexport { MetricsNamesService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass MongoDBService extends __BaseService {\n  static readonly AddMongoDBPath = '/v1/management/MongoDB/Add';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMongoDBResponse(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, qan_mongodb_profiler?: boolean, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/MongoDB/Add`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMongoDB(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, qan_mongodb_profiler?: boolean, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddMongoDBResponse(body).pipe(\n      __map(_r => _r.body as { mongodb_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mongodb_profiler?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n}\n\nmodule MongoDBService {\n}\n\nexport { MongoDBService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass MySQLService extends __BaseService {\n  static readonly AddMySQLPath = '/v1/management/MySQL/Add';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMySQLResponse(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, disable_query_examples?: boolean, environment?: string, max_slowlog_file_size?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, qan_mysql_perfschema?: boolean, qan_mysql_slowlog?: boolean, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/MySQL/Add`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMySQL(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, disable_query_examples?: boolean, environment?: string, max_slowlog_file_size?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, qan_mysql_perfschema?: boolean, qan_mysql_slowlog?: boolean, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddMySQLResponse(body).pipe(\n      __map(_r => _r.body as { mysqld_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_perfschema?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_mysql_slowlog?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, max_slowlog_file_size?: string, pmm_agent_id?: string, query_examples_disabled?: boolean, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n}\n\nmodule MySQLService {\n}\n\nexport { MySQLService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass NodeService extends __BaseService {\n  static readonly RegisterNodePath = '/v1/management/Node/Register';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RegisterNodeResponse(body: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string, reregister?: boolean }): __Observable<__StrictHttpResponse<{ container_node?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic_node?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Node/Register`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ container_node?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic_node?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RegisterNode(body: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string, reregister?: boolean }): __Observable<{ container_node?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic_node?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } }> {\n    return this.RegisterNodeResponse(body).pipe(\n      __map(_r => _r.body as { container_node?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic_node?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, pmm_agent?: { agent_id?: string, connected?: boolean, custom_labels?: { [key: string]: string }, runs_on_node_id?: string } })\n    );\n  }\n}\n\nmodule NodeService {\n}\n\nexport { NodeService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass NodesService extends __BaseService {\n  static readonly AddContainerNodePath = '/v1/inventory/Nodes/AddContainer';\n  static readonly AddGenericNodePath = '/v1/inventory/Nodes/AddGeneric';\n  static readonly AddRemoteNodePath = '/v1/inventory/Nodes/AddRemote';\n  static readonly GetNodePath = '/v1/inventory/Nodes/Get';\n  static readonly ListNodesPath = '/v1/inventory/Nodes/List';\n  static readonly RemoveNodePath = '/v1/inventory/Nodes/Remove';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddContainerNodeResponse(body: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_model?: string, node_name?: string, region?: string }): __Observable<__StrictHttpResponse<{ container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Nodes/AddContainer`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddContainerNode(body: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_model?: string, node_name?: string, region?: string }): __Observable<{ container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } }> {\n    return this.AddContainerNodeResponse(body).pipe(\n      __map(_r => _r.body as { container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddGenericNodeResponse(body: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, region?: string }): __Observable<__StrictHttpResponse<{ generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Nodes/AddGeneric`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddGenericNode(body: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, region?: string }): __Observable<{ generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } }> {\n    return this.AddGenericNodeResponse(body).pipe(\n      __map(_r => _r.body as { generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddRemoteNodeResponse(body: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_model?: string, node_name?: string, region?: string }): __Observable<__StrictHttpResponse<{ remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Nodes/AddRemote`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddRemoteNode(body: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_model?: string, node_name?: string, region?: string }): __Observable<{ remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } }> {\n    return this.AddRemoteNodeResponse(body).pipe(\n      __map(_r => _r.body as { remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetNodeResponse(body: { node_id?: string }): __Observable<__StrictHttpResponse<{ container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Nodes/Get`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetNode(body: { node_id?: string }): __Observable<{ container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } }> {\n    return this.GetNodeResponse(body).pipe(\n      __map(_r => _r.body as { container?: { address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, generic?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }, remote?: { address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ListNodesResponse(body: {}): __Observable<__StrictHttpResponse<{ container?: Array<{ address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, generic?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, remote?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string }> }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Nodes/List`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ container?: Array<{ address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, generic?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, remote?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string }> }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ListNodes(body: {}): __Observable<{ container?: Array<{ address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, generic?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, remote?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string }> }> {\n    return this.ListNodesResponse(body).pipe(\n      __map(_r => _r.body as { container?: Array<{ address?: string, az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, generic?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_id?: string, node_model?: string, node_name?: string, region?: string }>, remote?: Array<{ address?: string, az?: string, custom_labels?: { [key: string]: string }, node_id?: string, node_model?: string, node_name?: string, region?: string }> })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveNodeResponse(body: { force?: boolean, node_id?: string }): __Observable<__StrictHttpResponse<{}>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Nodes/Remove`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{}>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveNode(body: { force?: boolean, node_id?: string }): __Observable<{}> {\n    return this.RemoveNodeResponse(body).pipe(\n      __map(_r => _r.body as {})\n    );\n  }\n}\n\nmodule NodesService {\n}\n\nexport { NodesService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass ObjectDetailsService extends __BaseService {\n  static readonly GetLabelsPath = '/v0/qan/ObjectDetails/GetLabels';\n  static readonly GetMetricsPath = '/v0/qan/ObjectDetails/GetMetrics';\n  static readonly GetQueryExamplePath = '/v0/qan/ObjectDetails/GetQueryExample';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetLabelsResponse(body: { filter_by?: string, group_by?: string, period_start_from?: string, period_start_to?: string }): __Observable<__StrictHttpResponse<{ labels?: { [key: string]: { values?: Array<string> } } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v0/qan/ObjectDetails/GetLabels`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ labels?: { [key: string]: { values?: Array<string> } } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetLabels(body: { filter_by?: string, group_by?: string, period_start_from?: string, period_start_to?: string }): __Observable<{ labels?: { [key: string]: { values?: Array<string> } } }> {\n    return this.GetLabelsResponse(body).pipe(\n      __map(_r => _r.body as { labels?: { [key: string]: { values?: Array<string> } } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetMetricsResponse(body: { filter_by?: string, group_by?: string, include_only_fields?: Array<string>, labels?: Array<{ key?: string, value?: Array<string> }>, period_start_from?: string, period_start_to?: string }): __Observable<__StrictHttpResponse<{ metrics?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } }, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }>, totals?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v0/qan/ObjectDetails/GetMetrics`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ metrics?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } }, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }>, totals?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetMetrics(body: { filter_by?: string, group_by?: string, include_only_fields?: Array<string>, labels?: Array<{ key?: string, value?: Array<string> }>, period_start_from?: string, period_start_to?: string }): __Observable<{ metrics?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } }, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }>, totals?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } } }> {\n    return this.GetMetricsResponse(body).pipe(\n      __map(_r => _r.body as { metrics?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } }, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }>, totals?: { [key: string]: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, percent_of_total?: number, rate?: number, sum?: number } } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetQueryExampleResponse(body: { filter_by?: string, group_by?: string, labels?: Array<{ key?: string, value?: Array<string> }>, limit?: number, period_start_from?: string, period_start_to?: string }): __Observable<__StrictHttpResponse<{ query_examples?: Array<{ example?: string, example_format?: 'EXAMPLE_FORMAT_INVALID' | 'EXAMPLE' | 'FINGERPRINT', example_metrics?: string, example_type?: 'EXAMPLE_TYPE_INVALID' | 'RANDOM' | 'SLOWEST' | 'FASTEST' | 'WITH_ERROR', is_truncated?: number, schema?: string, service_id?: string, service_type?: string, tables?: Array<string> }> }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v0/qan/ObjectDetails/GetQueryExample`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ query_examples?: Array<{ example?: string, example_format?: 'EXAMPLE_FORMAT_INVALID' | 'EXAMPLE' | 'FINGERPRINT', example_metrics?: string, example_type?: 'EXAMPLE_TYPE_INVALID' | 'RANDOM' | 'SLOWEST' | 'FASTEST' | 'WITH_ERROR', is_truncated?: number, schema?: string, service_id?: string, service_type?: string, tables?: Array<string> }> }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetQueryExample(body: { filter_by?: string, group_by?: string, labels?: Array<{ key?: string, value?: Array<string> }>, limit?: number, period_start_from?: string, period_start_to?: string }): __Observable<{ query_examples?: Array<{ example?: string, example_format?: 'EXAMPLE_FORMAT_INVALID' | 'EXAMPLE' | 'FINGERPRINT', example_metrics?: string, example_type?: 'EXAMPLE_TYPE_INVALID' | 'RANDOM' | 'SLOWEST' | 'FASTEST' | 'WITH_ERROR', is_truncated?: number, schema?: string, service_id?: string, service_type?: string, tables?: Array<string> }> }> {\n    return this.GetQueryExampleResponse(body).pipe(\n      __map(_r => _r.body as { query_examples?: Array<{ example?: string, example_format?: 'EXAMPLE_FORMAT_INVALID' | 'EXAMPLE' | 'FINGERPRINT', example_metrics?: string, example_type?: 'EXAMPLE_TYPE_INVALID' | 'RANDOM' | 'SLOWEST' | 'FASTEST' | 'WITH_ERROR', is_truncated?: number, schema?: string, service_id?: string, service_type?: string, tables?: Array<string> }> })\n    );\n  }\n}\n\nmodule ObjectDetailsService {\n}\n\nexport { ObjectDetailsService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass PostgreSQLService extends __BaseService {\n  static readonly AddPostgreSQLPath = '/v1/management/PostgreSQL/Add';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPostgreSQLResponse(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, qan_postgresql_pgstatements_agent?: boolean, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/PostgreSQL/Add`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPostgreSQL(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, qan_postgresql_pgstatements_agent?: boolean, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddPostgreSQLResponse(body).pipe(\n      __map(_r => _r.body as { postgres_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, qan_postgresql_pgstatements_agent?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n}\n\nmodule PostgreSQLService {\n}\n\nexport { PostgreSQLService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass ProfileService extends __BaseService {\n  static readonly GetReportPath = '/v0/qan/GetReport';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetReportResponse(body: { columns?: Array<string>, group_by?: string, labels?: Array<{ key?: string, value?: Array<string> }>, limit?: number, main_metric?: string, offset?: number, order_by?: string, period_start_from?: string, period_start_to?: string }): __Observable<__StrictHttpResponse<{ limit?: number, offset?: number, rows?: Array<{ dimension?: string, fingerprint?: string, load?: number, metrics?: { [key: string]: { stats?: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, rate?: number, sum?: number, sum_per_sec?: number } } }, num_queries?: number, qps?: number, rank?: number, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }> }>, total_rows?: number }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v0/qan/GetReport`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ limit?: number, offset?: number, rows?: Array<{ dimension?: string, fingerprint?: string, load?: number, metrics?: { [key: string]: { stats?: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, rate?: number, sum?: number, sum_per_sec?: number } } }, num_queries?: number, qps?: number, rank?: number, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }> }>, total_rows?: number }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetReport(body: { columns?: Array<string>, group_by?: string, labels?: Array<{ key?: string, value?: Array<string> }>, limit?: number, main_metric?: string, offset?: number, order_by?: string, period_start_from?: string, period_start_to?: string }): __Observable<{ limit?: number, offset?: number, rows?: Array<{ dimension?: string, fingerprint?: string, load?: number, metrics?: { [key: string]: { stats?: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, rate?: number, sum?: number, sum_per_sec?: number } } }, num_queries?: number, qps?: number, rank?: number, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }> }>, total_rows?: number }> {\n    return this.GetReportResponse(body).pipe(\n      __map(_r => _r.body as { limit?: number, offset?: number, rows?: Array<{ dimension?: string, fingerprint?: string, load?: number, metrics?: { [key: string]: { stats?: { avg?: number, cnt?: number, max?: number, min?: number, p99?: number, rate?: number, sum?: number, sum_per_sec?: number } } }, num_queries?: number, qps?: number, rank?: number, sparkline?: Array<{ load?: number, m_blk_read_time_sum_per_sec?: number, m_blk_write_time_sum_per_sec?: number, m_bytes_sent_sum_per_sec?: number, m_docs_returned_sum_per_sec?: number, m_docs_scanned_sum_per_sec?: number, m_filesort_on_disk_sum_per_sec?: number, m_filesort_sum_per_sec?: number, m_full_join_sum_per_sec?: number, m_full_scan_sum_per_sec?: number, m_innodb_io_r_bytes_sum_per_sec?: number, m_innodb_io_r_ops_sum_per_sec?: number, m_innodb_io_r_wait_sum_per_sec?: number, m_innodb_pages_distinct_sum_per_sec?: number, m_innodb_queue_wait_sum_per_sec?: number, m_innodb_rec_lock_wait_sum_per_sec?: number, m_local_blks_dirtied_sum_per_sec?: number, m_local_blks_hit_sum_per_sec?: number, m_local_blks_read_sum_per_sec?: number, m_local_blks_written_sum_per_sec?: number, m_lock_time_sum_per_sec?: number, m_merge_passes_sum_per_sec?: number, m_no_good_index_used_sum_per_sec?: number, m_no_index_used_sum_per_sec?: number, m_qc_hit_sum_per_sec?: number, m_query_length_sum_per_sec?: number, m_query_time_sum_per_sec?: number, m_response_length_sum_per_sec?: number, m_rows_affected_sum_per_sec?: number, m_rows_examined_sum_per_sec?: number, m_rows_read_sum_per_sec?: number, m_rows_sent_sum_per_sec?: number, m_select_full_range_join_sum_per_sec?: number, m_select_range_check_sum_per_sec?: number, m_select_range_sum_per_sec?: number, m_shared_blks_dirtied_sum_per_sec?: number, m_shared_blks_hit_sum_per_sec?: number, m_shared_blks_read_sum_per_sec?: number, m_shared_blks_written_sum_per_sec?: number, m_sort_range_sum_per_sec?: number, m_sort_rows_sum_per_sec?: number, m_sort_scan_sum_per_sec?: number, m_temp_blks_read_sum_per_sec?: number, m_temp_blks_written_sum_per_sec?: number, m_tmp_disk_tables_sum_per_sec?: number, m_tmp_table_on_disk_sum_per_sec?: number, m_tmp_table_sizes_sum_per_sec?: number, m_tmp_table_sum_per_sec?: number, m_tmp_tables_sum_per_sec?: number, num_queries_per_sec?: number, num_queries_with_errors_per_sec?: number, num_queries_with_warnings_per_sec?: number, point?: number, time_frame?: number, timestamp?: string }> }>, total_rows?: number })\n    );\n  }\n}\n\nmodule ProfileService {\n}\n\nexport { ProfileService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass ProxySQLService extends __BaseService {\n  static readonly AddProxySQLPath = '/v1/management/ProxySQL/Add';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddProxySQLResponse(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<__StrictHttpResponse<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/ProxySQL/Add`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddProxySQL(body: { add_node?: { az?: string, container_id?: string, container_name?: string, custom_labels?: { [key: string]: string }, distro?: string, machine_id?: string, node_model?: string, node_name?: string, node_type?: 'NODE_TYPE_INVALID' | 'GENERIC_NODE' | 'CONTAINER_NODE' | 'REMOTE_NODE', region?: string }, address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, node_name?: string, password?: string, pmm_agent_id?: string, port?: number, replication_set?: string, service_name?: string, skip_connection_check?: boolean, tls?: boolean, tls_skip_verify?: boolean, username?: string }): __Observable<{ proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddProxySQLResponse(body).pipe(\n      __map(_r => _r.body as { proxysql_exporter?: { agent_id?: string, custom_labels?: { [key: string]: string }, disabled?: boolean, listen_port?: number, pmm_agent_id?: string, service_id?: string, status?: 'AGENT_STATUS_INVALID' | 'STARTING' | 'RUNNING' | 'WAITING' | 'STOPPING' | 'DONE', tls?: boolean, tls_skip_verify?: boolean, username?: string }, service?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n}\n\nmodule ProxySQLService {\n}\n\nexport { ProxySQLService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass ServerService extends __BaseService {\n  static readonly ChangeSettingsPath = '/v1/Settings/Change';\n  static readonly GetSettingsPath = '/v1/Settings/Get';\n  static readonly CheckUpdatesPath = '/v1/Updates/Check';\n  static readonly StartUpdatePath = '/v1/Updates/Start';\n  static readonly UpdateStatusPath = '/v1/Updates/Status';\n  static readonly ReadinessPath = '/v1/readyz';\n  static readonly VersionPath = '/v1/version';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeSettingsResponse(body: { data_retention?: string, disable_telemetry?: boolean, enable_telemetry?: boolean, metrics_resolutions?: { hr?: string, lr?: string, mr?: string } }): __Observable<__StrictHttpResponse<{ settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/Settings/Change`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ChangeSettings(body: { data_retention?: string, disable_telemetry?: boolean, enable_telemetry?: boolean, metrics_resolutions?: { hr?: string, lr?: string, mr?: string } }): __Observable<{ settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } }> {\n    return this.ChangeSettingsResponse(body).pipe(\n      __map(_r => _r.body as { settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetSettingsResponse(body: {}): __Observable<__StrictHttpResponse<{ settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/Settings/Get`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetSettings(body: {}): __Observable<{ settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } }> {\n    return this.GetSettingsResponse(body).pipe(\n      __map(_r => _r.body as { settings?: { data_retention?: string, metrics_resolutions?: { hr?: string, lr?: string, mr?: string }, telemetry_enabled?: boolean, updates_disabled?: boolean } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  CheckUpdatesResponse(body: { force?: boolean }): __Observable<__StrictHttpResponse<{ installed?: { full_version?: string, timestamp?: string, version?: string }, last_check?: string, latest?: { full_version?: string, timestamp?: string, version?: string }, latest_news_url?: string, update_available?: boolean }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/Updates/Check`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ installed?: { full_version?: string, timestamp?: string, version?: string }, last_check?: string, latest?: { full_version?: string, timestamp?: string, version?: string }, latest_news_url?: string, update_available?: boolean }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  CheckUpdates(body: { force?: boolean }): __Observable<{ installed?: { full_version?: string, timestamp?: string, version?: string }, last_check?: string, latest?: { full_version?: string, timestamp?: string, version?: string }, latest_news_url?: string, update_available?: boolean }> {\n    return this.CheckUpdatesResponse(body).pipe(\n      __map(_r => _r.body as { installed?: { full_version?: string, timestamp?: string, version?: string }, last_check?: string, latest?: { full_version?: string, timestamp?: string, version?: string }, latest_news_url?: string, update_available?: boolean })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartUpdateResponse(body: {}): __Observable<__StrictHttpResponse<{ auth_token?: string, log_offset?: number }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/Updates/Start`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ auth_token?: string, log_offset?: number }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  StartUpdate(body: {}): __Observable<{ auth_token?: string, log_offset?: number }> {\n    return this.StartUpdateResponse(body).pipe(\n      __map(_r => _r.body as { auth_token?: string, log_offset?: number })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  UpdateStatusResponse(body: { auth_token?: string, log_offset?: number }): __Observable<__StrictHttpResponse<{ done?: boolean, log_lines?: Array<string>, log_offset?: number }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/Updates/Status`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ done?: boolean, log_lines?: Array<string>, log_offset?: number }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  UpdateStatus(body: { auth_token?: string, log_offset?: number }): __Observable<{ done?: boolean, log_lines?: Array<string>, log_offset?: number }> {\n    return this.UpdateStatusResponse(body).pipe(\n      __map(_r => _r.body as { done?: boolean, log_lines?: Array<string>, log_offset?: number })\n    );\n  }\n\n  /**\n   * @return A successful response.\n   */\n  ReadinessResponse(): __Observable<__StrictHttpResponse<{}>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/v1/readyz`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{}>;\n      })\n    );\n  }\n  /**\n   * @return A successful response.\n   */\n  Readiness(): __Observable<{}> {\n    return this.ReadinessResponse().pipe(\n      __map(_r => _r.body as {})\n    );\n  }\n\n  /**\n   * @param dummy Dummy parameter for internal testing. Do not use.\n   * @return A successful response.\n   */\n  VersionResponse(dummy?: string): __Observable<__StrictHttpResponse<{ managed?: { full_version?: string, timestamp?: string, version?: string }, server?: { full_version?: string, timestamp?: string, version?: string }, version?: string }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    if (dummy != null) __params = __params.set('dummy', dummy.toString());\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/v1/version`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ managed?: { full_version?: string, timestamp?: string, version?: string }, server?: { full_version?: string, timestamp?: string, version?: string }, version?: string }>;\n      })\n    );\n  }\n  /**\n   * @param dummy Dummy parameter for internal testing. Do not use.\n   * @return A successful response.\n   */\n  Version(dummy?: string): __Observable<{ managed?: { full_version?: string, timestamp?: string, version?: string }, server?: { full_version?: string, timestamp?: string, version?: string }, version?: string }> {\n    return this.VersionResponse(dummy).pipe(\n      __map(_r => _r.body as { managed?: { full_version?: string, timestamp?: string, version?: string }, server?: { full_version?: string, timestamp?: string, version?: string }, version?: string })\n    );\n  }\n}\n\nmodule ServerService {\n}\n\nexport { ServerService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass ServiceService extends __BaseService {\n  static readonly RemoveServiceMixin2Path = '/v1/management/Service/Remove';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveServiceMixin2Response(body: { service_id?: string, service_name?: string, service_type?: 'SERVICE_TYPE_INVALID' | 'MYSQL_SERVICE' | 'MONGODB_SERVICE' | 'POSTGRESQL_SERVICE' | 'PROXYSQL_SERVICE' }): __Observable<__StrictHttpResponse<{}>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/management/Service/Remove`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{}>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveServiceMixin2(body: { service_id?: string, service_name?: string, service_type?: 'SERVICE_TYPE_INVALID' | 'MYSQL_SERVICE' | 'MONGODB_SERVICE' | 'POSTGRESQL_SERVICE' | 'PROXYSQL_SERVICE' }): __Observable<{}> {\n    return this.RemoveServiceMixin2Response(body).pipe(\n      __map(_r => _r.body as {})\n    );\n  }\n}\n\nmodule ServiceService {\n}\n\nexport { ServiceService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass ServicesService extends __BaseService {\n  static readonly AddMongoDBServicePath = '/v1/inventory/Services/AddMongoDB';\n  static readonly AddMySQLServicePath = '/v1/inventory/Services/AddMySQL';\n  static readonly AddPostgreSQLServicePath = '/v1/inventory/Services/AddPostgreSQL';\n  static readonly AddProxySQLServicePath = '/v1/inventory/Services/AddProxySQL';\n  static readonly GetServicePath = '/v1/inventory/Services/Get';\n  static readonly ListServicesPath = '/v1/inventory/Services/List';\n  static readonly RemoveServicePath = '/v1/inventory/Services/Remove';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMongoDBServiceResponse(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<__StrictHttpResponse<{ mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Services/AddMongoDB`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMongoDBService(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<{ mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddMongoDBServiceResponse(body).pipe(\n      __map(_r => _r.body as { mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMySQLServiceResponse(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<__StrictHttpResponse<{ mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Services/AddMySQL`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddMySQLService(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<{ mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddMySQLServiceResponse(body).pipe(\n      __map(_r => _r.body as { mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPostgreSQLServiceResponse(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<__StrictHttpResponse<{ postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Services/AddPostgreSQL`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddPostgreSQLService(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<{ postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddPostgreSQLServiceResponse(body).pipe(\n      __map(_r => _r.body as { postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddProxySQLServiceResponse(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<__StrictHttpResponse<{ proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Services/AddProxySQL`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  AddProxySQLService(body: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_name?: string }): __Observable<{ proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.AddProxySQLServiceResponse(body).pipe(\n      __map(_r => _r.body as { proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetServiceResponse(body: { service_id?: string }): __Observable<__StrictHttpResponse<{ mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Services/Get`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  GetService(body: { service_id?: string }): __Observable<{ mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } }> {\n    return this.GetServiceResponse(body).pipe(\n      __map(_r => _r.body as { mongodb?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, mysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, postgresql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }, proxysql?: { address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string } })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ListServicesResponse(body: { node_id?: string }): __Observable<__StrictHttpResponse<{ mongodb?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, mysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, postgresql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, proxysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }> }>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Services/List`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{ mongodb?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, mysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, postgresql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, proxysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }> }>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  ListServices(body: { node_id?: string }): __Observable<{ mongodb?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, mysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, postgresql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, proxysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }> }> {\n    return this.ListServicesResponse(body).pipe(\n      __map(_r => _r.body as { mongodb?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, mysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, postgresql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }>, proxysql?: Array<{ address?: string, cluster?: string, custom_labels?: { [key: string]: string }, environment?: string, node_id?: string, port?: number, replication_set?: string, service_id?: string, service_name?: string }> })\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveServiceResponse(body: { force?: boolean, service_id?: string }): __Observable<__StrictHttpResponse<{}>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/v1/inventory/Services/Remove`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<{}>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return A successful response.\n   */\n  RemoveService(body: { force?: boolean, service_id?: string }): __Observable<{}> {\n    return this.RemoveServiceResponse(body).pipe(\n      __map(_r => _r.body as {})\n    );\n  }\n}\n\nmodule ServicesService {\n}\n\nexport { ServicesService }\n","export const metricCatalogue = {\n  bytes_sent: {\n    humanizeName: 'Bytes Sent',\n    tooltipText: 'The number of bytes sent to all clients',\n    simpleName: 'bytes_sent',\n    pipeTypes: {\n      ratePipe: 'size',\n      sumPipe: 'size',\n      subSumPipe: 'percent',\n      sparklineType: 'size',\n      perQueryStatsPipe: 'size'\n    }\n  },\n  blk_read_time: {\n    humanizeName: 'Reading Blocks Time',\n    tooltipText: 'Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)',\n    simpleName: 'blk_read_time',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'time',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'time'\n    }\n  },\n  blk_write_time: {\n    humanizeName: 'Writing Blocks Time',\n    tooltipText: 'Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)',\n    simpleName: 'blk_write_time',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'time',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'time'\n    }\n  },\n  local_blks_dirtied: {\n    humanizeName: 'Local Blocks Dirtied',\n    tooltipText: 'Total number of local blocks dirtied by the statement',\n    simpleName: 'local_blks_dirtied',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  local_blks_hit: {\n    humanizeName: 'Local Block Cache Hits',\n    tooltipText: 'Total number of local block cache hits by the statement',\n    simpleName: 'local_blks_hit',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  local_blks_read: {\n    humanizeName: 'Local Blocks Read',\n    tooltipText: 'Total number of local blocks read by the statement',\n    simpleName: 'local_blks_read',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  local_blks_written: {\n    humanizeName: 'Local Blocks Written',\n    tooltipText: 'Total number of local blocks written by the statement',\n    simpleName: 'local_blks_written',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  shared_blks_dirtied: {\n    humanizeName: 'Shared Blocks Dirtied',\n    tooltipText: 'Total number of shared blocks dirtied by the statement\\n',\n    simpleName: 'shared_blks_dirtied',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  shared_blks_hit: {\n    humanizeName: 'Shared Block Cache Hits',\n    tooltipText: 'Total number of shared block cache hits by the statement',\n    simpleName: 'shared_blks_hit',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  shared_blks_read: {\n    humanizeName: 'Shared Blocks Read',\n    tooltipText: 'Total number of shared blocks read by the statement\\n',\n    simpleName: 'shared_blks_read',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  shared_blks_written: {\n    humanizeName: 'Shared Blocks Written',\n    tooltipText: 'Total number of shared blocks written by the statement',\n    simpleName: 'shared_blks_written',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  temp_blks_read: {\n    humanizeName: 'Temp Blocks Read',\n    tooltipText: 'Total number of temp blocks read by the statement',\n    simpleName: 'temp_blks_read',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  temp_blks_written: {\n    humanizeName: 'Temp Blocks Written',\n    tooltipText: 'Total number of temp blocks written by the statement\\n',\n    simpleName: 'temp_blks_written',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  num_queries: {\n    humanizeName: 'Query Count',\n    tooltipText: 'Count',\n    simpleName: 'num_queries',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  count: {\n    humanizeName: 'Query Count',\n    tooltipText: 'Count',\n    simpleName: 'count',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  num_queries_with_errors: {\n    humanizeName: 'Query Count with errors',\n    tooltipText: 'Query Count with errors',\n    simpleName: 'num_queries_with_errors',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  num_queries_with_warnings: {\n    humanizeName: 'Query Count with warnings',\n    tooltipText: 'Query Count with warnings',\n    simpleName: 'num_queries_with_warnings',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  docs_scanned: {\n    humanizeName: 'Docs scanned',\n    tooltipText: 'The number of scanned documents',\n    simpleName: 'docs_scanned',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  docs_returned: {\n    humanizeName: 'Docs Returned',\n    tooltipText: 'The number of returned documents',\n    simpleName: 'docs_returned',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  filesort: {\n    humanizeName: 'Filesort',\n    tooltipText: 'The query used a filesort',\n    simpleName: 'filesort',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: ''\n    }\n  },\n  filesort_on_disk: {\n    humanizeName: 'Filesort on Disk',\n    tooltipText: 'The filesort was performed on disk',\n    simpleName: 'filesort_on_disk',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: ''\n    }\n  },\n  full_join: {\n    humanizeName: 'Full Join',\n    tooltipText: 'The query performed a full join (a join without indexes)',\n    simpleName: 'full_join',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: ''\n    }\n  },\n  full_scan: {\n    humanizeName: 'Full Scan',\n    tooltipText: 'The query performed a full table scan',\n    simpleName: 'full_scan',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: ''\n    }\n  },\n  innodb_io_r_bytes: {\n    humanizeName: 'Innodb Read Bytes',\n    tooltipText: 'Similar to innodb_IO_r_ops, but the unit is bytes',\n    simpleName: 'innodb_io_r_bytes',\n    pipeTypes: {\n      ratePipe: 'size',\n      sumPipe: 'size',\n      subSumPipe: 'percent',\n      sparklineType: 'size',\n      perQueryStatsPipe: 'size'\n    }\n  },\n  innodb_io_r_ops: {\n    humanizeName: 'Innodb IO Read Ops',\n    tooltipText: 'Counts the number of page read operations scheduled',\n    simpleName: 'innodb_io_r_ops',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  innodb_io_r_wait: {\n    humanizeName: 'Innodb IO Read Wait',\n    tooltipText: 'Shows how long (in seconds) it took InnoDB to actually read the data from storage',\n    simpleName: 'innodb_io_r_wait',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'time',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'time'\n    }\n  },\n  innodb_pages_distinct: {\n    humanizeName: 'Innodb Pages Distinct',\n    tooltipText: 'Counts approximately the number of unique pages the query accessed',\n    simpleName: 'innodb_pages_distinct',\n    pipeTypes: {\n      ratePipe: '',\n      sumPipe: '',\n      subSumPipe: '',\n      sparklineType: '',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  innodb_queue_wait: {\n    humanizeName: 'Innodb Queue Wait',\n    tooltipText:\n      'Shows how long( in seconds) the query spent either waiting to enter the InnoDB queue or inside that queue waiting for + execution',\n    simpleName: 'innodb_queue_wait',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'time',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'time'\n    }\n  },\n  innodb_rec_lock_wait: {\n    humanizeName: 'Innodb Rec Lock Wait',\n    tooltipText: 'Shows how long( in seconds) the query waited for row locks',\n    simpleName: 'innodb_rec_lock_wait',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'time',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'time'\n    }\n  },\n  load: {\n    humanizeName: 'Load',\n    tooltipText: 'Load',\n    simpleName: 'load',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  lock_time: {\n    humanizeName: 'Lock Time',\n    tooltipText: 'The time to acquire locks in seconds',\n    simpleName: 'lock_time',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'time',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'time'\n    }\n  },\n  merge_passes: {\n    humanizeName: 'Merge Passes',\n    tooltipText: 'The number of merge passes that the sort algorithm has had to do',\n    simpleName: 'merge_passes',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  no_good_index_used: {\n    humanizeName: 'No Good Index Used',\n    tooltipText: 'The number of queries without good index',\n    simpleName: 'no_good_index_used',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  no_index_used: {\n    humanizeName: 'No index used',\n    tooltipText: 'The number of queries without index',\n    simpleName: 'no_index_used',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  qc_hit: {\n    humanizeName: 'Query Cache Hit',\n    tooltipText: 'Query Cache hits',\n    simpleName: 'qc_hit',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: ''\n    }\n  },\n  query_length: {\n    humanizeName: 'Query Length',\n    tooltipText: 'Shows how long the query is',\n    simpleName: 'query_length',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  query_time: {\n    humanizeName: 'Query Time',\n    tooltipText: 'The statement execution time in seconds',\n    simpleName: 'query_time',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'time',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'time'\n    }\n  },\n  response_length: {\n    humanizeName: 'Response Length',\n    tooltipText: 'The response length of the query result in bytes',\n    simpleName: 'response_length',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  rows_affected: {\n    humanizeName: 'Rows Affected',\n    tooltipText: 'Number of rows changed -UPDATE, DELETE, INSERT',\n    simpleName: 'rows_affected',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  rows_examined: {\n    humanizeName: 'Rows Examined',\n    tooltipText: 'Number of rows scanned -SELECT',\n    simpleName: 'rows_examined',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  rows_read: {\n    humanizeName: 'Bytes Read',\n    tooltipText: 'The number of rows read from tables',\n    simpleName: 'rows_read',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  rows_sent: {\n    humanizeName: 'Rows Sent',\n    tooltipText: 'The number of rows sent to the client',\n    simpleName: 'rows_sent',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  select_full_range_join: {\n    humanizeName: 'Select Full Range Join',\n    tooltipText: 'The number of joins that used a range search on a reference table',\n    simpleName: 'select_full_range_join',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  sort_range: {\n    humanizeName: 'Sort Range',\n    tooltipText: 'The number of sorts that were done using ranges',\n    simpleName: 'sort_range',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  select_range: {\n    humanizeName: 'Select Range',\n    tooltipText: 'The number of joins that used ranges on the first table',\n    simpleName: 'select_range',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  select_range_check: {\n    humanizeName: 'Select Range Check',\n    tooltipText: 'The number of joins without keys that check for key usage after each row',\n    simpleName: 'select_range_check',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  sort_rows: {\n    humanizeName: 'Sort Rows',\n    tooltipText: 'The number of sorted rows',\n    simpleName: 'sort_rows',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  sort_scan: {\n    humanizeName: 'Sort Scan',\n    tooltipText: 'The number of sorts that were done by scanning the table',\n    simpleName: 'sort_scan',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  tmp_disk_tables: {\n    humanizeName: 'Tmp Disk Tables',\n    tooltipText: 'Number of temporary tables created on disk for the query',\n    simpleName: 'tmp_disk_tables',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n  tmp_table: {\n    humanizeName: 'Tmp Table',\n    tooltipText: 'The query created an implicit internal temporary table',\n    simpleName: 'tmp_table',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: ''\n    }\n  },\n  tmp_table_on_disk: {\n    humanizeName: 'Tmp Table on Disk',\n    tooltipText: 'The querys temporary table was stored on disk',\n    simpleName: 'tmp_table_on_disk',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: ''\n    }\n  },\n  tmp_table_sizes: {\n    humanizeName: 'Tmp Table Sizes',\n    tooltipText: 'Total Size in bytes for all temporary tables used in the query',\n    simpleName: 'tmp_table_sizes',\n    pipeTypes: {\n      ratePipe: 'size',\n      sumPipe: 'size',\n      subSumPipe: 'percent',\n      sparklineType: 'size',\n      perQueryStatsPipe: 'size'\n    }\n  },\n  tmp_tables: {\n    humanizeName: 'Tmp Tables',\n    tooltipText: 'Number of temporary tables created on memory for the query',\n    simpleName: 'tmp_tables',\n    pipeTypes: {\n      ratePipe: 'number',\n      sumPipe: 'number',\n      subSumPipe: 'percent',\n      sparklineType: 'number',\n      perQueryStatsPipe: 'number'\n    }\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnConfigModel } from '../../core/models/column-config.model';\n\n@Injectable()\nexport class EditColumnService {\n  private cellConfigSource = new BehaviorSubject([]);\n\n  constructor() {\n  }\n\n  /**\n   * Get configuration from server and modify it by models\n   */\n  getConfigs() {\n    this.setConfig([\n      {\n        name: 'Load', columns: ['Sparkline', 'Value', 'Percentage']\n      },\n      {\n        name: 'Count', columns: ['Sparkline', 'Queries per second', 'Value', 'Percentage']\n      },\n      {\n        name: 'Avg Latency', columns: ['Sparkline', 'Value', 'Distribution']\n      }\n    ].map(config => new ColumnConfigModel(config, JSON.parse(localStorage.getItem(config.name)))))\n  }\n\n  /**\n   * Set current state of config\n   * @param config - collection of configs from server\n   */\n  setConfig(config: ColumnConfigModel[]) {\n    this.cellConfigSource.next(config);\n  }\n\n  /**\n   * Provide access for private variable\n   */\n  get source() {\n    return this.cellConfigSource;\n  }\n}\n","<app-qan-filter *ngIf=\"!isLoading; else spinner\" [processLabels]=\"filters\"></app-qan-filter>\n<ng-template #spinner>\n  <i class=\"fa fa-spinner fa-spin\"></i>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { FilterMenuService } from '../filter-menu/filter-menu.service';\nimport { FiltersService } from '../../pmm-api-services/services/filters.service';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs/internal/observable/of';\nimport { FilterViewerService } from '../filter-menu/filter-viewer.service';\nimport { QueryParamsService } from '../../core/services/query-params.service';\nimport { GetProfileBody } from '../profile/interfaces/get-profile-body.interfaces';\n\nexport interface FiltersGetParams {\n  main_metric_name: string,\n  period_start_from: string,\n  period_start_to: string\n}\n\n@Component({\n  selector: 'app-filter-menu-viewer',\n  templateUrl: './filter-menu-viewer.component.html',\n  styleUrls: ['./filter-menu-viewer.component.css']\n})\n\nexport class FilterMenuViewerComponent implements OnInit, OnDestroy {\n\n  public currentParams: GetProfileBody;\n  private getFilters$: Subscription;\n  public filters: any = [];\n  public isLoading: boolean;\n\n  constructor(\n    private filterMenuService: FilterMenuService,\n    private filterService: FiltersService,\n    private qanFilterService: FilterMenuService,\n    private qanProfileService: QanProfileService,\n    private queryParamsService: QueryParamsService,\n    private filterViewerService: FilterViewerService,\n  ) {\n    this.isLoading = true;\n    this.currentParams = this.qanProfileService.getProfileParams.getValue();\n\n    this.getFilters$ = this.qanProfileService.getDefaultMainMetric.pipe(\n      switchMap(metricName => {\n        this.isLoading = true;\n        return this.filterService.Get(\n          {\n            main_metric_name: metricName,\n            period_start_from: this.currentParams.period_start_from,\n            period_start_to: this.currentParams.period_start_to\n          }).pipe(\n            catchError(err => of({ error: err.error })),\n            map(response =>\n              response['error'] ? [] : this.filterMenuService.generateFilterGroup(response))\n          )\n      }))\n      .subscribe(\n        filters => {\n          this.filters = this.filterViewerService.filtersOrder(filters);\n          this.filters = this.filterViewerService.skipIDFilters(this.filters);\n          this.filterViewerService.skipNA(this.filters);\n          this.filterViewerService.sortIdsValues(this.filters);\n          this.filterMenuService.updateAutocompleteFilters(filters);\n          this.isLoading = false;\n        },\n        err => {\n          console.log('err filters - ', err);\n          this.isLoading = false;\n        },\n        () => {\n          console.log('complete');\n        }\n      );\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.getFilters$.unsubscribe();\n  }\n}\n","export const filterGroupList = {\n  environment: {\n    humanName: 'Environment',\n    defaultName: 'environment'\n  },\n  cluster: {\n    humanName: 'Cluster',\n    defaultName: 'cluster'\n  },\n  replication_set: {\n    humanName: 'Replication Set',\n    defaultName: 'replication_set'\n  },\n  database: {\n    humanName: 'Database',\n    defaultName: 'database'\n  },\n  schema: {\n    humanName: 'Schema',\n    defaultName: 'schema'\n  },\n  server: {\n    humanName: 'Server',\n    defaultName: 'server'\n  },\n  client_host: {\n    humanName: 'Client Host',\n    defaultName: 'client_host'\n  },\n  service_type: {\n    humanName: 'Service Type',\n    defaultName: 'service_type'\n  },\n  service_name: {\n    humanName: 'Service Name',\n    defaultName: 'service_name'\n  },\n  az: {\n    humanName: 'Availability Zone',\n    defaultName: 'az'\n  },\n  region: {\n    humanName: 'Region Name',\n    defaultName: 'region'\n  },\n  node_model: {\n    humanName: 'Node Model',\n    defaultName: 'node_model'\n  },\n  container_name: {\n    humanName: 'Container Name',\n    defaultName: 'container_name'\n  },\n  username: {\n    humanName: 'User Name',\n    defaultName: 'username'\n  },\n  agent_id: {\n    humanName: 'Agent ID',\n    defaultName: 'agent_id'\n  },\n  agent_type: {\n    humanName: 'Agent Type',\n    defaultName: 'agent_type'\n  },\n  node_id: {\n    humanName: 'Node ID',\n    defaultName: 'node_id'\n  },\n  node_type: {\n    humanName: 'Node Type',\n    defaultName: 'node_type'\n  },\n  node_name: {\n    humanName: 'Node Name',\n    defaultName: 'node_name'\n  },\n  service_id: {\n    humanName: 'Service ID',\n    defaultName: 'service_id'\n  },\n  machine_id: {\n    humanName: 'Machine ID',\n    defaultName: 'machine_id'\n  }\n};\n","<perfect-scrollbar [config]=\"filterScrollConfig\" class=\"pmm-scrollbar\">\n  <ng-container *ngFor=\"let filterGroup of currentFilters\">\n    <section *ngIf=\"filterGroup.items.length\" class=\"aside__filter-group\">\n      <div class=\"filter-group__title\">\n        <span class=\"title__text\">{{humanizeLabels(filterGroup.filterGroup)}}</span>\n          <button *ngIf=\"filterGroup.items.length > defaultLimit\" (click)=\"toggleExpanded(filterGroup)\" class=\"filter-group__see-all\">\n              {{ isExpanded(filterGroup) ? 'Show top ' + defaultLimit : 'See all' }}\n          </button>\n      </div>\n      <div class=\"filter-group__filters\">\n        <ng-container *ngFor=\"let filter of filterGroup.items; let subIndex = index\">\n            <ng-container  *ngIf=\"isExpanded(filterGroup) || subIndex < defaultLimit\">\n              <label class=\"checkbox-container\">\n                <input\n                  (change)=\"setConfigs([filter.value, filterGroup.filterGroup, filter.state, filter.count])\"\n                  [(ngModel)]=\"filter.state\"\n                  type=\"checkbox\">\n                <span class=\"checkbox-container__checkmark\"></span>\n                <span class=\"checkbox-container__label-text\" [appPmmTooltip]=\"isTooltip(filter.value) ? filter.value : ''\">\n                  {{ filter.value | ellipsisMiddle: charsLimit }}\n                </span>\n              </label>\n              <span class=\"filters__count\">\n                {{filter.main_metric_percent ? (filter.main_metric_percent | humanize: 'percent') : ''}}\n              </span>\n            </ng-container>\n        </ng-container>\n      </div>\n    </section>\n  </ng-container>\n</perfect-scrollbar>\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { FilterMenuService } from './filter-menu.service';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs/internal/observable/of';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport _ from 'lodash';\n\n@Component({\n  selector: 'app-qan-filter',\n  templateUrl: './filter-menu.component.html',\n  styleUrls: ['./filter-menu.component.scss']\n})\nexport class FilterMenuComponent implements OnInit, OnChanges {\n  public currentFilters: any = [];\n  public filterScrollConfig: PerfectScrollbarConfigInterface = {\n    suppressScrollX: true\n  };\n\n  @ViewChildren('checkBoxText') checkBoxText: QueryList<ElementRef>;\n  @Input() set processLabels(filters: any) {\n    this.currentFilters = filters || [];\n    this.toggleLabels();\n  }\n\n  public expanded = {};\n  public defaultLimit = 5;\n  private charsLimit = 15;\n  public selected: any = this.filterMenuService.getSelected.getValue();\n\n  constructor(private filterMenuService: FilterMenuService) {\n    this.filterMenuService.getSelected\n      .pipe(catchError(() => of([])))\n      .subscribe(response => {\n        this.selected = response;\n        this.toggleLabels();\n      });\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges() {}\n\n  toggleExpanded(group) {\n    this.expanded[group.filterGroup] = !this.isExpanded(group);\n  }\n\n  setConfigs(selectedFilter) {\n    const [filterName, groupName, state, count] = [...selectedFilter];\n    const filter = {\n      filterName: filterName,\n      groupName: groupName,\n      state: state,\n      count: count,\n      urlParamName: `${groupName}:${filterName}`\n    };\n\n    this.selected = this.makeSelectedArray(filter);\n    this.filterMenuService.updateSelected(this.selected);\n  }\n\n  makeSelectedArray(filter) {\n    if (filter.state) {\n      this.selected.push(filter);\n      return _.uniqBy(this.selected, function(elem) {\n        return [elem.groupName, elem.filterName].join();\n      });\n    } else {\n      return this.selected.filter(function(elem) {\n        return (\n          [elem.groupName, elem.filterName].join() !==\n          [filter.groupName, filter.filterName].join()\n        );\n      });\n    }\n  }\n\n  resetAllFilters() {\n    this.currentFilters.forEach(group =>\n      group.items.forEach(item => (item.state = false))\n    );\n  }\n\n  checkSelectedFilters() {\n    this.selected.forEach(selectedItem => {\n      const group = this.currentFilters.find(\n        filterGroup => filterGroup.filterGroup === selectedItem.groupName\n      );\n      if (group) {\n        const filter = group.items.find(\n          item => item.value === selectedItem.filterName\n        );\n        if (filter) {\n          filter.state = true;\n        }\n      }\n    });\n  }\n\n  toggleLabels() {\n    if (this.currentFilters.length) {\n      this.resetAllFilters();\n      if (this.selected.length) {\n        this.checkSelectedFilters();\n      }\n    }\n  }\n\n  humanizeLabels(groupName) {\n    return this.filterMenuService.humanNamesForGroup(groupName);\n  }\n\n  isTooltip(value) {\n    return FilterMenuService.checkForTooltip(value, this.charsLimit);\n  }\n\n  isExpanded(filterGroup) {\n    return (\n      this.expanded.hasOwnProperty(filterGroup.filterGroup) &&\n      this.expanded[filterGroup.filterGroup]\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { FilterGroupModel } from './models/filter-group.model';\nimport { FiltersSearchModel } from './models/filters-search.model';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { QueryParamsService } from '../../core/services/query-params.service';\nimport { filterGroupList } from './filter-groups-list';\nimport { ActivatedRoute } from '@angular/router';\nimport { QueryParams } from '../profile/interfaces/query-params.interface';\n\n@Injectable()\nexport class FilterMenuService {\n  private iframeQueryParams = this.route.snapshot.queryParams as QueryParams;\n  private selected = new BehaviorSubject(\n    this.setSelected(this.iframeQueryParams)\n  );\n  private autocompleteFilters = new Subject();\n  public queryParams: any;\n  public filterGroupList = filterGroupList;\n\n  static isEmptyObject(obj) {\n    return !Object.keys(obj).length;\n  }\n\n  static checkForTooltip(value, charsLimit) {\n    return value.length > charsLimit;\n  }\n\n  constructor(\n    private qanProfileService: QanProfileService,\n    private queryParamsService: QueryParamsService,\n    private route: ActivatedRoute\n  ) {}\n\n  get getAutocompleteFilters() {\n    return this.autocompleteFilters;\n  }\n\n  get getSelected() {\n    return this.selected;\n  }\n\n  setSelected(params) {\n    return this.decodeSelected(params);\n  }\n\n  decodeSelected(params) {\n    return Object.keys(params).reduce((acc, param) => {\n      if (!param.startsWith('var-')) {\n        return acc;\n      }\n\n      const groupName = param.replace('var-', '');\n      if (Array.isArray(params[param])) {\n        params[param].forEach(value => {\n          acc.push({\n            filterName: value,\n            groupName: groupName,\n            urlParamName: `${groupName}/${value}`,\n            state: true\n          });\n        });\n        return acc;\n      }\n\n      acc.push({\n        filterName: params[param],\n        groupName: groupName,\n        urlParamName: `${groupName}/${params[param]}`,\n        state: true\n      });\n\n      return acc;\n    }, []);\n  }\n\n  updateSelected(newSelected) {\n    this.selected.next(newSelected);\n    this.addSelectedToResponse(newSelected);\n    this.queryParamsService.addSelectedToURL(newSelected);\n  }\n\n  updateAutocompleteFilters(autocomplete) {\n    const generated = this.generateAutocomplete(autocomplete);\n    this.autocompleteFilters.next(generated);\n  }\n\n  generateFilterGroup(group) {\n    return Object.entries(group.labels)\n      .filter(item => !FilterMenuService.isEmptyObject(item))\n      .map(entire => new FilterGroupModel(entire));\n  }\n\n  generateAutocomplete(filters) {\n    const generated = filters.map(responseItem =>\n      responseItem.items.map(\n        item => new FiltersSearchModel(responseItem.filterGroup, item)\n      )\n    );\n    return [].concat(...generated);\n  }\n\n  prepareLabels(filters) {\n    const arr = [];\n    filters.forEach(item => {\n      const existed = arr.find(it => it.key === item.groupName);\n      if (!existed) {\n        arr.push({ key: item.groupName, value: [item.filterName] });\n      } else {\n        existed.value.push(item.filterName);\n      }\n    });\n    return arr;\n  }\n\n  addSelectedToResponse(selected) {\n    const currentUrlParams = this.qanProfileService.getProfileParams.getValue();\n    const detailsUrlParams = this.qanProfileService.getCurrentDetails;\n    currentUrlParams.labels = this.prepareLabels(selected);\n    this.qanProfileService.updateProfileParams(currentUrlParams);\n    if (detailsUrlParams.hasOwnProperty('filter_by')) {\n      detailsUrlParams.labels = this.prepareLabels(selected);\n      this.qanProfileService.updateObjectDetails(detailsUrlParams);\n    }\n  }\n\n  humanNamesForGroup(groupName) {\n    return this.filterGroupList[groupName]\n      ? this.filterGroupList[groupName].humanName\n      : groupName;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FilterGroupModel } from './models/filter-group.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterViewerService {\n\n  constructor() { }\n\n  filtersOrder(detailsTableData: Array<FilterGroupModel>): Array<FilterGroupModel> {\n    return detailsTableData.sort((a, b) => this.sortFilters(a, b));\n  }\n\n  sortFilters(a, b) {\n    const order =\n      ['environment', 'cluster', 'replication_set', 'database', 'schema', 'node_name', 'service_name', 'client_host', 'username', ''];\n\n    let indA = order.indexOf(a['filterGroup']);\n    let indB = order.indexOf(b['filterGroup']);\n\n    if (indA === -1) {\n      indA = order.length - 1;\n    }\n\n    if (indB === -1) {\n      indB = order.length - 1;\n    }\n\n    return indA < indB ? -1 : 1;\n  }\n\n  skipNA(array) {\n    return array.forEach(group => group.items.every(label => !label.value) ? group.items.length = 0 : group.items);\n  }\n\n  sortEmptyValues(array) {\n    array.sort((a, b) => {\n      if (a.items.every(item => item.value === '') || a.items.every(item => item.value === null)) {\n        return 1\n      }\n      if (b.items.every(item => item.value === '') || b.items.every(item => item.value === null)) {\n        return -1\n      }\n    });\n  }\n\n  sortIdsValues(array) {\n    array.sort((a, b) => {\n      if (a.items.every(label => label.value.includes('_id'))) {\n        return 1\n      }\n\n      if (b.items.every(label => label.value.includes('_id'))) {\n        return -1\n      }\n    })\n  }\n\n  skipIDFilters(filters: Array<FilterGroupModel>) {\n    return filters.filter(item => !item.filterGroup.endsWith('_id'));\n  }\n}\n","import { FilterModel } from './filter.model';\n\nexport class FilterGroupModel {\n  filterGroup: string;\n  items: FilterModel[];\n\n  constructor(group) {\n    const [filterGroup, itemsGroup] = group;\n    let itemsArray;\n    if (itemsGroup.values) {\n      itemsArray = itemsGroup.values.map(item => new FilterModel(item));\n    } else {\n      itemsArray = itemsGroup.name.map(item => new FilterModel(item));\n    }\n    this.filterGroup = filterGroup;\n    this.items = itemsArray;\n  }\n}\n","export class FilterModel {\n  value: string;\n  main_metric_percent?: string;\n  state: boolean;\n\n  constructor(item) {\n    if (typeof (item) === 'object') {\n      const { value = '', main_metric_percent = '' } = item;\n      this.value = value;\n      this.main_metric_percent = main_metric_percent;\n    } else {\n      this.value = item\n    }\n    this.state = false;\n  }\n}\n","import { FilterModel } from './filter.model';\n\nexport class FiltersSearchModel {\n  filterName: string;\n  groupName: string;\n  state: boolean;\n  main_metric_percent: string;\n  urlParamName: string;\n\n  constructor(group: string, item: FilterModel) {\n    this.groupName = group;\n    this.filterName = item.value;\n    this.state = item.state;\n    this.main_metric_percent = item.main_metric_percent || '';\n    this.urlParamName = `${group}:${item.value}`\n  }\n}\n","<div class=\"cell-inner\">\n  <ng-select [searchable]=\"false\"\n             [(ngModel)]=\"groupBy\"\n             [items]=\"groupByItems\"\n             [clearable]=\"false\"\n             (change)=\"onChangeGroupBy($event)\"\n             bindLabel=\"humanizeName\"\n             class=\"pmm-select pmm-select--column pmm-select--column-main\">\n  </ng-select>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SelectOptionModel } from '../table-header-cell/modesl/select-option.model';\nimport { GroupByMock } from './mock/group-by.mock';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport { GetProfileBody } from '../profile/interfaces/get-profile-body.interfaces';\nimport { QueryParamsService } from '../../core/services/query-params.service';\n\n@Component({\n  selector: 'app-main-cell',\n  templateUrl: './main-cell.component.html',\n  styleUrls: ['./main-cell.component.scss']\n})\nexport class MainCellComponent implements OnInit {\n  public groupByData = GroupByMock;\n  public groupByItems: SelectOptionModel[];\n  public groupBy: any;\n  public currentGroupBy: string;\n  public currentParams: GetProfileBody;\n\n  constructor(private qanProfileService: QanProfileService, private queryParamsService: QueryParamsService) {\n    this.groupByItems = Object.entries(this.groupByData).map(metric => new SelectOptionModel(metric));\n    this.currentParams = this.qanProfileService.getProfileParams.getValue();\n    if (this.queryParamsService.takeParams().group_by) {\n      this.currentGroupBy = this.queryParamsService.takeParams().group_by;\n    } else {\n      this.currentGroupBy = this.currentParams.group_by;\n    }\n    this.groupBy = this.groupByItems.find(item => item.name === this.currentGroupBy);\n  }\n\n  ngOnInit() {\n  }\n\n  onChangeGroupBy(value) {\n    this.currentParams.group_by = value.name;\n    this.qanProfileService.updateProfileParams(this.currentParams);\n    this.qanProfileService.updateGroupBy(this.currentParams.group_by);\n    this.queryParamsService.addDimension(this.currentParams.group_by)\n  }\n}\n","export const GroupByMock = {\n  queryid: 'Query',\n  service_name: 'Service Name',\n  database: 'Database',\n  schema: 'Schema',\n  username: 'User Name',\n  client_host: 'Client Host'\n};\n\n","<span class=\"query-info__item\" >{{ header | async }}</span>\n<span class=\"query-info__item\" *ngIf=\"details?.group_by == 'queryid'\">{{ details?.filter_by || 'TOTAL' }}</span>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { QanProfileService } from '../../../profile/qan-profile.service';\nimport { FilterMenuService } from '../../../filter-menu/filter-menu.service';\nimport { Observable, Subscription, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ObjectDetails } from '../../../profile/interfaces/object-details.interface';\n\n@Component({\n  selector: 'app-details-fingerprint',\n  templateUrl: './details-fingerprint.component.html',\n  styleUrls: ['./details-fingerprint.component.css']\n})\nexport class DetailsFingerprintComponent implements OnInit, OnDestroy {\n  public fingerprint: string;\n  public details: ObjectDetails;\n  public header: Observable<string>;\n  constructor(\n    private qanProfileService: QanProfileService,\n    private filterMenuService: FilterMenuService\n  ) {\n    this.header = zip(\n      this.qanProfileService.getProfileInfo.details,\n      this.qanProfileService.getProfileInfo.fingerprint\n    ).pipe(\n      map(\n        zips => {\n          this.details = zips[0];\n          this.fingerprint = zips[1];\n          if (this.details.group_by === 'queryid') {\n            return this.fingerprint || 'Queries'\n          } else {\n            return this.humanizeLabels(this.details.group_by) + ': ' +\n              (this.details.filter_by === '' ? 'TOTAL' : this.details.filter_by);\n          }\n        }\n      )\n    );\n  }\n\n  humanizeLabels(groupName) {\n    return this.filterMenuService.humanNamesForGroup(groupName);\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n}\n","<app-qan-filter *ngIf=\"!isLoading; else spinner\" [processLabels]=\"labels\"></app-qan-filter>\n<ng-template #spinner>\n  <i class=\"fa fa-spinner fa-spin\"></i>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ObjectDetailsService } from '../../../../pmm-api-services/services/object-details.service';\nimport { catchError, map, switchMap, take } from 'rxjs/operators';\nimport { of } from 'rxjs/internal/observable/of';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { QanProfileService } from '../../../profile/qan-profile.service';\nimport { FilterMenuService } from '../../../filter-menu/filter-menu.service';\nimport { FilterViewerService } from '../../../filter-menu/filter-viewer.service';\n\n@Component({\n  selector: 'app-details-labels',\n  templateUrl: './details-labels.component.html',\n  styleUrls: ['./details-labels.component.scss']\n})\nexport class DetailsLabelsComponent implements OnInit, OnDestroy {\n  private details$: Subscription;\n  public labels: any = [];\n  public isLoading: boolean;\n\n  constructor(\n    private objectDetailsService: ObjectDetailsService,\n    private qanProfileService: QanProfileService,\n    private filterMenuService: FilterMenuService,\n    private filterViewerService: FilterViewerService,\n  ) {\n    this.isLoading = true;\n    this.details$ = this.qanProfileService.getProfileInfo.details.pipe(\n      switchMap(parsedParams => {\n        this.isLoading = true;\n        return this.getLabels(parsedParams)\n      }))\n      .subscribe(\n        response => {\n          if (response.length) {\n            this.labels = this.filterViewerService.filtersOrder(response);\n            this.filterViewerService.skipNA(this.labels);\n            this.filterViewerService.sortIdsValues(this.labels);\n          }\n          this.isLoading = false;\n        }\n      );\n  }\n\n  ngOnInit() {\n  }\n\n  getLabels(responseParams) {\n    return this.objectDetailsService.GetLabels(responseParams).pipe(\n      catchError(err => of([])),\n      map(response => this.filterMenuService.generateFilterGroup(response)),\n      catchError(err => of([]))\n    )\n  }\n\n  ngOnDestroy() {\n    this.details$.unsubscribe();\n  }\n}\n","<div class=\"row__item\">\n  <span>{{currentMetric.humanizeName}}</span>\n  <i class=\"fa fa-question-circle tooltip-question\" aria-hidden=\"true\"\n     placement=\"top\" [ngbTooltip]=\"currentMetric.tooltipText\">\n  </i>\n</div>\n<div class=\"row__item row__cells\">\n  <span [class.unit.unit--per-sec]=\"isRate\">\n    {{ isRate ? (currentMetric?.stats?.rate | humanize: pipeInfo?.ratePipe) : '0' }}\n  </span>\n  <div *ngIf=\"currentMetric?.metricName && currentMetric?.sparkline?.length\"\n       [appLoadPolygonChart]=\"currentMetric?.sparkline\"\n       [width]=\"150\"\n       class=\"scaling-svg-container app-tooltip\"\n       xkey=\"timestamp\" ykey=\"pointValue\"\n       [metricName]=\"currentMetric?.metricName\"\n       measurement=\"number\">\n    <!--    todo: check measurement type-->\n  </div>\n</div>\n<div class=\"row__item\">\n    <span>\n      {{isSum ? (currentMetric?.stats?.sum | humanize: pipeInfo?.sumPipe) : '0' }}\n    </span>\n    <span *ngIf=\"percentOfTotal\" class=\"total-percent\">\n      {{ percentOfTotal }}% of total\n    </span>\n</div>\n<div class=\"row__item row__cells\">\n  <span>\n    {{ isStats ? (currentMetric?.stats?.avg | humanize: pipeInfo?.perQueryStatsPipe) : isSum ? perQueryStat() : '0' }}\n  </span>\n\n  <div *ngIf=\"isLatencyChart\"\n       [appLatencyChart]=\"currentMetric.stats\"\n       [measurement]=\"pipeInfo?.perQueryStatsPipe\"\n       class=\"scaling-svg-container app-tooltip\"\n       data-tooltip=\"Loading...\">\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MetricModel } from '../../../profile-table/models/metric.model';\nimport { metricCatalogue } from '../../../data/metric-catalogue';\n\n@Component({\n  selector: 'app-details-row',\n  templateUrl: './details-row.component.html',\n  styleUrls: ['./details-row.component.scss']\n})\nexport class DetailsRowComponent implements OnInit {\n  @Input() currentMetric: MetricModel;\n  @Input() currentTotal: MetricModel;\n  @Input() allTotals: MetricModel[];\n  @Input() queryCount: any;\n\n  private metricData = metricCatalogue;\n  public percentOfTotal: number;\n  public currentMetricInfo: any;\n  public defaultPipeInfo = {\n    ratePipe: 'number',\n    sumPipe: 'number',\n    subSumPipe: 'percent',\n    sparklineType: 'number',\n    perQueryStatsPipe: 'number'\n  };\n\n  public pipeInfo: any;\n  public isLatencyChart: boolean;\n  public isRate: boolean;\n  public isSum: boolean;\n  public isStats: boolean;\n  public isPercentOfTotal: boolean;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.currentMetricInfo = this.metricData[this.currentMetric.metricName] || this.currentMetric;\n    this.pipeInfo = this.currentMetricInfo.pipeTypes || this.defaultPipeInfo;\n    this.isLatencyChart = this.currentMetric.stats.min && this.currentMetric.stats.max;\n    this.isRate = this.currentMetric.stats.rate >= 0;\n    this.isSum = this.currentMetric.stats.sum >= 0;\n    this.isStats = this.currentMetric.stats.avg >= 0;\n    this.isPercentOfTotal = !!(this.currentMetric.stats.sum || this.currentMetric.stats.sum_per_sec);\n    if (this.isPercentOfTotal) {\n      this.percentOfTotal = +this.percentFromNumber(this.currentTotal, this.currentMetric);\n    }\n  }\n\n  calculatePercentOfTotal(current, total) {\n    return +((+current / +total) * 100).toFixed(2);\n  }\n\n  percentFromNumber(total, current) {\n    const totalItem = this.allTotals.find(item => item.metricName === this.currentMetric.metricName);\n    const key = current.stats.sum ? 'sum' : 'sum_per_sec';\n    return this.calculatePercentOfTotal(current.stats[key], totalItem.stats[key]);\n  }\n\n  perQueryStat() {\n    return (+this.currentMetric.stats['sum'] / +this.queryCount).toFixed(2)\n  }\n}\n","<div class=\"grid-table\" #table [hidden]=\"isLoading\">\n  <header class=\"grid-table__row grid-table__row--metrics\">\n    <span class=\"grid-table__row--title\">Metric</span>\n    <span class=\"grid-table__row--title\">Rate/Second</span>\n    <span class=\"grid-table__row--title\">Total</span>\n    <span class=\"grid-table__row--title\">Per Query Stats</span>\n  </header>\n  <app-details-row *ngFor=\"let detail of details.metrics; let index = index\"\n                   [currentMetric]=\"detail\"\n                   [currentTotal]=\"details.totals[index]\"\n                   [allTotals]=\"details.totals\"\n                   [queryCount]=\"queryCount\"\n                   #detailsTableRows>\n  </app-details-row>\n</div>\n<i *ngIf=\"isLoading\" class=\"fa fa-spinner fa-spin spinner\"></i>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter, HostBinding,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { of, Subscription } from 'rxjs';\nimport { MetricModel } from '../../../profile-table/models/metric.model';\nimport { Router } from '@angular/router';\nimport { QanProfileService } from '../../../profile/qan-profile.service';\nimport { ObjectDetailsService } from '../../../../pmm-api-services/services/object-details.service';\nimport { DetailsSparklineModel } from '../../models/details-sparkline.model';\nimport { ObjectDetails } from '../../../profile/interfaces/object-details.interface';\n\n@Component({\n  selector: 'app-details-table',\n  templateUrl: './details-table.component.html',\n  styleUrls: ['./details-table.component.css']\n})\nexport class DetailsTableComponent implements OnInit, AfterViewInit {\n  @ViewChild('table', { static: true }) table: ElementRef;\n  @ViewChildren('detailsTableRows') tableRows: QueryList<any>;\n  @HostBinding('class.frame') isLoading = true;\n  @Output() finishRender = new EventEmitter();\n\n  protected dbName: string;\n  public fingerprint: string;\n  public currentParams: any;\n  public dimension: string;\n  public isTotal = false;\n  public details: any = {};\n  private group_by$: Subscription;\n  private details$: Subscription;\n  private firstDetails: ObjectDetails;\n  public queryCount: any;\n\n  constructor(\n    protected router: Router,\n    protected qanProfileService: QanProfileService,\n    protected objectDetailsService: ObjectDetailsService,\n  ) {\n    this.isLoading = true;\n    this.details$ = this.qanProfileService.getProfileInfo.details.pipe(\n      switchMap(parsedParams => {\n        this.isLoading = true;\n        this.currentParams = parsedParams;\n        return this.getDetailsData(parsedParams);\n      }),\n    ).subscribe(response => {\n      this.details = response;\n      this.details.metrics = this.detailsTableOrder(response['metrics']);\n      this.queryCount = this.details.metrics.find(item => item.metricName === 'num_queries').stats['sum'];\n      this.isTotal = !this.currentParams.filter_by;\n      this.isLoading = false;\n    });\n\n    this.group_by$ = this.qanProfileService.getGroupBy\n      .subscribe(() => this.details.metrics = [])\n  }\n\n  ngOnInit() {\n    // this.firstDetails = this.qanProfileService.getCurrentDetails;\n    // this.getDetailsData(this.firstDetails).subscribe(response => {\n    //   this.details = response;\n    //   this.details.metrics = this.detailsTableOrder(response['metrics']);\n    //   this.isLoading = false;\n    // });\n  }\n\n  ngAfterViewInit() {\n    this.tableRows.changes.subscribe(() => {\n      this.setLabelsHeight()\n    })\n  }\n\n  createSparklineModel(sparklines, name) {\n    return sparklines.map(item => new DetailsSparklineModel(item, name))\n  }\n\n  setLabelsHeight() {\n    const tableHeight = this.table.nativeElement.offsetHeight;\n    this.finishRender.emit(tableHeight);\n  }\n\n  detailsTableOrder(detailsTableData) {\n    return detailsTableData.sort((a, b) => this.sortDetails(a, b));\n  }\n\n  getDetailsData(detailsParams) {\n    return this.objectDetailsService.GetMetrics(detailsParams).pipe(\n      catchError(err => of({ metrics: [], sparkline: [] })),\n      map(response => {\n        const withData = Object.entries(response.metrics ? response.metrics : response['totals'])\n          .filter(metricData => Object.keys(metricData[1]).length)\n          .filter(metricData => !(metricData[1]['cnt'] !== 0 && metricData[1]['sum'] === undefined))\n          .map(withDataItem => {\n            const sparklineData = this.createSparklineModel(response.sparkline, withDataItem[0]);\n            return new MetricModel(withDataItem, sparklineData)\n          }) || [];\n        const withDataTotals = Object.entries(response['totals'])\n          .filter(metricData => Object.keys(metricData[1]).length)\n          .map(withDataTotalsItem => new MetricModel(withDataTotalsItem))\n          .filter(totalsItem => withData\n            .some(metricsItem => metricsItem.metricName === totalsItem.metricName)) || [];\n        return {\n          metrics: withData,\n          totals: withDataTotals\n        };\n      }),\n      catchError(err => of([])));\n  }\n\n  sortDetails(a, b) {\n    const order =\n      ['num_queries', 'num_queries_with_errors', 'num_queries_with_warnings', 'query_time', 'lock_time', 'rows_sent', 'rows_examined', ''];\n\n    let indA = order.indexOf(a['metricName']);\n    let indB = order.indexOf(b['metricName']);\n\n    if (indA === -1) {\n      indA = order.length - 1;\n    }\n\n    if (indB === -1) {\n      indB = order.length - 1;\n    }\n\n    return indA < indB ? -1 : 1;\n  }\n}\n","<ng-container *ngIf=\"!isLoading; else spinner\">\n  <ng-container *ngFor=\"let exampleParam of exampleParams\">\n    <app-query-example *ngIf=\"exampleParam?.example\" [exampleParam]=\"exampleParam?.example\"\n                       [beatify]=\"true\"></app-query-example>\n  </ng-container>\n</ng-container>\n<ng-template #spinner>\n  <i class=\"fa fa-spinner fa-spin spinner\"></i>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { catchError, map, switchMap, take } from 'rxjs/operators';\nimport { QanProfileService } from '../../../profile/qan-profile.service';\nimport { ObjectDetailsService } from '../../../../pmm-api-services/services/object-details.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { of } from 'rxjs/internal/observable/of';\nimport { ProfileDetailsService } from '../../profile-details.service';\nimport { ObjectDetails } from '../../../profile/interfaces/object-details.interface';\n\n@Component({\n  selector: 'app-examples-viewer',\n  templateUrl: './examples-viewer.component.html',\n  styleUrls: ['./examples-viewer.component.css']\n})\nexport class ExamplesViewerComponent implements OnInit, OnDestroy {\n  private example$: Subscription;\n  private defaultExample$: Subscription;\n  public exampleParams: any;\n  public currentDetails: ObjectDetails;\n  public isLoading: boolean;\n\n  constructor(\n    protected qanProfileService: QanProfileService,\n    protected objectDetailsService: ObjectDetailsService,\n    protected profileDetailsService: ProfileDetailsService\n  ) {\n    this.isLoading = true;\n    this.currentDetails = this.qanProfileService.getCurrentDetails;\n    this.example$ = this.qanProfileService.getProfileInfo.details.pipe(\n      switchMap(parsedParams => {\n        this.isLoading = true;\n        return this.getExample(parsedParams)\n      }))\n      .subscribe(\n        response => {\n          this.exampleParams = response;\n          this.profileDetailsService.updateExamples(this.exampleParams);\n          this.isLoading = false;\n        }\n      );\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.example$.unsubscribe();\n    this.defaultExample$.unsubscribe();\n  }\n\n  getExample(responseParams) {\n    return this.objectDetailsService.GetQueryExample(responseParams).pipe(\n      catchError(err => {\n        return of({ query_examples: [] })\n      }),\n      map(response => response.query_examples),\n      catchError(err => of([])))\n  }\n}\n","<ngb-accordion #acc=\"ngbAccordion\" activeIds=\"classicPanel\">\n  <ngb-panel id=\"classicPanel\">\n    <ng-template ngbPanelTitle>\n      <h5 class=\"card-header__title\">CLASSIC</h5>\n    </ng-template>\n    <ng-template ngbPanelContent>\n      <div class=\"card-body__content card-body__table\">\n        <i *ngIf=\"isClassicLoading\" class=\"fa fa-spinner fa-spin spinner\"></i>\n        <span *ngIf=\"classicError && !isClassicLoading; else table\" class=\"error-with-margin\">{{classicError}}</span>\n        <ng-template #table>\n          <table *ngIf=\"!classicError && !isClassicLoading\">\n            <tr *ngFor=\"let row of classicOutput\">\n              <td *ngFor=\"let col of row\">{{col + ''}}</td>\n            </tr>\n          </table>\n        </ng-template>\n      </div>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel>\n    <ng-template ngbPanelTitle>\n      <h5 class=\"card-header__title\">JSON</h5>\n    </ng-template>\n    <ng-template ngbPanelContent class=\"card-body\">\n      <div class=\"card-body__content\">\n        <i *ngIf=\"isJsonLoading\" class=\"fa fa-spinner fa-spin spinner\"></i>\n        <span *ngIf=\"!isJsonLoading && jsonError\">{{jsonError}}</span>\n        <app-json-tree *ngIf=\"!isJsonLoading && !jsonError\" [json]=\"jsonOutput\"></app-json-tree>\n      </div>\n    </ng-template>\n  </ngb-panel>\n  <!--  <ngb-panel>-->\n  <!--    <ng-template ngbPanelTitle>-->\n  <!--      <h5 class=\"card-header__title\">Visual</h5>-->\n  <!--    </ng-template>-->\n  <!--    <ng-template ngbPanelContent>-->\n  <!--      <div class=\"card-body__content\">-->\n  <!--        <pre>{{ visualOutput }}</pre>-->\n  <!--      </div>-->\n  <!--    </ng-template>-->\n  <!--  </ngb-panel>-->\n</ngb-accordion>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActionsService } from '../../../../pmm-api-services/services/actions.service';\nimport { interval, of, Subscription } from 'rxjs';\nimport { catchError, finalize, map, startWith, switchMap, takeWhile } from 'rxjs/operators';\nimport { QanProfileService } from '../../../profile/qan-profile.service';\nimport { ObjectDetailsService } from '../../../../pmm-api-services/services/object-details.service';\nimport { ObjectDetails } from '../../../profile/interfaces/object-details.interface';\n\n@Component({\n  selector: 'app-explain',\n  templateUrl: './explain.component.html',\n  styleUrls: ['./explain.component.css']\n})\nexport class ExplainComponent implements OnInit, OnDestroy {\n  private example$: Subscription;\n  private defaultExample$: Subscription;\n  private classicStart$: Subscription;\n  private jsonStart$: Subscription;\n\n  public currentDetails: ObjectDetails;\n  public classicOutput: string;\n  public classicError = '';\n  public jsonOutput: string;\n  public jsonError = '';\n  public visualOutput: string;\n  public isClassicLoading: boolean;\n  public isJsonLoading: boolean;\n\n  constructor(\n    private actionsService: ActionsService,\n    protected objectDetailsService: ObjectDetailsService,\n    protected qanProfileService: QanProfileService,\n  ) {\n    this.isClassicLoading = true;\n    this.currentDetails = this.qanProfileService.getCurrentDetails;\n    this.example$ = this.qanProfileService.getProfileInfo.details.pipe(\n      switchMap(parsedParams => {\n        this.isClassicLoading = true;\n        this.isJsonLoading = true;\n        return this.getExample(parsedParams)\n      }))\n      .subscribe(\n        response => {\n          this.startExplainActions(response[0])\n        }\n      );\n  }\n\n  ngOnInit() {\n  }\n\n  private startExplainActions(value) {\n    switch (value.service_type) {\n      case 'mysql':\n        console.log('Example: ', value);\n        if (!('example' in value) || value.example === '') {\n          this.classicError = 'Cannot display query explain without query example at this time.';\n          this.isClassicLoading = false;\n          this.jsonError = 'Cannot display query explain without query example at this time.';\n          this.isJsonLoading = false;\n          return;\n        }\n        this.startClassic(value);\n        this.startJson(value);\n        break;\n      default:\n        this.classicError = 'Not implemented yet.';\n        this.isClassicLoading = false;\n        this.jsonError = 'Not implemented yet.';\n        this.isJsonLoading = false;\n        return\n    }\n  }\n\n  private startClassic(value) {\n    this.classicStart$ = this.actionsService.StartMySQLExplainTraditionalJSONAction({\n      service_id: value.service_id,\n      query: value.example,\n      database: value.schema,\n    }).pipe(\n      catchError(error => {\n        error.error.done = true;\n        return of(error.error)\n      }),\n      switchMap((item) => !item.error ? this.getActionResult(item) : of(item)),\n      takeWhile(val => this.isClassicLoading)\n    ).subscribe(res => {\n      if (res.done) {\n        if (!res.error) {\n          this.classicError = '';\n          this.classicOutput = JSON.parse(res.output);\n        } else {\n          this.classicError = res.error;\n        }\n        this.isClassicLoading = false;\n        if (this.classicStart$) {\n          this.classicStart$.unsubscribe()\n        }\n      }\n    });\n  }\n\n  private startJson(value) {\n    this.jsonStart$ = this.actionsService.StartMySQLExplainJSONAction({\n      service_id: value.service_id,\n      query: value.example,\n      database: value.schema,\n    }).pipe(\n      catchError(error => {\n        error.error.done = true;\n        return of(error.error)\n      }),\n      switchMap((item) => !item.error ? this.getActionResult(item) : of(item)),\n      takeWhile(val => this.isJsonLoading)\n    ).subscribe(\n      res => {\n        if (res.done) {\n          if (!res.error) {\n            this.jsonError = '';\n            this.jsonOutput = JSON.parse(res.output);\n          } else {\n            this.jsonError = res.error;\n          }\n          this.isJsonLoading = false;\n          if (this.jsonStart$) {\n            this.jsonStart$.unsubscribe();\n          }\n        }\n      },\n      err => {\n        this.isJsonLoading = false;\n        console.log('error - ', err)\n      }\n    );\n  }\n\n  private getActionResult(item) {\n    return interval(1000)\n      .pipe(\n        startWith(0),\n        switchMap(() => this.actionsService.GetAction({ action_id: item.action_id }))\n      );\n  }\n\n  getExample(responseParams) {\n    return this.objectDetailsService.GetQueryExample(responseParams).pipe(\n      catchError(err => of({ query_examples: [] })),\n      map(response => response.query_examples),\n      catchError(err => of([])))\n  }\n\n  ngOnDestroy(): void {\n    if (this.classicStart$) {\n      this.classicStart$.unsubscribe()\n    }\n    if (this.jsonStart$) {\n      this.jsonStart$.unsubscribe()\n    }\n  }\n\n}\n","<pre class=\"example-output\">\n  <code [innerHTML]=\"highlightExampleQuery(exampleParam)\"></code>\n</pre>\n<button class=\"copy-button\"\n        id=\"copyQueryExample\"\n        ngxClipboard\n        (cbOnSuccess)=\"showSuccessNotification()\"\n        [class.copy-button--active]=\"isCopied\"\n        [cbContent]=\"exampleParam\">Copy to clipboard\n</button>\n","import { Component, Input } from '@angular/core';\nimport * as vkbeautify from 'vkbeautify';\nimport * as hljs from 'highlight.js';\n\n@Component({\n  selector: 'app-query-example',\n  templateUrl: './query-example.component.html',\n  styleUrls: ['./query-example.component.css']\n})\nexport class QueryExampleComponent {\n  @Input() exampleParam: any;\n  @Input() beatify: boolean;\n\n  public isCopied = false;\n  event = new Event('showSuccessNotification');\n\n  constructor() {\n  }\n\n  /**\n   * Fix beautify dispalying text, will be delete after approve https://github.com/vkiryukhin/vkBeautify/pull/25\n   * @param {string} text\n   * @returns {string}\n   */\n  fixBeautifyText(text: string): string {\n    return vkbeautify.sql(text.toLowerCase()).replace('explain', 'EXPLAIN ').replace('  ', ' ');\n  }\n\n  highlightExampleQuery(exampleText) {\n    if (this.beatify) {\n      exampleText = this.fixBeautifyText(exampleText);\n    }\n    return hljs.highlight('sql', exampleText).value;\n  }\n\n  showSuccessNotification() {\n    this.isCopied = true;\n    window.parent.document.dispatchEvent(this.event);\n    setTimeout(() => {\n      this.isCopied = false\n    }, 3000);\n  }\n}\n","<span *ngIf=\"isError; else showExample\">{{createTableError}}</span>\n<ng-template #showExample>\n    <app-query-example *ngIf=\"createTableOutput\" [exampleParam]=\"createTableOutput\"></app-query-example>\n</ng-template>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { catchError, startWith, switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { QanProfileService } from '../../../../../profile/qan-profile.service';\nimport { interval } from 'rxjs/internal/observable/interval';\nimport { ActionsService } from '../../../../../../pmm-api-services/services/actions.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { Observable as __Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-table-create',\n  templateUrl: './table-create.component.html',\n  styleUrls: ['./table-create.component.css']\n})\nexport class TableCreateComponent implements OnInit, OnDestroy {\n  @Input() tableName: string;\n  @Input() globalConfig: any;\n\n  private table$: Subscription;\n\n  public createTableOutput: any;\n  public createTableError = '';\n  public isError = false;\n  public unsubscribe = false;\n\n  constructor(\n    private actionsService: ActionsService,\n    protected qanProfileService: QanProfileService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.startShowCreateTable(this.globalConfig, this.tableName);\n  }\n\n  ngOnDestroy() {\n    if (this.table$) {\n      this.table$.unsubscribe();\n    }\n  }\n\n  private startShowCreateTable(value, tableName) {\n    let startAction: __Observable<{ action_id?: string, pmm_agent_id?: string }>;\n    switch (value.service_type) {\n      case 'mysql':\n        startAction = this.actionsService.StartMySQLShowCreateTableAction({\n          service_id: value.service_id,\n          database: value.schema,\n          table_name: tableName\n        }\n        );\n        break;\n      case 'postgresql':\n        startAction = this.actionsService.StartPostgreSQLShowCreateTableAction({\n          service_id: value.service_id,\n          database: value.schema,\n          table_name: tableName\n        }\n        );\n        break;\n      default:\n        return\n    }\n    this.table$ = startAction.pipe(\n      catchError(error => {\n        error.error.done = true;\n        return of(error.error)\n      }),\n      switchMap((item) => !item.error ? this.getActionResult(item) : of(item))\n    ).subscribe(res => {\n      if (res.done) {\n        if (!res.error) {\n          this.createTableError = '';\n          this.isError = false;\n          this.createTableOutput = res.output;\n        } else {\n          this.createTableError = res.error;\n          this.isError = true;\n        }\n        this.table$.unsubscribe();\n      }\n    });\n  }\n\n  private getActionResult(item) {\n    return interval(1000)\n      .pipe(\n        startWith(0),\n        switchMap(() => this.actionsService.GetAction({ action_id: item.action_id }))\n      );\n  }\n\n}\n","<span *ngIf=\"error && isError; else showOutput\">{{error}}</span>\n<ng-template #showOutput>\n  <table>\n    <tr *ngFor=\"let row of tableDataOutput\">\n      <td *ngFor=\"let col of row\">{{col + ''}}</td>\n    </tr>\n  </table>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActionsService } from '../../../../../../pmm-api-services/services';\nimport { catchError, startWith, switchMap } from 'rxjs/operators';\nimport { interval, Observable as __Observable, of, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-table-indexes',\n  templateUrl: './table-indexes.component.html',\n  styleUrls: ['./table-indexes.component.css']\n})\nexport class TableIndexesComponent implements OnInit {\n  @Input() tableName: string;\n  @Input() globalConfig: any;\n\n  private table$: Subscription;\n\n  public tableDataOutput: any;\n  public error = '';\n  public isError = false;\n  public unsubscribe = false;\n\n  constructor(private actionsService: ActionsService) { }\n\n  ngOnInit() {\n    this.startShowIndexAction(this.globalConfig, this.tableName);\n  }\n\n  private startShowIndexAction(value, tableName) {\n    let startAction: __Observable<{ action_id?: string, pmm_agent_id?: string }>;\n    switch (value.service_type) {\n      case 'mysql':\n        startAction = this.actionsService.StartMySQLShowIndexAction({\n          service_id: value.service_id,\n          database: value.schema,\n          table_name: tableName\n        }\n        );\n        break;\n      case 'postgresql':\n        startAction = this.actionsService.StartPostgreSQLShowIndexAction({\n          service_id: value.service_id,\n          database: value.schema,\n          table_name: tableName\n        }\n        );\n        break;\n      default:\n        return\n    }\n    this.table$ = startAction.pipe(\n      catchError(error => {\n        error.error.done = true;\n        return of(error.error)\n      }),\n      switchMap((item) => !item.error ? this.getActionResult(item) : of(item))\n    ).subscribe(res => {\n      if (res.done) {\n        if (!res.error) {\n          this.error = '';\n          this.isError = false;\n          this.tableDataOutput = JSON.parse(res.output);\n        } else {\n          this.error = res.error;\n          this.isError = true;\n        }\n        this.table$.unsubscribe();\n      }\n    });\n  }\n\n  private getActionResult(item) {\n    return interval(1000)\n      .pipe(\n        startWith(0),\n        switchMap(() => this.actionsService.GetAction({ action_id: item.action_id }))\n      );\n  }\n\n}\n","<span *ngIf=\"statusTableError && isError; else showOutput\">{{statusTableError}}</span>\n<ng-template #showOutput>\n  <table *ngIf=\"!classicError\">\n    <tr *ngFor=\"let row of showTableStatusOutput\">\n      <td *ngFor=\"let col of row\">{{col + ''}}</td>\n    </tr>\n  </table>\n</ng-template>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { catchError, startWith, switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { QanProfileService } from '../../../../../profile/qan-profile.service';\nimport { interval } from 'rxjs/internal/observable/interval';\nimport { ActionsService } from '../../../../../../pmm-api-services/services/actions.service';\nimport { of } from 'rxjs/internal/observable/of';\n\n@Component({\n  selector: 'app-table-status',\n  templateUrl: './table-status.component.html',\n  styleUrls: ['./table-status.component.css']\n})\nexport class TableStatusComponent implements OnInit, OnDestroy {\n  @Input() tableName: string;\n  @Input() globalConfig: any;\n\n\n  private status$: Subscription;\n  public showTableStatusOutput: string;\n  public statusTableError = '';\n  public isError = false;\n\n  constructor(\n    private actionsService: ActionsService,\n    protected qanProfileService: QanProfileService,\n  ) {\n  }\n\n  ngOnInit() {\n    switch (this.globalConfig.service_type) {\n      case 'mysql':\n        this.startMySQLShowTableStatus(this.globalConfig, this.tableName);\n        break;\n      default:\n        this.statusTableError = 'Not implemented yet.';\n        this.isError = true;\n        return\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.status$) {\n      this.status$.unsubscribe()\n    }\n  }\n\n  private startMySQLShowTableStatus(value, tableName) {\n    this.status$ = this.actionsService.StartMySQLShowTableStatusAction({\n      service_id: value.service_id,\n      database: value.schema,\n      table_name: tableName\n    }\n    ).pipe(\n      catchError(error => {\n        error.error.done = true;\n        return of(error.error)\n      }),\n      switchMap((item) => !item.error ? this.getActionResult(item) : of(item))\n    ).subscribe(res => {\n      if (res.done) {\n        if (!res.error) {\n          this.statusTableError = '';\n          this.isError = false;\n          this.showTableStatusOutput = JSON.parse(res.output);\n        } else {\n          this.statusTableError = res.error;\n          this.isError = true;\n        }\n\n        this.status$.unsubscribe();\n      }\n    });\n  }\n\n  private getActionResult(item) {\n    return interval(1000)\n      .pipe(\n        startWith(0),\n        switchMap(() => this.actionsService.GetAction({ action_id: item.action_id }))\n      );\n  }\n}\n","<ngb-tabset *ngIf=\"!tablesError; else alertMessage\" class=\"pmm-grafana-tabset\">\n  <ngb-tab *ngFor=\"let tableName of tablesNames$ | async\" [title]=\"tableName\">\n    <ng-template ngbTabContent>\n      <ngb-accordion #acc=\"ngbAccordion\" activeIds=\"createTale\">\n        <ngb-panel id=\"createTale\">\n          <ng-template ngbPanelTitle>\n            <h5 class=\"card-header__title\">Table</h5>\n          </ng-template>\n          <ng-template ngbPanelContent>\n            <div class=\"card-body__content\">\n              <app-table-create [tableName]=\"tableName\" [globalConfig]=\"globalConfig\"></app-table-create>\n            </div>\n          </ng-template>\n        </ngb-panel>\n        <ngb-panel>\n          <ng-template ngbPanelTitle>\n            <h5 class=\"card-header__title\">Status</h5>\n          </ng-template>\n          <ng-template ngbPanelContent class=\"card-body\">\n            <div class=\"card-body__content\">\n              <app-table-status [tableName]=\"tableName\" [globalConfig]=\"globalConfig\"></app-table-status>\n            </div>\n          </ng-template>\n        </ngb-panel>\n        <ngb-panel>\n          <ng-template ngbPanelTitle>\n            <h5 class=\"card-header__title\">Indexes</h5>\n          </ng-template>\n          <ng-template ngbPanelContent class=\"card-body\">\n            <div class=\"card-body__content\">\n              <app-table-indexes [tableName]=\"tableName\" [globalConfig]=\"globalConfig\"></app-table-indexes>\n            </div>\n          </ng-template>\n        </ngb-panel>\n      </ngb-accordion>\n    </ng-template>\n  </ngb-tab>\n</ngb-tabset>\n<ng-template #alertMessage>\n  <ngb-alert [type]=\"'warning'\">{{ tablesError }}</ngb-alert>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActionsService } from '../../../../pmm-api-services/services/actions.service';\nimport { ObjectDetailsService } from '../../../../pmm-api-services/services/object-details.service';\nimport { QanProfileService } from '../../../profile/qan-profile.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { catchError, filter, map, startWith, switchMap, take } from 'rxjs/operators';\nimport { interval } from 'rxjs/internal/observable/interval';\nimport { of } from 'rxjs/internal/observable/of';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { ObjectDetails } from '../../../profile/interfaces/object-details.interface';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css']\n})\nexport class TablesComponent implements OnInit, OnDestroy {\n  public tablesNames$ = new BehaviorSubject([]);\n  public globalConfig: any;\n\n  private example$: Subscription;\n  private defaultExample$: Subscription;\n  private classicStart$: Subscription;\n\n  public currentDetails: ObjectDetails;\n  public classicOutput: any;\n  public tablesError = '';\n  public unsubscribe = false;\n  public isExplainLoading: boolean;\n\n  constructor(\n    private actionsService: ActionsService,\n    protected objectDetailsService: ObjectDetailsService,\n    protected qanProfileService: QanProfileService,\n  ) {\n    this.isExplainLoading = true;\n    this.currentDetails = this.qanProfileService.getCurrentDetails;\n    this.example$ = this.qanProfileService.getProfileInfo.details.pipe(\n      switchMap(parsedParams => this.getExample(parsedParams)))\n      .subscribe(\n        response => this.startTablesActions(response[0])\n      );\n    this.defaultExample$ = this.getExample(this.currentDetails)\n      .pipe(take(1))\n      .subscribe(response => this.startTablesActions(response[0]));\n\n    this.tablesNames$.pipe(filter(names => !!names.length))\n  }\n\n  ngOnInit() {\n  }\n\n  private startTablesActions(value) {\n    this.globalConfig = value;\n    switch (value.service_type) {\n      case 'mysql':\n        if (!('example' in value) || value.example === '') {\n          this.tablesError = 'Cannot display table info without query example at this moment.'\n          return;\n        }\n        this.startClassic(value);\n        break;\n      case 'postgresql':\n        this.tablesNames$.next(value.tables);\n        break;\n    }\n  }\n\n  private startClassic(value) {\n    this.classicStart$ = this.actionsService.StartMySQLExplainTraditionalJSONAction({\n      service_id: value.service_id,\n      query: value.example,\n      database: value.schema,\n    }).pipe(\n      catchError(error => {\n        error.error.done = true;\n        return of(error.error)\n      }),\n      switchMap((item) => !item.error ? this.getActionResult(item) : of(item))\n    ).subscribe(res => {\n      if (res.done) {\n        const names = [];\n        if (!res.error) {\n          let indexOfName;\n          this.tablesError = '';\n          this.classicOutput = JSON.parse(res.output);\n          this.classicOutput.forEach((row, index) => {\n            if (!index) {\n              indexOfName = row.indexOf('table');\n            } else {\n              names.push(row[indexOfName]);\n            }\n          })\n        } else {\n          this.tablesError = res.error;\n        }\n        if (this.classicStart$) {\n          this.tablesNames$.next(names);\n          this.classicStart$.unsubscribe()\n        }\n      }\n    });\n  }\n\n  private getActionResult(item) {\n    return interval(1000)\n      .pipe(\n        startWith(0),\n        switchMap(() => this.actionsService.GetAction({ action_id: item.action_id }))\n      );\n  }\n\n  getExample(responseParams) {\n    return this.objectDetailsService.GetQueryExample(responseParams).pipe(\n      catchError(err => of({ query_examples: [] })),\n      map(response => response.query_examples),\n      catchError(err => of([])))\n  }\n\n  ngOnDestroy(): void {\n    if (this.classicStart$) {\n      this.classicStart$.unsubscribe()\n    }\n\n    this.example$.unsubscribe();\n    this.defaultExample$.unsubscribe();\n  }\n\n}\n","export class DetailsSparklineModel {\n  pointOrder: number;\n  pointValue: number;\n  time_frame = 0;\n  timestamp = 0;\n\n  constructor(data, name) {\n    this.pointOrder = data['point'] || 0;\n    this.time_frame = data.time_frame;\n    this.timestamp = data.timestamp;\n    this.pointValue = data[this.makeCorrectName(name)] && data[this.makeCorrectName(name)] !== 'NaN' ?\n      data[this.makeCorrectName(name)] : 0;\n  }\n\n  makeCorrectName(name) {\n    switch (name) {\n      case 'load':\n        return 'load';\n      case 'num_queries':\n        return 'num_queries_per_sec';\n      default:\n        return `m_${name}_sum_per_sec`\n    }\n  }\n}\n","<app-details-fingerprint></app-details-fingerprint>\n<ngb-tabset class=\"pmm-grafana-tabset\" [activeId]=\"activeTabId\" (tabChange)=\"onTabChange($event)\">\n  <ngb-tab [title]=\"tabs.details.title\" [id]=\"tabs.details.id\">\n    <ng-template ngbTabContent>\n      <section class=\"details-output\">\n        <app-details-table (finishRender)=\"onFinishDetailsTableRender($event)\"></app-details-table>\n        <app-details-labels class=\"labels-wrapper\" #labels></app-details-labels>\n      </section>\n    </ng-template>\n  </ngb-tab>\n  <ngb-tab *ngIf=\"!isTotal\" [title]=\"tabs.examples.title\" [id]=\"tabs.examples.id\">\n    <ng-template ngbTabContent>\n      <app-examples-viewer></app-examples-viewer>\n    </ng-template>\n  </ngb-tab>\n  <ngb-tab *ngIf=\"!isTotal\" [title]=\"tabs.explain.title\" [id]=\"tabs.explain.id\">\n    <ng-template ngbTabContent>\n      <app-explain></app-explain>\n    </ng-template>\n  </ngb-tab>\n  <ngb-tab *ngIf=\"!isTotal\" [title]=\"tabs.tables.title\" [id]=\"tabs.tables.id\">\n    <ng-template ngbTabContent>\n      <app-tables></app-tables>\n    </ng-template>\n  </ngb-tab>\n</ngb-tabset>\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport { MetricModel } from '../profile-table/models/metric.model';\nimport { QueryParamsService } from '../../core/services/query-params.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-query-details',\n  templateUrl: './profile-details.component.html',\n  styleUrls: ['./profile-details.component.scss']\n})\n\nexport class ProfileDetailsComponent implements OnInit {\n  @ViewChild('labels', { read: ElementRef, static: false }) labelsFilters: ElementRef;\n  protected dbName: string;\n  public fingerprint: string;\n  public isTotal = false;\n  public details: MetricModel[] = [];\n  public activeTabId: string;\n  public tabs = {\n    details: {\n      id: 'details',\n      title: 'Details'\n    },\n    examples: {\n      id: 'examples',\n      title: 'Examples'\n    },\n    explain: {\n      id: 'explain',\n      title: 'Explain'\n    },\n    tables: {\n      id: 'tables',\n      title: 'Tables'\n    }\n  };\n\n  constructor(\n    protected router: Router,\n    protected route: ActivatedRoute,\n    protected qanProfileService: QanProfileService,\n    protected queryParamsService: QueryParamsService\n  ) {\n    this.activeTabId = this.route.snapshot.queryParams.active_details_tab || this.tabs.details.id;\n  }\n\n  ngOnInit() {\n  }\n\n  onFinishDetailsTableRender(event) {\n    this.labelsFilters.nativeElement.style.setProperty('--labels-height', `${event}px`);\n  }\n\n  onTabChange(event) {\n    this.queryParamsService.addActiveTabToUrl(event.nextId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\n\n@Injectable()\nexport class ProfileDetailsService {\n  private examples = new Subject();\n\n  constructor() {\n  }\n\n  updateExamples(examples) {\n    this.examples.next(examples);\n  }\n\n  get getExamplesSubject() {\n    return this.examples\n  }\n}\n","import { metricCatalogue } from '../../data/metric-catalogue';\n\nexport class MetricModel {\n  metricName: string;\n  humanizeName: string;\n  tooltipText: string;\n  stats: any;\n  sparkline: any;\n\n  constructor(metric: Array<any> = ['', {}], sparkline = []) {\n    const metricsInfo = metricCatalogue;\n    const [metricName, stats] = metric;\n\n    this.metricName = metricName;\n    if (metricsInfo[metricName]) {\n      this.humanizeName = metricsInfo[metricName].humanizeName;\n      this.tooltipText = metricsInfo[metricName].tooltipText;\n    } else {\n      this.humanizeName = metricName;\n      this.tooltipText = metricName;\n    }\n\n    this.stats = stats.stats || stats;\n    this.sparkline = sparkline.length && sparkline.some(sparklinePoint => sparklinePoint.pointValue) ? sparkline : [];\n  }\n\n}\n","import { MetricModel } from './metric.model';\n\nexport class TableDataModel {\n  metrics: Array<MetricModel>;\n  sparkline: Array<Object>;\n  dimension: string;\n  fingerprint: string;\n  tables: string[];\n  rank: number;\n  count: number;\n  load: number;\n\n  constructor(row) {\n    row.metrics = row.metrics || {};\n    this.metrics = Object.entries(row.metrics).map(item => new MetricModel(item));\n    this.sparkline = row.sparkline || [];\n    this.dimension = row.dimension || '';\n    this.fingerprint = row.fingerprint || '';\n    this.tables = row.tables || [];\n    this.rank = row.rank || 0;\n    this.count = row.num_queries;\n    this.load = row.load;\n  }\n}\n","<div class=\"content-table-wrapper\" [class.content-table-wrapper--border]=\"isLoading\">\n  <div [hidden]=\"isLoading\" class=\"main-wrapper\" #mainTableWrapper>\n      <div class=\"table-wrapper--outer\">\n        <perfect-scrollbar [config]=\"scrollbarConfig\" class=\"pmm-scrollbar\">\n          <div class=\"table-wrapper--inner\">\n            <table class=\"qan-table\" #qanTable>\n              <ng-container\n                *ngFor=\"let row of tableData | paginate: paginationConfig; let index = index; let last = last\" #tableRows>\n                <tr *ngIf=\"!index\" class=\"qan-table__row qan-table__row--heading\">\n                  <th class=\"text-color--dark qan-table__cell qan-table__cell--fixed qan-table__cell--first-c\">#</th>\n                  <th class=\"qan-table__cell qan-table__cell--fixed qan-table__cell--second-c\">\n                    <app-main-cell></app-main-cell>\n                  </th>\n                  <ng-container *ngFor=\"let metric of row.metrics; let indexMetrics = index\">\n                    <app-qan-table-header-cell [currentColumnName]=\"metric.metricName\"\n                                               [fullData]=\"tableData\"\n                                               [processIndex]=\"indexMetrics\"\n                                               [columnQuantity]=\"row.metrics.length - 1\"\n                                               (toEndOfTable)=\"toEndOfScrollbar()\"\n                                               [rowMetrics]=\"row.metrics\">\n                    </app-qan-table-header-cell>\n                  </ng-container>\n                </tr>\n                <tr (click)=\"showDetails(row)\"\n                    [routerLink]=\"['details/', row.rank ? row.rank : 0]\"\n                    [class.qan-table__row--active]=\"row.dimension === detailsBy\"\n                    class=\"qan-table__row qan-table--body\">\n                  <td class=\"qan-table__cell qan-table__cell--first-c qan-table__cell--fixed\">\n                    {{index ? currentPage * perPage - perPage + index : ''}}\n                  </td>\n                  <td class=\"qan-table__cell qan-table__cell--second-c qan-table__cell--fixed \">\n                    <div class=\"overlay-container\">\n                    <span *ngIf=\"!row.fingerprint\" [class.font--roboto-bold]=\"!index\" class=\" overlay-container__item qan-table__abstract\">\n                      {{row.dimension || (index ? 'n/a' : 'TOTAL')}}\n                    </span>\n                      <span *ngIf=\"row.fingerprint\" [class.font--roboto-bold]=\"!index\" class=\" overlay-container__item qan-table__abstract\">\n                      {{index ? row.fingerprint : 'TOTAL' }}\n                    </span>\n                    </div>\n                  </td>\n                  <ng-container *ngFor=\"let metric of row.metrics; let index = index\">\n                    <app-qan-table-cell [metricData]=\"metric\"\n                                        [sparklineData]=\"row.sparkline\"\n                                        [checkSparkline]=\"!index\"\n                                        [totalSum]=\"tableData[0]['metrics']\">\n                    </app-qan-table-cell>\n                  </ng-container>\n                </tr>\n              </ng-container>\n            </table>\n          </div>\n        </perfect-scrollbar>\n        <span class=\"right-table-border\" #rightTableBorder></span>\n      </div>\n    </div>\n  <div *ngIf=\"paginationConfig.totalItems > 10 && !isLoading\" class=\"pagination-tools\">\n      <pagination-controls id=\"qan-table-pagination\"\n                           class=\"pmm-pagination\"\n                           autoHide=\"true\"\n                           previousLabel=\"<\"\n                           nextLabel=\">\"\n                           (pageChange)=\"pageChanged($event)\">\n      </pagination-controls>\n      <div class=\"pagination-tools__right-column\">\n        <span class=\"total-items\">{{ showTotalItems() }}</span>\n        <div class=\"results-per-page\">\n          <span>Results per page</span>\n          <ng-select [searchable]=\"false\"\n                     [(ngModel)]=\"perPage\"\n                     [items]=\"selectPaginationConfig\"\n                     [clearable]=\"false\"\n                     (change)=\"onChangePerPage($event)\"\n                     class=\"pmm-select pmm-select--column pmm-select--column-main\">\n          </ng-select>\n        </div>\n      </div>\n    </div>\n  <i *ngIf=\"isLoading\" class=\"fa fa-spinner fa-spin spinner\"></i>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { PerfectScrollbarComponent, PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { SelectOptionModel } from '../table-header-cell/modesl/select-option.model';\nimport { TableDataModel } from './models/table-data.model';\nimport { MetricModel } from './models/metric.model';\nimport { ProfileService } from '../../pmm-api-services/services/profile.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { catchError, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { GetProfileBody } from '../profile/interfaces/get-profile-body.interfaces';\nimport { QueryParamsService } from '../../core/services/query-params.service';\nimport { Subject } from 'rxjs';\nimport { GroupByMock } from '../main-cell/mock/group-by.mock';\n\n@Component({\n  selector: 'app-qan-table',\n  templateUrl: './profile-table.component.html',\n  styleUrls: ['./profile-table.component.scss']\n})\nexport class ProfileTableComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Output() finishRender = new EventEmitter();\n  @ViewChild(PerfectScrollbarComponent, { static: true }) componentRef?: PerfectScrollbarComponent;\n  @ViewChild('qanTable', { static: true }) qanTable: ElementRef;\n  @ViewChild('rightTableBorder', { static: false }) rightBorder: ElementRef;\n  @ViewChild('mainTableWrapper', { static: true }) mainTableWrapper: ElementRef;\n  @ViewChildren('tableRows') tableRows: QueryList<any>;\n  private destroy$ = new Subject();\n\n  public scrollbarConfig: PerfectScrollbarConfigInterface = {\n    suppressScrollY: true\n  };\n\n  public isLoading: boolean;\n  public tableData: TableDataModel[] | any;\n  public currentParams: GetProfileBody;\n  public detailsBy: string;\n  public fingerprint: string;\n  public report$: Subscription;\n  public detailsBy$: Subscription;\n  public fingerprint$: Subscription;\n  public metrics: SelectOptionModel[];\n  public isNeedScroll = false;\n  public event = new Event('hideTooltip');\n\n  public selectPaginationConfig = [10, 50, 100];\n  public paginationConfig = {\n    id: 'qan-table-pagination',\n    itemsPerPage: this.selectPaginationConfig[0],\n    currentPage: 1,\n    totalItems: 0,\n  };\n\n  public currentPage = this.paginationConfig.currentPage;\n  public perPage = this.paginationConfig.itemsPerPage;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private qanProfileService: QanProfileService,\n    private profileService: ProfileService,\n    private queryParamsService: QueryParamsService,\n  ) {\n    this.isLoading = true;\n\n    this.report$ = this.qanProfileService.getProfileParams.pipe(\n      takeUntil(this.destroy$),\n      map(params => {\n        this.currentParams = params;\n        return params;\n      }),\n      switchMap(parsedParams => {\n        this.isLoading = true;\n\n        return this.profileService.GetReport(parsedParams).pipe(\n          catchError(err => {\n            console.log('error - ', err);\n            return of([])\n          }),\n          map(data => this.generateTableData(data)),\n          catchError(err => {\n            console.log('error - ', err);\n            return of([])\n          })\n        )\n      }),\n    ).subscribe(\n      data => {\n        this.tableData = data;\n        this.isLoading = false;\n      },\n      err => {\n        console.log('error - ', err)\n      },\n      () => {\n        console.log('complete');\n      }\n    );\n\n    this.detailsBy$ = this.qanProfileService.getProfileInfo.detailsBy\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(details_by => this.detailsBy = details_by);\n    this.fingerprint$ = this.qanProfileService.getProfileInfo.fingerprint\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(fingerprint => this.fingerprint = fingerprint);\n  }\n\n  ngOnInit() {\n    this.detailsBy = this.route.snapshot.queryParams.filter_by;\n  }\n\n  ngAfterViewInit() {\n    this.tableRows.changes.subscribe(() => {\n      this.ngForRendered();\n      this.finishRender.emit(true);\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  ngForRendered() {\n    if (this.isNeedScroll) {\n      this.toEndOfScrollbar();\n    }\n    this.isNeedScroll = false;\n    window.dispatchEvent(this.event);\n    setTimeout(() => {\n      const height = this.qanTable.nativeElement.offsetHeight;\n      this.rightBorder.nativeElement.style.setProperty('--border-height', `${height}px`);\n    }, 0);\n  }\n\n  toEndOfScrollbar() {\n    setTimeout(() => {\n      this.componentRef.directiveRef.scrollToRight()\n    }, 0);\n  }\n\n  showDetails(row: TableDataModel) {\n    this.qanProfileService.updateFingerprint(row.fingerprint || '');\n    this.qanProfileService.updateDetailsByValue(row.dimension);\n    this.queryParamsService.addDetailsToURL(row.dimension || 0);\n    this.qanProfileService.updateObjectDetails({\n      filter_by: row.dimension,\n      group_by: this.currentParams.group_by,\n      labels: this.currentParams.labels,\n      period_start_from: this.currentParams.period_start_from,\n      period_start_to: this.currentParams.period_start_to,\n      tables: row.tables\n    });\n  }\n\n  mapOrder(array, order, key) {\n    array.sort((a, b) => {\n      const A = a[key];\n      const B = b[key];\n      if (order.indexOf(A) > order.indexOf(B)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    return array;\n  };\n\n  generateTableData(data) {\n    this.paginationConfig.totalItems = data['total_rows'];\n    this.paginationConfig.itemsPerPage = data['limit'];\n    this.paginationConfig.currentPage = this.currentPage = data['offset'] ? data['offset'] / data['limit'] + 1 : 1;\n    const tableRows = data['rows'].map(row => new TableDataModel(row));\n\n    tableRows.forEach(row => {\n      row.metrics = row.metrics.filter(metric => this.currentParams.columns.includes(metric.metricName));\n      row.metrics = this.mapOrder(row.metrics, this.currentParams.columns, 'metricName');\n    });\n    return tableRows;\n  }\n\n\n  addColumn() {\n    this.tableData.forEach(query => query.metrics.push(new MetricModel()));\n    setTimeout(() => this.componentRef.directiveRef.scrollToRight(), 100);\n    this.isNeedScroll = true;\n  }\n\n  pageChanged(event) {\n    this.currentParams.offset = this.perPage * (event - 1);\n    this.qanProfileService.updateProfileParams(this.currentParams);\n  }\n\n  onChangePerPage(event) {\n    this.currentParams.limit = this.perPage = this.paginationConfig.itemsPerPage = event;\n    this.qanProfileService.updateProfileParams(this.currentParams);\n  }\n\n  showTotalItems() {\n    const dimensionsMap = {\n      queryid: 'queries',\n    };\n    const dimension = dimensionsMap[this.currentParams.group_by] ?\n      dimensionsMap[this.currentParams.group_by] : `${GroupByMock[this.currentParams.group_by]}s`;\n    return `${this.paginationConfig.totalItems} distinct ${dimension}`\n  }\n\n}\n","<!--<div *ngIf=\"isQueryDataAbsent\" class=\"alert alert-warning w-75 mx-auto text-center wrap no-data-message\" role=\"alert\">-->\n<!--There is no any data from this host for this period. Maybe monitoring wasn't available at this moment. Please select-->\n<!--wider period of time or wait for several minutes to collect some data-->\n<!--</div>-->\n<!--<div *ngIf=\"isNotExistSelected\" class=\"alert alert-warning w-75 mx-auto text-center wrap invalid-name-message\" role=\"alert\">-->\n<!--Host name is not valid, please click the Host dropdown and select a valid host. If the Host list is empty, use-->\n<!--<code>pmm-admin add</code> to add a monitoring service and check again. For more information on how to add a-->\n<!--monitoring service,-->\n<!--consult-->\n<!--<a href=\"https://www.percona.com/doc/percona-monitoring-and-management/pmm-admin.html#adding-monitoring-services\"-->\n<!--target=\"blank\">PMM documentation.</a>-->\n<!--</div>-->\n<div class=\"content-wrapper\">\n  <input type=\"text\" id=\"search-input\">\n  <section *ngIf=\"!noQueryError\" class=\"pmm-qan\" #pmmQanWrapper>\n    <app-qan-search class=\"pmm-qan__search\"></app-qan-search>\n    <div class=\"add-column-wrapper\">\n      <button (click)=\"addColumn()\" class=\"add-column-btn\">\n        <i class=\"fa fa-plus-circle add-column-icon\" aria-hidden=\"true\"></i>\n        <span class=\"add-column-title\">\n          Add column\n        </span>\n      </button>\n    </div>\n    <div class=\"pmm-qan__filter\" #filter>\n      <app-filter-menu-viewer></app-filter-menu-viewer>\n    </div>\n    <div class=\"pmm-qan__table\" #table>\n      <app-qan-table (finishRender)=\"checkRender()\" #tableLink></app-qan-table>\n    </div>\n\n    <div *ngIf=\"!!noQueryError\" class=\"text-center alert alert-danger w-75 mx-auto wrong-configuration-message\" role=\"alert\">\n      {{ noQueryError }}\n    </div>\n\n    <div *ngIf=\"!isQueryLoading && !isLoading && totalAmountOfQueries === 0\" class=\"text-center\">\n      <div *ngIf=\"dbServer.Subsystem === 'mongo' && !isFirstSeenChecked && !isSearchQuery\"\n           class=\"alert alert-warning w-75 mx-auto wrap no-mongo-queries\">\n        There is no query data because profiling is not enabled for the selected host. For information about how to\n        enable profiling, see\n        <a href=\"https://www.percona.com/doc/percona-monitoring-and-management/conf-mongodb.html\" target=\"blank\">\n          Configuring profiling in MongoDB\n        </a>in PMM documentation.\n      </div>\n      <div *ngIf=\"dbServer.Subsystem === 'mysql' && !isFirstSeenChecked && !isSearchQuery\"\n           class=\"alert alert-warning w-75 mx-auto wrap no-mysql-queries\">\n        There is no query data because the MySQL Server is not configured for monitoring. For details about the\n        required configuration, see\n        <a href=\"https://www.percona.com/doc/percona-monitoring-and-management/conf-mysql.html\" target=\"blank\">\n          Configuring MySQL for Percona Monitoring and Management\n        </a>in PMM documentation.\n      </div>\n      <div *ngIf=\"isFirstSeenChecked && !isSearchQuery\" class=\"alert alert-warning w-75 mx-auto wrap\">\n        There are no queries First Seen during the selected time range, try widening your time range.\n      </div>\n      <div *ngIf=\"isSearchQuery\" class=\"alert alert-warning w-75 mx-auto wrap\">\n        There are no queries during the selected time range, try widening your time range.\n      </div>\n    </div>\n  </section>\n  <router-outlet></router-outlet>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild, } from '@angular/core';\nimport { ProfileTableComponent } from '../profile-table/profile-table.component';\n\n@Component({\n  moduleId: module.id,\n  templateUrl: 'qan-profile.component.html',\n  styleUrls: ['./qan-profile.component.scss'],\n})\nexport class QanProfileComponent implements OnInit {\n  @ViewChild('filter', { static: false }) filter: ElementRef;\n  @ViewChild('pmmQanWrapper', { static: false }) qanWrapper: ElementRef;\n  @ViewChild('table', { static: false }) table: ElementRef;\n  @ViewChild('tableLink', { static: false }) tableComponent: ProfileTableComponent;\n\n  public queryProfile: Array<{}>;\n  public profileTotal;\n  public offset: number;\n  public totalAmountOfQueries: number;\n  public searchValue: string;\n  public isLoading: boolean;\n  public isQueryLoading: boolean;\n  public noQueryError: string;\n  public isFirstSeenChecked = false;\n  public testingVariable: boolean;\n  public isSearchQuery = false;\n  public measurement: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  checkRender() {\n    setTimeout(() => {\n      const height = this.table.nativeElement.offsetHeight;\n      this.qanWrapper.nativeElement.style.setProperty('--filter-height', `${height}px`);\n    }, 0);\n  }\n\n  addColumn() {\n    this.tableComponent.addColumn();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { ActivatedRoute } from '@angular/router';\nimport { ParseQueryParamDatePipe } from '../../shared/parse-query-param-date.pipe';\nimport { ObjectDetails } from './interfaces/object-details.interface';\nimport { ProfileInfo } from './interfaces/profile-info.interfaces';\nimport { TimeRange } from './interfaces/time-range.interface';\nimport { GetProfileBody } from './interfaces/get-profile-body.interfaces';\nimport { QueryParams } from './interfaces/query-params.interface';\nimport { ReplaySubject } from 'rxjs';\n\n\n@Injectable()\nexport class QanProfileService {\n  private iframeQueryParams = this.route.snapshot.queryParams as QueryParams;\n  private parseQueryParamDatePipe = new ParseQueryParamDatePipe();\n  private defaultGroupBy = 'queryid';\n  private defaultMainMetric = new BehaviorSubject('');\n  private currentDetails: ObjectDetails = {};\n  private defaultColumns = ['load', 'num_queries', 'query_time'];\n\n  private params = {\n    columns: this.iframeQueryParams.columns ? this.decodeColumns(this.iframeQueryParams.columns) : this.defaultColumns,\n    first_seen: false,\n    group_by: this.iframeQueryParams.group_by || this.defaultGroupBy,\n    include_only_fields: [],\n    keyword: '',\n    labels: this.setLabels(this.iframeQueryParams),\n    limit: 10,\n    offset: 0,\n    order_by: this.iframeQueryParams.order_by || '-load',\n    main_metric: this.iframeQueryParams.main_metric || 'load',\n    period_start_from: this.setTimeRange('from'),\n    period_start_to: this.setTimeRange('to')\n  };\n\n  private detailsParams: ObjectDetails = {\n    filter_by: this.iframeQueryParams.filter_by || '',\n    group_by: this.iframeQueryParams.group_by || this.defaultGroupBy,\n    labels: this.setLabels(this.iframeQueryParams) || [],\n    include_only_fields: [],\n    period_start_from: this.setTimeRange('from'),\n    period_start_to: this.setTimeRange('to')\n  };\n\n  private profileInfo: ProfileInfo = {\n    timeRange: new Subject<TimeRange>(),\n    profile: new Subject<GetProfileBody>(),\n    details: new BehaviorSubject<ObjectDetails>(this.detailsParams),\n    detailsBy: new BehaviorSubject<string>('default'),\n    fingerprint: new BehaviorSubject<string>(''),\n    defaultColumns: ['load', 'count', 'latency'],\n  };\n\n  private profileParams = new BehaviorSubject<GetProfileBody>(this.params);\n  private group_by = new BehaviorSubject<string>(this.defaultGroupBy);\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  setTimeRange(value): string {\n    const processed = this.parseQueryParamDatePipe.transform(this.iframeQueryParams[value], value);\n    return processed.utc().format('YYYY-MM-DDTHH:mm:ssZ');\n  }\n\n  setLabels(iframeQueryParams) {\n    return iframeQueryParams.filters ? this.prepareLabelsURLParams(this.decodeLabelsURLParams(iframeQueryParams.filters)) : [];\n  }\n\n  prepareLabelsURLParams(labels) {\n    const arr = [];\n    labels.forEach(item => {\n      const existed = arr.find(it => it.key === item.groupName);\n      if (!existed) {\n        arr.push({ key: item.groupName, value: [item.filterName] })\n      } else {\n        existed.value.push(item.filterName);\n      }\n    });\n    return arr;\n  }\n\n  decodeLabelsURLParams(params) {\n    return params\n      .split(',')\n      .map(filterStr => {\n        const divided = filterStr.split(':');\n        return {\n          filterName: divided[1],\n          groupName: divided[0],\n          state: true\n        }\n      })\n  }\n\n  decodeMainMetric(main_metric) {\n    return main_metric.length ? main_metric : '';\n  }\n\n  decodeColumns(columns) {\n    return columns.length ? JSON.parse(columns) : '';\n  }\n\n  updateProfileParams(params: GetProfileBody) {\n    this.profileParams.next(params);\n  }\n\n  updateObjectDetails(params: ObjectDetails) {\n    this.profileInfo.details.next(params);\n    this.currentDetails = params;\n  }\n\n  updateFingerprint(fingerprint: string) {\n    this.profileInfo.fingerprint.next(fingerprint);\n  }\n\n  updateGroupBy(group_by: string) {\n    this.group_by.next(group_by);\n  }\n\n  updateDefaultMainMetric(metric: string) {\n    this.defaultMainMetric.next(metric)\n  }\n\n  updateDetailsByValue(details_by: string) {\n    this.profileInfo.detailsBy.next(details_by);\n  }\n\n  get getProfileParams(): BehaviorSubject<GetProfileBody> {\n    return this.profileParams;\n  }\n\n  get getProfileInfo(): ProfileInfo {\n    return this.profileInfo;\n  }\n\n  get getGroupBy(): BehaviorSubject<string> {\n    return this.group_by;\n  }\n\n  get getCurrentDetails(): ObjectDetails {\n    return this.currentDetails;\n  }\n\n  get getDefaultMainMetric(): BehaviorSubject<string> {\n    return this.defaultMainMetric\n  }\n}\n","<ng-select [items]=\"autocomplete\"\n           [multiple]=\"true\"\n           [(ngModel)]=\"selected\"\n           (add)=\"addToSelected($event)\"\n           (remove)=\"removeFromSelected($event)\"\n           (clear)=\"removeAllFromSelected()\"\n           (open)=\"addCustomScroll()\"\n           [searchFn]=\"autocompleteSearch\"\n           bindLabel=\"urlParamName\"\n           clearAllText=\"Reset\"\n           placeholder=\"Search by...\"\n           class=\"pmm-select pmm-select--search\">\n  <ng-template ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n    <div class=\"ng-value\" *ngFor=\"let item of items\">\n      <div class=\"chips\">\n        <span class=\"ng-value-label\">{{humanizeLabelGroup(item.groupName)}}: {{item.filterName || 'n/a'}}</span>\n        <button class=\"close-button\" (click)=\"clear(item)\" aria-hidden=\"true\">\n          <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\n    <span class=\"pmm-select__option\">{{humanizeLabelGroup(item.groupName)}}: {{item.filterName || 'n/a'}}</span>\n  </ng-template>\n</ng-select>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FilterMenuService } from '../filter-menu/filter-menu.service';\nimport { FilterSearchService } from '../../core/services/filter-search.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\n@Component({\n  selector: 'app-qan-search',\n  templateUrl: './search-autocomplete.component.html',\n  styleUrls: ['./search-autocomplete.component.scss']\n})\nexport class SearchAutocompleteComponent implements OnInit, OnDestroy {\n\n  public selected: any = [];\n  private autocomplete$: Subscription;\n  autocomplete: any = [];\n\n  constructor(\n    private qanFilterService: FilterMenuService,\n    private qanProfileService: QanProfileService,\n    private filterSearchService: FilterSearchService,\n  ) {\n    this.autocomplete$ = this.qanFilterService.getAutocompleteFilters\n      .subscribe(configs => {\n        this.autocomplete = configs;\n      });\n\n    this.qanFilterService.getSelected.subscribe(response => {\n      this.selected = response;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.autocomplete$.unsubscribe();\n  }\n\n  groupSelected() {\n    this.selected = [...this.selected.sort((a, b) => a['groupName'].localeCompare(b['groupName']))];\n  }\n\n  addToSelected(item) {\n    item.state = true;\n    this.selected.push(item);\n    this.qanFilterService.updateSelected(this.selected);\n  }\n\n  removeAllFromSelected() {\n    this.selected = [];\n    this.qanFilterService.updateSelected(this.selected);\n  }\n\n  removeFromSelected(filter) {\n    filter.state = false;\n    this.selected = this.selected.filter(item => item['urlParamName'] !== filter.value.urlParamName);\n    this.selected.forEach(item => item['state'] = true);\n    this.qanFilterService.updateSelected(this.selected);\n  }\n\n  autocompleteSearch = (term: string, item: any) => {\n    return this.filterSearchService.findBySearch(item.filterName, term)\n      || this.filterSearchService.findBySearch(item.groupName, term);\n  };\n\n  addCustomScroll() {\n    setTimeout(() => new PerfectScrollbar('.ng-dropdown-panel-items'), 0)\n  }\n\n  humanizeLabelGroup(groupName) {\n    return this.qanFilterService.humanNamesForGroup(groupName);\n  }\n}\n","<ng-container *ngIf=\"isExistence\">\n  <div class=\"cell-inner\">\n    <div *ngIf=\"metricData?.metricName && isSparkline\" class=\"app-tooltip\"\n         [appLoadPolygonChart]=\"sparklineData\"\n         data-tooltip=\"Loading...\"\n         xkey=\"timestamp\"\n         [ykey]=\"yKey\"\n         [metricName]=\"metricData?.metricName\"\n         [measurement]=\"pipeInfo?.sparklineType\">\n    </div>\n    <div *ngIf=\"metricData?.stats?.qps || metricData?.stats?.sum_per_sec\">\n      {{(metricData?.stats?.qps || metricData?.stats?.sum_per_sec) | humanize : 'number'}}\n    </div>\n    <div *ngIf=\"metricData?.stats?.sum\">\n      {{metricData?.stats?.sum | humanize : pipeInfo?.sumPipe}}\n    </div>\n    <div *ngIf=\"isPercentOfTotal\" class=\"unit unit--percent\">\n      {{percentOfTotal}}\n    </div>\n    <div *ngIf=\"isStats\" class=\"app-tooltip\" data-tooltip=\"Loading...\"\n         [measurement]=\"pipeInfo?.sumPipe\"\n         [appLatencyChart]=\"metricData?.stats\"\n         metricPrefix=\"Rows_sent\">\n    </div>\n\n    <ng-container *ngIf=\"isNoData\">\n      <div>n/a</div>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MetricModel } from '../profile-table/models/metric.model';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport { metricCatalogue } from '../data/metric-catalogue';\n\n@Component({\n  selector: 'app-qan-table-cell',\n  templateUrl: './table-cell.component.html',\n  styleUrls: ['./table-cell.component.css']\n})\nexport class TableCellComponent implements OnInit {\n  @Input() metricData: MetricModel;\n  @Input() sparklineData: any;\n  @Input() totalSum: any;\n\n  @Input() set checkSparkline(state) {\n    this.isDefaultColumn = this.defaultColumns.includes(this.metricData.metricName);\n    const currentSparkName = this.setKeyForSparkline(this.metricData.metricName);\n    this.sparklineData.forEach(item => {\n      if (item[currentSparkName] === 'NaN') {\n        item[currentSparkName] = 0\n      }\n    });\n    this.isValues = this.sparklineData.some(item => !!item[currentSparkName]);\n    this.isSparkline = state && this.isValues;\n  }\n\n  public metricDataInfo = metricCatalogue;\n  public isSparkline: boolean;\n  public isValues: boolean;\n  public isPercentOfTotal: boolean;\n  public isExistence: boolean;\n  public percentOfTotal: number;\n  public currentMetricInfo: any;\n  public pipeInfo: any;\n  private defaultColumns = ['load', 'count', 'num_queries'];\n  public yKey: string;\n  public isStats: boolean;\n  public isDefaultColumn: boolean;\n  public isNoData: boolean;\n  public currentParams: any;\n\n  constructor(private qanProfileService: QanProfileService) {\n    this.currentParams = this.qanProfileService.getProfileParams.getValue();\n  }\n\n  ngOnInit() {\n    this.isExistence = !!this.metricData.metricName;\n    if (this.isExistence) {\n      this.currentMetricInfo = this.metricDataInfo[this.metricData.metricName];\n      this.pipeInfo = this.currentMetricInfo.pipeTypes || {};\n      this.yKey = this.setKeyForSparkline(this.metricData.metricName);\n      this.isStats = Object.keys(this.metricData.stats).includes('min' && 'max');\n      this.isNoData = !Object.values(this.metricData.stats).length;\n      this.isPercentOfTotal = !!(this.metricData.stats.sum || this.metricData.stats.sum_per_sec);\n      if (this.isPercentOfTotal) {\n        this.percentOfTotal = +this.percentFromNumber(this.totalSum, this.metricData);\n      }\n    }\n  }\n\n  percentFromNumber(total, current) {\n    const totalItem = total.find(item => item.metricName === this.metricData.metricName);\n    const key = current.stats.sum ? 'sum' : 'sum_per_sec';\n    return ((+current.stats[key] / +totalItem.stats[key]) * 100).toFixed(2);\n  }\n\n  setKeyForSparkline(name: string): string {\n    if (this.isDefaultColumn) {\n      return this.setKeyForDefaultSparkline(name);\n    } else {\n      return `m_${name}_sum_per_sec`\n    }\n  }\n\n  setKeyForDefaultSparkline(name: string): string {\n    switch (name) {\n      case 'load':\n        return 'load';\n      case 'count':\n      case 'num_queries':\n        return 'num_queries_per_sec';\n      case 'latency':\n        return 'm_query_time_avg';\n      default:\n        return ''\n    }\n  }\n}\n","export class SelectOptionModel {\n  name: string;\n  humanizeName: string;\n\n  constructor(keyValue) {\n    [this.name, this.humanizeName] = keyValue;\n  }\n}\n","<div class=\"cell__inner\" [class.cell__inner--empty]=\"!currentColumnName\">\n  <ng-select [searchable]=\"false\"\n             [(ngModel)]=\"selectedQueryColumn\"\n             [items]=\"metrics\"\n             (change)=\"setMetricColumn($event)\"\n             [clearable]=\"false\"\n             (open)=\"addCustomScroll()\"\n             (search)=\"onSearch()\"\n             bindLabel=\"humanizeName\"\n             #column\n             class=\"pmm-select pmm-select--column\">\n    <ng-template ng-header-tmp>\n      <input (input)=\"column.filter($event.target.value)\" class=\"input-field\" appAutofocus  placeholder=\"Type to search\">\n      <button><img src=\"assets/search.svg\" alt=\"search\"></button>\n    </ng-template>\n    <ng-template ng-footer-tmp>\n      <button (click)=\"removeColumn()\">Remove this column</button>\n    </ng-template>\n    <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\n      <span class=\"pmm-select__option\" [appPmmTooltip]=\"item.tooltipText\" placement=\"right\">{{item.humanizeName}}</span>\n    </ng-template>\n  </ng-select>\n\n  <button (click)=\"sortBy(selectedQueryColumn)\" class=\"sort-icon\">\n    <i class=\"fa\" [ngClass]=\"isNotDefaultIcon ? (isASC ? 'fa-sort-asc' : 'fa-sort-desc') : 'fa-sort'\"\n      aria-hidden=\"true\">\n    </i>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { SelectOptionModel } from './modesl/select-option.model';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map } from 'rxjs/operators';\nimport { QanProfileService } from '../profile/qan-profile.service';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { metricCatalogue } from '../data/metric-catalogue';\nimport { ProfileTableComponent } from '../profile-table/profile-table.component';\nimport { GetProfileBody } from '../profile/interfaces/get-profile-body.interfaces';\nimport { QueryParamsService } from '../../core/services/query-params.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-qan-table-header-cell',\n  templateUrl: './table-header-cell.component.html',\n  styleUrls: ['./table-header-cell.component.scss']\n})\nexport class TableHeaderCellComponent implements OnInit, OnDestroy {\n  public index: number;\n  public isMainColumn: boolean;\n\n  @ViewChild('column', { static: true }) column: NgSelectComponent;\n  @Output() toEndOfTable = new EventEmitter();\n  @Input() currentColumnName: any;\n  @Input() fullData: any;\n  @Input() rowMetrics: any;\n  @Input() columnQuantity: any;\n\n  @Input() set processIndex(index: number) {\n    this.index = index;\n    this.isMainColumn = !this.index;\n  };\n\n  private params$: Subscription;\n  public metrics: any;\n  public selectedQueryColumn: SelectOptionModel;\n  public currentParams: GetProfileBody;\n  public isEmpty: boolean;\n  public isASC = false;\n  public isNotDefaultIcon = false;\n  public scrollbar: any;\n\n  constructor(\n    private qanProfileService: QanProfileService,\n    private queryParamsService: QueryParamsService,\n    private route: ActivatedRoute,\n  ) {\n    this.metrics = this.getUniqueObjects(Object.values(metricCatalogue));\n    this.currentParams = this.qanProfileService.getProfileParams.getValue();\n  }\n\n  ngOnInit() {\n    this.isEmpty = !this.currentColumnName;\n    this.selectedQueryColumn = metricCatalogue[this.currentColumnName];\n    this.params$ = this.qanProfileService.getProfileParams.pipe(\n      map(params => params.order_by)\n    ).subscribe(\n      order => {\n        this.isNotDefaultIcon = this.currentColumnName === order || `-${this.currentColumnName}` === order;\n        this.isASC = !(`-${this.currentColumnName}` === order);\n      });\n    if (this.isEmpty) {\n      this.column.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this.params$.unsubscribe();\n  }\n\n  removeColumn() {\n    this.fullData.forEach(item => item.metrics.splice(this.index, 1));\n    this.currentParams.columns.splice(this.index, 1);\n    if (this.isMainColumn) {\n      this.currentParams.main_metric = this.currentParams.columns[0];\n    }\n    this.qanProfileService.updateProfileParams(this.currentParams);\n    setTimeout(() => this.queryParamsService.setColumnsToURL(this.currentParams.columns), 0);\n  }\n\n  getUniqueObjects(arr) {\n    return Array.from(new Set(arr.map(a => a.humanizeName)))\n      .map(name => arr.find(a => a.humanizeName === name))\n  }\n\n\n  setMetricColumn(value) {\n    if (!value.simpleName) {\n      return;\n    }\n\n    this.currentParams.columns[this.index] = value.simpleName;\n    this.currentParams.columns = this.currentParams.columns.filter(item => !!item);\n\n    if (this.isMainColumn) {\n      const processedName = value.simpleName;\n      this.currentParams.order_by = `-${processedName}`;\n      this.currentParams.main_metric = processedName;\n      this.queryParamsService.addSortingOrderToURL(this.currentParams.order_by);\n      this.qanProfileService.updateDefaultMainMetric(processedName);\n    }\n\n    this.qanProfileService.updateProfileParams(this.currentParams);\n    setTimeout(() => this.queryParamsService.setColumnsToURL(this.currentParams.columns), 0);\n  }\n\n  sortBy(selectedColumn) {\n    this.isASC = !this.isASC;\n    this.currentParams.order_by = this.isASC ? selectedColumn.simpleName : `-${selectedColumn.simpleName}`;\n    this.queryParamsService.addSortingOrderToURL(this.currentParams.order_by);\n    this.qanProfileService.updateProfileParams(this.currentParams);\n  }\n\n  addCustomScroll() {\n    if (this.index === this.columnQuantity) {\n      this.toEndOfTable.emit();\n    }\n    setTimeout(() => {\n      this.scrollbar = new PerfectScrollbar('.ng-dropdown-panel-items')\n    }, 0)\n  }\n\n  onSearch() {\n    setTimeout(() => {\n      this.scrollbar.update();\n    }, 0);\n  }\n}\n","<h3>Amazon RDS and remote instances</h3>\n<section class=\"grid-table\">\n  <header class=\"grid-table__row grid-table__row--remote-instances\">\n    <span>Name</span>\n    <span>Endpoint</span>\n    <div class=\"cursor-pointer\" (click)=\"sortInstances('node.region')\">\n      Region\n      <i *ngIf=\"!isSorted || !isRegion\" class=\"fa fa-sort sort-icon\" aria-hidden=\"true\"></i>\n      <i *ngIf=\"isSorted && isRegion\" [ngClass]=\"(order === 1) ? 'fa-sort-asc' : 'fa-sort-desc'\" class=\"fa sort-icon\"\n            aria-hidden=\"true\"></i>\n    </div>\n    <div class=\"cursor-pointer\" (click)=\"sortInstances('service.engine')\">\n      Engine\n      <i *ngIf=\"!isSorted || isRegion\" class=\"fa fa-sort sort-icon\" aria-hidden=\"true\"></i>\n      <i *ngIf=\"isSorted && !isRegion\" [ngClass]=\"(order === 1) ? 'fa-sort-asc' : 'fa-sort-desc'\" class=\"fa sort-icon\"\n            aria-hidden=\"true\"></i>\n    </div>\n    <span>Remove</span>\n  </header>\n  <div *ngFor=\"let instance of allInstances | sortingTable:path:order\" class=\"grid-table__row grid-table__row--remote-instances\">\n    <span>{{ instance.node.name }}</span>\n    <span>{{ instance.service.address }}:{{ instance.service.port }}</span>\n    <span>{{ instance.node.region }}</span>\n    <span>{{ instance.service.engine }} {{ instance.service.engine_version }}</span>\n    <span>\n      <i class=\"fa fa-trash-o\" (click)=\"disableInstance(instance.node, instance.service)\" id=\"removeInstance\"></i>\n    </span>\n  </div>\n</section>\n<div *ngIf=\"errorMessage\" class=\"alert alert-warning w-75 mx-auto m-2\" role=\"alert\">\n  <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n  {{ errorMessage }}\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RemoteInstancesListService } from './remote-instances-list.service';\nimport { RemoteInstance, RemoteInstanceNode, RemoteInstanceService } from '../add-remote-instances/add-remote-instance.service';\nimport { environment } from '../environment';\nimport { AddAmazonRDSService } from '../add-amazon-rds/add-amazon-rds.service';\n\n@Component({\n  selector: 'app-remote-instances-list',\n  templateUrl: './remote-instances-list.component.html',\n  styleUrls: ['./remote-instances-list.component.scss']\n})\nexport class RemoteInstancesListComponent implements OnInit {\n  public allInstances: RemoteInstance[] = [];\n  path: string[] = ['instance']; // same variable as for the loop that generates the table rows\n  order = 1;\n  isSorted = false;\n  isRegion = false;\n  isDemo = false;\n  errorMessage: string;\n\n  constructor(private remoteInstancesListService: RemoteInstancesListService, private awsService: AddAmazonRDSService) {\n    this.isDemo = environment.demoHosts.includes(location.hostname);\n  }\n\n  async ngOnInit() {\n    this.errorMessage = '';\n    try {\n      this.allInstances = await this.remoteInstancesListService.getList();\n    } catch (err) {\n      this.errorMessage = err.json().error;\n      return;\n    }\n    this.errorMessage = this.allInstances === undefined ? 'The list of instances is empty' : '';\n  }\n\n  async disableInstance(node: RemoteInstanceNode, service: RemoteInstanceService) {\n    if (this.isDemo) {\n      return false;\n    }\n    const text = `Are you sure you want to delete? ${node.name}`;\n    if (confirm(text)) {\n      try {\n        if (service.type !== 'rds') {\n          await this.remoteInstancesListService.disable(node, service);\n        } else {\n          await this.awsService.disable(node);\n        }\n        this.allInstances = await this.remoteInstancesListService.getList();\n      } catch (err) {\n        this.errorMessage = err.json().error;\n        return;\n      }\n      this.errorMessage = this.allInstances === undefined ? 'The list of instances is empty' : '';\n    }\n  }\n\n  sortInstances(prop: string) {\n    this.path = prop.split('.');\n    this.order = this.order * (-1); // change order\n    this.isSorted = true;\n    this.isRegion = prop === 'node.region';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { RemoteInstance, RemoteInstanceNode, RemoteInstanceService } from '../add-remote-instances/add-remote-instance.service';\n\n@Injectable()\nexport class RemoteInstancesListService {\n\n  private httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  async getList(): Promise<RemoteInstance[]> {\n    const url = `/managed/v0/remote`;\n    const response: any = await this.httpClient\n      .get(url, { headers: this.httpHeaders })\n      .toPromise();\n    return response.instances as RemoteInstance[];\n  }\n\n  async disable(node: RemoteInstanceNode, service: RemoteInstanceService): Promise<{}> {\n    const url = `/managed/v0/${service.type}/${node.id}`;\n    return await this.httpClient\n      .delete(url, { headers: this.httpHeaders })\n      .toPromise();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InstanceService } from '../core/services/instance.service';\nimport { CoreComponent } from '../core/core.component';\nimport { environment } from '../environment';\nimport * as moment from 'moment';\nimport { SettingsService } from './settings.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { interval } from 'rxjs/internal/observable/interval';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n  providers: [SettingsService],\n})\nexport class SettingsComponent {\n  // public agentStatus: {};\n  // public qanConf: {};\n  // public agentConf: any;\n  // public oldInterval = '1';\n  // public interval = '1';\n  // public collectFrom: 'perfschema' | 'slowlog' = 'slowlog';\n  // public exampleQueries: boolean;\n  // public statusUpdatedFromNow$: Observable<string>;\n  // public logUpdatedFromNow$: Observable<string>;\n  // public agentLog: {};\n  // public severityLeveles: Array<string> = [\n  //   'emerg', 'alert', 'crit', 'err',\n  //   'warning', 'notice', 'info', 'debug'\n  // ];\n  //\n  // public logPeriod = 12;\n  // public isDemo = false;\n  // event = new Event('showSuccessNotification');\n  // isApplied = false;\n  // isError = false;\n  //\n  // constructor(protected route: ActivatedRoute, protected router: Router,\n  //             public settingsService: SettingsService,\n  //             protected instanceService: InstanceService) {\n  //   super(route, router, instanceService);\n  //   this.isDemo = environment.demoHosts.includes(location.hostname);\n  // }\n  //\n  //\n  // /**\n  //  * Get agent log for N last hours.\n  //  * @param period time period integer in hours\n  //  */\n  // setLogPeriod(period): void {\n  //   this.logPeriod = period;\n  //   this.getAgentLog();\n  // }\n  //\n  // /**\n  //  * get fresh agent log\n  //  */\n  // refreshAgentLog(): void {\n  //   this.getAgentLog();\n  // }\n  //\n  // validateValue(value) {\n  //   if (this.interval === null) { return this.interval = ''; }\n  //\n  //   if (this.oldInterval !== value) {\n  //       this.interval = (value > 60 || value < 1) ? this.oldInterval : value;\n  //   }\n  //   this.oldInterval = this.interval;\n  // }\n  //\n  // /**\n  //  * Get from agent:\n  //  *  - Collect interval: positive integer;\n  //  *  - Send real query examples: boolean;\n  //  *  - Collect from: 'slowlog' or 'perfschema'.\n  //  */\n  // public async getAgentDefaults() {\n  //   if (!this.agent || !this.dbServer || this.isAllSelected || this.isNotExistSelected) { return }\n  //\n  //   const res = await this.settingsService.getAgentDefaults(this.agent.UUID, this.dbServer.UUID);\n  //   try {\n  //     this.agentConf = res;\n  //     this.interval = (this.agentConf.qan.Interval / 60).toString();\n  //     this.collectFrom = this.agentConf.qan.CollectFrom;\n  //     this.exampleQueries = this.agentConf.qan.ExampleQueries;\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }\n  //\n  // /**\n  //  * Set on agent:\n  //  *  - Collect interval: positive integer;\n  //  *  - Send real query examples: boolean;\n  //  *  - Collect from: 'slowlog' or 'perfschema'.\n  //  */\n  // public async setAgentDefaults() {\n  //   const res = await this.settingsService.setAgentDefaults(\n  //     this.agent.UUID,\n  //     this.dbServer.UUID,\n  //     +this.interval,\n  //     this.exampleQueries,\n  //     this.collectFrom\n  //   );\n  //   const visibleMessageTime = 3000;\n  //   try {\n  //     // this.agentConf = res; // diffrent responce than GetDefaults.\n  //     this.isApplied = true;\n  //     window.parent.document.dispatchEvent(this.event);\n  //     setTimeout(() => {\n  //       this.isApplied = false;\n  //     }, visibleMessageTime);\n  //     this.getAgentDefaults();\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }\n  //\n  // /**\n  //  * Get slice of exported variables of agent.\n  //  */\n  // getAgentStatus() {\n  //   if (!this.agent || this.isAllSelected || this.isNotExistSelected) { return }\n  //\n  //   this.agentStatus = this.settingsService.getAgentStatus(this.agent.UUID);\n  //   const updated: any = moment();\n  //   this.statusUpdatedFromNow$ = interval(60000).pipe(map(n => updated.fromNow()));\n  // }\n  //\n  // /**\n  //  * get agent log for some period.\n  //  */\n  // getAgentLog() {\n  //   if (!this.agent || this.isAllSelected || this.isNotExistSelected) { return }\n  //\n  //   const begin = moment.utc().subtract(this.logPeriod, 'h').format('YYYY-MM-DDTHH:mm:ss');\n  //   const end = moment.utc().format('YYYY-MM-DDTHH:mm:ss');\n  //   this.agentLog = this.settingsService.getAgentLog(this.agent.UUID, begin, end);\n  //   const updated: any = moment();\n  //   this.logUpdatedFromNow$ = interval(60000).pipe(map(n => updated.fromNow()));\n  // }\n  //\n  // /**\n  //  * Overrides parent method.\n  //  * Executes on route was changed to refresh data.\n  //  * @param params - URL query parameters\n  //  */\n  // onChangeParams(params) {\n  //   this.getAgentDefaults();\n  //   this.getAgentStatus();\n  //   this.getAgentLog();\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport type CollectFrom = 'slowlog' | 'perfschema';\n\n@Injectable()\nexport class SettingsService {\n\n  private httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public async getAgentStatus(agentUUID: string): Promise<{}> {\n    const url = `/qan-api/agents/${agentUUID}/status`;\n\n    const response = await this.httpClient\n      .get(url, { headers: this.httpHeaders })\n      .toPromise();\n    return response as {};\n  }\n\n  public async getAgentLog(agentUUID, begin, end: string): Promise<{}> {\n    const url = `/qan-api/agents/${agentUUID}/log`;\n\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('begin', begin);\n    httpParams = httpParams.append('end', end);\n    const response = await this.httpClient\n      .get(url, { headers: this.httpHeaders, params: httpParams })\n      .toPromise();\n    return response as {};\n  }\n\n  public async getAgentDefaults(agentUUID: string, dbServerUUID: string): Promise<{}> {\n    const url = `/qan-api/agents/${agentUUID}/cmd`;\n    const params = {\n      AgentUUID: agentUUID,\n      Service: 'agent',\n      Cmd: 'GetDefaults',\n      Data: btoa(JSON.stringify({ UUID: dbServerUUID }))\n    };\n\n    const resp: any = await this.httpClient\n      .put(url, params, { headers: this.httpHeaders })\n      .toPromise();\n\n    if (!!resp.Error) {\n      throw new Error(resp.Error);\n    } else {\n      return JSON.parse(atob(resp.Data));\n    }\n  }\n\n  public async setAgentDefaults(agentUUID: string, dbServerUUID: string, interval: number,\n    exampleQueries: boolean, collectFrom: CollectFrom): Promise<{}> {\n    const url = `/qan-api/agents/${agentUUID}/cmd`;\n\n    const data = {\n      UUID: dbServerUUID,\n      Interval: interval * 60,\n      ExampleQueries: exampleQueries,\n      CollectFrom: collectFrom\n    };\n\n    const params = {\n      AgentUUID: agentUUID,\n      Service: 'qan',\n      Cmd: 'RestartTool',\n      Data: btoa(JSON.stringify(data))\n    };\n\n    const resp: any = await this.httpClient\n      .put(url, params, { headers: this.httpHeaders })\n      .toPromise();\n\n    if (!!resp.Error) {\n      throw new Error(resp.Error);\n    } else {\n      return JSON.parse(atob(resp.Data));\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.el.nativeElement.focus();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'humanizeSymbolPipe'\n})\nexport class HumanizeSymbolPipe implements PipeTransform {\n  public names = {\n    'qan-mysql-perfschema-agent': 'MySQL Performance Schema',\n    'mysql': 'MySQL',\n    '': 'n/a'\n  };\n\n  transform(value: any, args?: any): any {\n    return value in this.names ? this.names[value] : value\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\nimport * as numeral from 'numeral';\n\n/**\n * @desc humanize time duration\n * @example <div>{{ duration | humanize }}</div>\n */\n@Pipe({ name: 'humanize' })\nexport class HumanizePipe implements PipeTransform {\n\n  parceTime(input: number) {\n\n    let dur = '';\n    const dur_sec = moment.duration(input, 's');\n    switch (true) {\n      case input === 0:\n        dur = '0';\n        break;\n      case dur_sec.as('s') > 1 && dur_sec.as('s') < 60:\n        dur = dur_sec.as('s').toFixed(2) + ' sec';\n        break;\n      case dur_sec.as('s') >= 60:\n        let secs = dur_sec.as('s');\n        const secondsInDay = 24 * 60 * 60;\n        if (secs >= secondsInDay) {\n          const days = Math.floor(secs / secondsInDay);\n          dur = `${days} days, `;\n          secs = secs % secondsInDay;\n        }\n        dur += numeral(secs).format('00:00:00');\n        break;\n      case dur_sec.as('ms') < 1:\n        dur = (dur_sec.as('ms') * 1000).toFixed(2) + ' \\µs';\n        break;\n      default:\n        dur = dur_sec.as('ms').toFixed(2) + ' ms';\n        break;\n    }\n    return dur;\n  }\n\n  transform(input: number, name: string): string {\n\n    if (input === null) {\n      return '0';\n    }\n\n    let res = '0';\n    switch (true) {\n      // \"top 10\"/profile queries no name parameters\n      case name === undefined:\n        res = this.parceTime(input);\n        break;\n      // time\n      case name.indexOf('time') > -1:\n        res = (input !== 0 && input < 0.00001) ? '<' : '';\n        res += this.parceTime(input);\n        break;\n      // size\n      case name.indexOf('size') > -1:\n        if (input !== 0 && input < 0.01) {\n          res = '<0.01 B';\n        } else {\n          res = numeral(input).format('0.00 b');\n        }\n        res = res.replace(/([\\d]) B/, '$1 Bytes');\n        break;\n      // ops\n      case name.indexOf('number') > -1:\n        if (input !== 0 && input < 0.01) {\n          res = '<0.01';\n        } else {\n          res = numeral(input).format('0.00a');\n        }\n        break;\n      case name.indexOf('percent') > -1:\n        if (input !== 0 && input < 0.0001) {\n          res = '<0.01';\n        } else if (input === 1) {\n          res = '100%'\n        } else {\n          res = numeral(input).format('0.00%');\n        }\n        break;\n      // ops\n      default:\n        if (input !== 0 && input < 0.01) {\n          res = '<0.01';\n        } else {\n          res = numeral(input).format('0.00 a');\n        }\n        break;\n    }\n    return String(res).replace('<0.00', '<0.01');\n\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\nimport { select } from 'd3-selection';\nimport { scaleLog } from 'd3-scale';\n\nimport { HumanizePipe } from './humanize.pipe';\n\n@Directive({\n  selector: '[appLatencyChart]'\n})\nexport class LatencyChartDirective {\n\n  @HostBinding('attr.data-tooltip')\n  @Input() dataTooltip: string;\n  @Input() measurement = 'time';\n  @Input() width = 150;\n  @Input() height = 30;\n\n  @Input() set appLatencyChart(data: {}) {\n    if (data !== null) {\n      this.drawChart(data);\n    }\n  }\n\n  constructor(public elementRef: ElementRef) {\n  }\n\n  drawChart(data: any) {\n    const chart = select(this.elementRef.nativeElement);\n    chart.selectAll('*').remove();\n\n    const svg = chart.append('svg')\n      .attr('height', '20')\n      .attr('width', this.width);\n\n    const x = scaleLog()\n      .domain([0.00001, 10000])\n      .range([2, this.width - 2])\n      .clamp(true)\n      .nice();\n\n    const { min = 0, max = 0, avg = 0, p99 = 0 } = data;\n\n    const humanize = new HumanizePipe();\n\n    const minStr = `⌜ Min: ${humanize.transform(min, this.measurement)}`;\n    const maxStr = `⌟ Max: ${humanize.transform(max, this.measurement)}`;\n    const avgStr = `◦ Avg: ${humanize.transform(avg, this.measurement)}`;\n    const p99Str = `${p99 ? `• 99%: ${humanize.transform(p99, this.measurement)}` : ''}`;\n\n    this.dataTooltip = `${minStr}\\n${maxStr}\\n${avgStr}\\n${p99Str}`.trim();\n\n    const g = svg.append('g');\n\n    // hrAxes\n    g.append('line')\n      .attr('class', 'latency-chart-x')\n      .attr('x1', '0')\n      .attr('stroke-dasharray', '1, 1')\n      .attr('y1', '13px')\n      .attr('x2', this.width)\n      .attr('y2', '13px');\n\n    // hrLine\n    g.append('line')\n      .attr('class', 'latency-chart-line')\n      .attr('x1', x(min) + '')\n      .attr('y1', '13px')\n      .attr('x2', x(max) + '')\n      .attr('y2', '13px');\n\n    // minMark\n    g.append('line')\n      .attr('class', 'latency-chart-min')\n      .attr('x1', x(min) + '')\n      .attr('y1', '13px')\n      .attr('x2', x(min) + '')\n      .attr('y2', '19px');\n\n    // maxMark\n    g.append('line')\n      .attr('class', 'latency-chart-max')\n      .attr('x1', x(max) + '')\n      .attr('y1', '8px')\n      .attr('x2', x(max) + '')\n      .attr('y2', '13px');\n\n    // avgMark\n    g.append('circle')\n      .attr('class', 'latency-chart-avg')\n      .attr('r', 3)\n      .attr('cx', x(avg) + '')\n      .attr('cy', '13px');\n\n    // p99Mark\n    if (p99 > 0) {\n      g.append('circle')\n        .attr('class', 'latency-chart-p95')\n        .attr('r', 2)\n        .attr('cx', x(p99) + '')\n        .attr('cy', '13px');\n    }\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input, OnChanges } from '@angular/core';\nimport { HumanizePipe } from './humanize.pipe';\nimport { area, curveStepAfter } from 'd3-shape';\nimport * as moment from 'moment';\nimport { scaleLinear } from 'd3-scale';\nimport { event as currentEvent, mouse, select } from 'd3-selection';\nimport { bisector } from 'd3-array';\nimport { MomentFormatPipe } from './moment-format.pipe';\nimport { axisBottom } from 'd3-axis';\n\nexport interface DataType {\n  x: any,\n  y: any\n}\n\n@Directive({\n  selector: '[appLoadPolygonChart]'\n})\nexport class LoadPolygonChartDirective implements OnChanges {\n  public margin = 0;\n  public padding = 0;\n  public data: any = [];\n  dateFormat = new MomentFormatPipe();\n  humanize = new HumanizePipe();\n\n  @HostBinding('attr.data-tooltip')\n  @Input() dataTooltip: string;\n  @Input() appLoadPolygonChart: Array<{}>;\n  @Input() xkey: string;\n  @Input() ykey: string;\n  @Input() measurement: string;\n  @Input() metricName: string;\n  @Input() width = 300;\n  @Input() height = 30;\n\n  constructor(public elementRef: ElementRef) {\n  }\n\n  ngOnChanges() {\n    this.drawPolygonChart();\n  }\n\n  findHighestY(array) {\n    const values = array.map(data => +data[this.ykey] || 0);\n    return Math.max(...values);\n  }\n\n  findMinY(array) {\n    const values = array.map(data => +data[this.ykey] || 0);\n    const minVal = Math.min(...values);\n    const maxVal = Math.max(...values);\n    // We need it to show chart on the middle if the value is constant.\n    if (minVal === maxVal) {\n      return minVal;\n    }\n    return 0;\n  }\n\n  findHighestX(array) {\n    const values = array.map(data => +moment.utc(data[this.xkey]) || 0);\n    return Math.max(...values);\n  }\n\n  findMinX(array) {\n    const values = array.map(data => +moment.utc(data[this.xkey]) || 0);\n    return Math.min(...values);\n  }\n\n  drawPolygonChart() {\n    const chart = select(this.elementRef.nativeElement);\n    chart.selectAll('*').remove();\n\n    const svg = chart.append('svg')\n      .attr('class', 'axis')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    const xAxisLength = this.width - 2 * this.margin;\n    const yAxisLength = this.height - 2 * this.margin;\n\n    const scaleX = scaleLinear()\n      .domain([this.findMinX(this.appLoadPolygonChart), this.findHighestX(this.appLoadPolygonChart)])\n      .range([0, xAxisLength]);\n\n    const scaleY = scaleLinear()\n      .domain([this.findHighestY(this.appLoadPolygonChart), this.findMinY(this.appLoadPolygonChart)])\n      .range([0, yAxisLength]);\n\n    this.data = this.appLoadPolygonChart.map(item =>\n      new Object({\n        x: scaleX(moment.utc(item[this.xkey])),\n        y: scaleY(item[this.ykey] || 0) + this.margin\n      }));\n\n    const areaBar = area<DataType>().curve(curveStepAfter)\n      .x(d => d.x)\n      .y0(this.height - this.margin)\n      .y1(d => d.y);\n\n    const g = svg.append('g');\n    const focusG = svg.append('g').style('display', 'none');\n\n    g.append('path')\n      .attr('d', areaBar(this.data))\n      .style('fill', 'rgba(215, 114, 44, 0.6)');\n\n    const focusBar = focusG\n      .append('path')\n      .attr('class', 'active-rect')\n      .style('fill', 'white')\n      .on('mouseout', () => focusG.style('display', 'none'));\n\n    focusBar.append('text')\n      .attr('id', 'focusText')\n      .attr('font-size', '10')\n      .attr('x', 1)\n      .attr('y', 8);\n\n    // @ts-ignore TS2345\n    const bisectDate = bisector((d, x) => +moment.utc(d[this.xkey]).isBefore(x)).right;\n\n    svg.on('mousemove', () => {\n      const coords = mouse(currentEvent.currentTarget);\n      const mouseDate: any = moment.utc(scaleX.invert(coords[0]));\n\n      const indexOfStartPoint = Math.min(\n        Math.max(\n          bisectDate(this.appLoadPolygonChart, mouseDate),\n          0\n        ),\n        this.appLoadPolygonChart.length - 1\n      );\n      const hoveredPoint = this.appLoadPolygonChart[indexOfStartPoint];\n      const endPoint = this.appLoadPolygonChart[indexOfStartPoint - 1];\n      const focusPointsRange = [hoveredPoint, endPoint];\n      const activeArea: any = focusPointsRange.map(item => new Object(\n        {\n          x: scaleX(moment.utc(item[this.xkey])) || 0,\n          y: scaleY(endPoint[this.ykey] || 0) + this.margin\n        }));\n      const value = endPoint[this.ykey] === undefined ? 0 : endPoint[this.ykey];\n      const load = this.humanize.transform(value, this.measurement);\n      const dateToShow = this.dateFormat.transform(moment(endPoint[this.xkey]).utc());\n\n      const isTimeBased = this.metricName.endsWith('_time') || this.metricName.endsWith('_wait') || this.metricName === 'load';\n\n      focusBar.attr('d', areaBar(activeArea));\n      this.dataTooltip = !value ? `NA at ${dateToShow}` : `${load} ${isTimeBased ? '' : '/ sec'} at ${dateToShow}`;\n    });\n    svg.on('mouseover', () => focusG.style('display', null));\n    svg.on('mouseout', () => focusG.style('display', 'none'));\n\n    // Create X axis\n    const xAxis = axisBottom(scaleX);\n\n    svg.append('g')\n      .attr('class', 'x-axis')\n      .attr('transform',\n        `translate(${this.margin},${this.height - this.margin - 1})`)\n      .call(xAxis);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({ name: 'dateFormat' })\nexport class MomentFormatPipe implements PipeTransform {\n\n  timezone = 'browser';\n  constructor() {\n    this.timezone = this.getCookie('timezone') || 'browser';\n  }\n\n  getCookie(name) {\n    return document.cookie.split('; ').reduce((r, v) => {\n      const parts = v.split('=');\n      return parts[0] === name ? decodeURIComponent(parts[1]) : r;\n    }, '');\n  }\n\n  transform(value: any, format = 'YYYY-MM-DD HH:mm:ss'): string {\n    if (value === null) {\n      return null;\n    }\n\n    if (this.timezone === 'browser') {\n      return moment(value).local().format(format);\n    } else {\n      return moment(value).format(format);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MomentFormatPipe } from './moment-format.pipe';\nimport * as moment from 'moment';\n\ntype TimeEdge = 'from' | 'to';\n\n/**\n *\n * var spans = {\n *       's': {display: 'second'},\n *       'm': {display: 'minute'},\n *       'h': {display: 'hour'},\n *       'd': {display: 'day'},\n *       'w': {display: 'week'},\n *       'M': {display: 'month'},\n *       'y': {display: 'year'},\n * };\n *\n * var rangeOptions = [\n *   { from: 'now/d',    to: 'now/d',    display: 'Today',                 section: 2 },\n *   { from: 'now/d',    to: 'now',      display: 'Today so far',          section: 2 },\n *   { from: 'now/w',    to: 'now/w',    display: 'This week',             section: 2 },\n *   { from: 'now/w',    to: 'now',      display: 'This week so far',           section: 2 },\n *   { from: 'now/M',    to: 'now/M',    display: 'This month',            section: 2 },\n *   { from: 'now/y',    to: 'now/y',    display: 'This year',             section: 2 },\n *\n *   { from: 'now-1d/d', to: 'now-1d/d', display: 'Yesterday',             section: 1 },\n *   { from: 'now-2d/d', to: 'now-2d/d', display: 'Day before yesterday',  section: 1 },\n *   { from: 'now-7d/d', to: 'now-7d/d', display: 'This day last week',    section: 1 },\n *   { from: 'now-1w/w', to: 'now-1w/w', display: 'Previous week',         section: 1 },\n *   { from: 'now-1M/M', to: 'now-1M/M', display: 'Previous month',        section: 1 },\n *   { from: 'now-1y/y', to: 'now-1y/y', display: 'Previous year',         section: 1 },\n *\n *   { from: 'now-5m',   to: 'now',      display: 'Last 5 minutes',        section: 3 },\n *   { from: 'now-15m',  to: 'now',      display: 'Last 15 minutes',       section: 3 },\n *   { from: 'now-30m',  to: 'now',      display: 'Last 30 minutes',       section: 3 },\n *   { from: 'now-1h',   to: 'now',      display: 'Last 1 hour',           section: 3 },\n *   { from: 'now-3h',   to: 'now',      display: 'Last 3 hours',          section: 3 },\n *   { from: 'now-6h',   to: 'now',      display: 'Last 6 hours',          section: 3 },\n *   { from: 'now-12h',  to: 'now',      display: 'Last 12 hours',         section: 3 },\n *   { from: 'now-24h',  to: 'now',      display: 'Last 24 hours',         section: 3 },\n *\n *   { from: 'now-2d',   to: 'now',      display: 'Last 2 days',           section: 0 },\n *   { from: 'now-7d',   to: 'now',      display: 'Last 7 days',           section: 0 },\n *   { from: 'now-30d',  to: 'now',      display: 'Last 30 days',          section: 0 },\n *   { from: 'now-90d',  to: 'now',      display: 'Last 90 days',          section: 0 },\n *   { from: 'now-6M',   to: 'now',      display: 'Last 6 months',         section: 0 },\n *   { from: 'now-1y',   to: 'now',      display: 'Last 1 year',           section: 0 },\n *   { from: 'now-2y',   to: 'now',      display: 'Last 2 years',          section: 0 },\n *   { from: 'now-5y',   to: 'now',      display: 'Last 5 years',          section: 0 },\n * ];from=now-7d%2Fd&to=now-7d%2Fd\n */\n@Pipe({\n  name: 'parseQueryParamDate'\n})\nexport class ParseQueryParamDatePipe implements PipeTransform {\n\n  transform(date: string, edge: TimeEdge) {\n    const momentFormatPipe = new MomentFormatPipe();\n    const nowFunc = momentFormatPipe.timezone === 'utc' ? moment.utc : moment;\n    let parsedDate;\n    // from=now\n\n    if (date === undefined && edge === 'from') {\n      return nowFunc().subtract(1, 'h');\n    }\n    if (date === undefined && edge === 'to') {\n      return nowFunc();\n    }\n\n    if (date === 'now') {\n      return nowFunc();\n    }\n    // from=now-5d&to=now-6M ... from=now/w&to=now/w\n    if (date.length > 4 && date.startsWith('now')) {\n      // let subtrahend = date.substr(4);\n      // ex: [\"now-7d/d\", \"now\", \"-\", \"7\", \"d\", \"/\", \"d\"]\n      const parts = date.match('(now)(-|/)?([0-9]*)([yMwdhms])(/)?([yMwdhms])?');\n\n      if (parts[1] === 'now') {\n        parsedDate = nowFunc();\n      }\n      if (parts[2] === '-') {\n        parsedDate.subtract(parts[3], parts[4]);\n      }\n      if (parts[2] === '/') {\n        if (edge === 'from') {\n          return parsedDate.startOf(parts[4]);\n        } else {\n          return parsedDate.endOf(parts[4]);\n        }\n      }\n      if (parts.length > 4 && parts[5] === '/') {\n        if (edge === 'from') {\n          return parsedDate.startOf(parts[6]);\n        } else {\n          return parsedDate.endOf(parts[6]);\n        }\n      }\n    } else {\n      // expect unix timestamp in milliseconds\n      const isnum = /^\\d+$/.test(date);\n      if (isnum) {\n        return nowFunc(parseInt(date, 10));\n      } else {\n        return nowFunc(date);\n      }\n    }\n    return parsedDate;\n  }\n\n}\n","import { ComponentRef, Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { Overlay, OverlayPositionBuilder, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nimport { TooltipComponent } from './tooltip/tooltip.component';\n\n@Directive({ selector: '[appPmmTooltip]' })\nexport class PmmTooltipDirective implements OnInit {\n\n  @Input('appPmmTooltip') text = '';\n  private overlayRef: OverlayRef;\n\n  constructor(\n    private overlay: Overlay,\n    private overlayPositionBuilder: OverlayPositionBuilder,\n    private elementRef: ElementRef\n  ) {\n  }\n\n  ngOnInit(): void {\n    const positionStrategy = this.overlayPositionBuilder\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([{\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetY: -8,\n      }]);\n\n    this.overlayRef = this.overlay.create({ positionStrategy });\n    window.addEventListener('hideTooltip', () => {\n      this.overlayRef.detach();\n    })\n  }\n\n  @HostListener('mouseenter')\n  show() {\n    if (this.text) {\n      const tooltipRef: ComponentRef<TooltipComponent> = this.overlayRef.attach(new ComponentPortal(TooltipComponent));\n      tooltipRef.instance.text = this.text;\n    }\n  }\n\n  @HostListener('mouseout')\n  @HostListener('hideTooltip')\n  hide() {\n    if (this.text) {\n      this.overlayRef.detach();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { HumanizePipe } from './humanize.pipe';\nimport { LatencyChartDirective } from './latency-chart.directive';\nimport { LoadSparklinesDirective } from './load-sparklines.directive';\nimport { MapToIterablePipe } from './map-to-iterable.pipe';\nimport { MomentFormatPipe } from './moment-format.pipe';\nimport { TruncateRootPipe } from './truncate-root.pipe';\nimport { ParseQueryParamDatePipe } from './parse-query-param-date.pipe';\nimport { SortingTablePipe } from './sorting-table.pipe';\nimport { TableHeadersToMultiplePipe } from './table-headers-to-multiple.pipe';\nimport { AutofocusDirective } from './autofocus.directive';\nimport { LoadBarChartDirective } from './load-bar-chart.directive';\nimport { LoadPolygonChartDirective } from './load-polygon-chart.directive';\nimport { MiddleEllipsisDirective } from './middle-ellipsis.directive';\nimport { EllipsisMiddlePipe } from '../src/app/shared/ellipsis-middle.pipe';\nimport { HumanizeSymbolPipe } from './humanize-symbol-pipe';\nimport { PmmTooltipDirective } from './pmm-tooltip.directive';\nimport { TooltipComponent } from './tooltip/tooltip.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    BrowserAnimationsModule,\n  ],\n  declarations: [\n    HumanizePipe,\n    LatencyChartDirective,\n    LoadSparklinesDirective,\n    MapToIterablePipe,\n    MomentFormatPipe,\n    TruncateRootPipe,\n    ParseQueryParamDatePipe,\n    SortingTablePipe,\n    TableHeadersToMultiplePipe,\n    LoadBarChartDirective,\n    LoadPolygonChartDirective,\n    AutofocusDirective,\n    HumanizeSymbolPipe,\n    MiddleEllipsisDirective,\n    EllipsisMiddlePipe,\n    PmmTooltipDirective,\n    TooltipComponent,\n  ],\n  exports: [\n    MapToIterablePipe,\n    MomentFormatPipe,\n    TruncateRootPipe,\n    HumanizeSymbolPipe,\n    HumanizePipe,\n    LatencyChartDirective,\n    LoadSparklinesDirective,\n    LoadBarChartDirective,\n    LoadPolygonChartDirective,\n    MiddleEllipsisDirective,\n    SortingTablePipe,\n    EllipsisMiddlePipe,\n    PmmTooltipDirective,\n    TableHeadersToMultiplePipe,\n    AutofocusDirective,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    RouterModule,\n    TooltipComponent,\n  ],\n  entryComponents: [TooltipComponent],\n  providers: [\n    HumanizeSymbolPipe\n  ]\n})\nexport class SharedModule {\n  static forRoot() {\n    return {\n      ngModule: SharedModule,\n      providers: [],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DetailsTableDataInterface } from '../qan/profile-details/components/details-table/details-table-data.inteface';\n\n@Pipe({ name: 'sortingTable' })\nexport class SortingTablePipe implements PipeTransform {\n\n  transform(instance: any[], path: string[], order: number = 1): any[] {\n    // Check if is not null\n    if (!instance || !path || !order) {\n      return instance;\n    }\n\n    return instance.sort((a: string, b: string) => {\n      // We go for each property followed by path\n      path.forEach(property => {\n        if (!a[property] || !b[property]) {\n          return\n        }\n\n        a = a[property];\n        b = b[property];\n      });\n\n      if (typeof a === 'string' && typeof b === 'string') {\n        return a.toLowerCase() > b.toLowerCase() ? order : order * (-1); // Order * (-1): We change our order\n      }\n    })\n  }\n\n}\n","<div @tooltip>{{ text }}</div>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'app-tooltip',\n  styleUrls: ['./tooltip.component.css'],\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('tooltip', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(300, style({ opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(300, style({ opacity: 0 })),\n      ]),\n    ]),\n  ],\n})\nexport class TooltipComponent {\n  @Input() text = '';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HumanizeSymbolPipe } from '../../../shared/humanize-symbol-pipe';\nimport { FilterMenuService } from '../../../qan/filter-menu/filter-menu.service';\n\n@Pipe({\n  name: 'ellipsisMiddle'\n})\nexport class EllipsisMiddlePipe implements PipeTransform {\n  public defaultCharsLimit = 9;\n\n  constructor(private _humanizeSymbol: HumanizeSymbolPipe) {}\n\n  transform(value: any, charsLimit?: number): any {\n    if (charsLimit === undefined) {\n      charsLimit = this.defaultCharsLimit;\n    }\n    const charsToViewEnd = 4;\n    const charsToViewBegin = charsLimit - charsToViewEnd - 3;\n    return FilterMenuService.checkForTooltip(value, charsLimit)\n      ? value.slice(0, charsToViewBegin) + '...' + value.slice(-charsToViewEnd)\n      : this._humanizeSymbol.transform(value);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { CoreComponent } from '../core/core.component';\nimport { SummaryService } from './summary.service';\nimport { InstanceService } from '../core/services/instance.service';\nimport * as JSZip from 'jszip';\nimport saveAs from 'jszip/vendor/FileSaver';\nimport * as moment from 'moment';\nimport { MomentFormatPipe } from '../shared/moment-format.pipe';\n\n\n/**\n * Shows MySQL and Server Summary\n */\n@Component({\n  moduleId: module.id,\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss']\n})\nexport class SummaryComponent {\n\n  public serverSummary: string;\n  public mysqlSummary: string;\n  public mongoSummary: string;\n  public testingVariable = false;\n\n  public serverSummaryError: string;\n  public mysqlSummaryError: string;\n  public mongoSummaryError: string;\n\n  public serverSummaryLoader: boolean;\n  public mysqlSummaryLoader: boolean;\n  public mongoSummaryLoader: boolean;\n\n  constructor(protected route: ActivatedRoute, protected router: Router,\n    public summaryService: SummaryService, protected instanceService: InstanceService) {\n    // super(route, router, instanceService);\n  }\n\n  // /**\n  //  * Gets MySQL summary via API, Agent from `pt-summary`.\n  //  * @param agentUUID agent UUID that is installed on same host as MySQL.\n  //  */\n  // getServerSummary(agentUUID: string): void {\n  //   if (!this.dbServer || this.isAllSelected || this.isNotExistSelected) {\n  //     return;\n  //   }\n  //   this.summaryService\n  //     .getServer(agentUUID, this.dbServer.ParentUUID)\n  //     .then(data => this.serverSummary = data)\n  //     .catch(err => this.serverSummaryError = err.message)\n  //     .then(() => this.serverSummaryLoader = false);\n  // }\n  //\n  // /**\n  //  * Gets MySQL summary via API, Agent from `pt-mysql-summary`.\n  //  * @param agentUUID agent UUID that is monitoring MySQL Server.\n  //  */\n  // getMySQLSummary(agentUUID: string): void {\n  //   if (!this.dbServer || this.dbServer.Subsystem !== 'mysql' || this.isAllSelected || this.isNotExistSelected) {\n  //     return;\n  //   }\n  //   this.summaryService\n  //     .getMySQL(agentUUID, this.dbServer.UUID)\n  //     .then(data => this.mysqlSummary = data)\n  //     .catch(err => this.mysqlSummaryError = err.message)\n  //     .then(() => this.mysqlSummaryLoader = false);\n  // }\n  //\n  // /**\n  //  * Gets MongoDB summary via API, Agent from `pt-mongodb-summary`.\n  //  * @param agentUUID agent UUID that is monitoring MongoDB Server.\n  //  */\n  // getMongoSummary(agentUUID: string): void {\n  //   if (!this.dbServer || this.dbServer.Subsystem !== 'mongo' || this.isAllSelected || this.isNotExistSelected) {\n  //     return;\n  //   }\n  //   this.summaryService\n  //     .getMongo(agentUUID, this.dbServer.UUID)\n  //     .then(data => this.mongoSummary = data)\n  //     .catch(err => this.mongoSummaryError = err.message)\n  //     .then(() => this.mongoSummaryLoader = false);\n  // }\n  //\n  // /**\n  //  * Create archive with summary information\n  //  */\n  // downloadSummary() {\n  //   if (!this.dbServer) {\n  //     return;\n  //   }\n  //\n  //   const momentFormatPipe = new MomentFormatPipe();\n  //   const date = momentFormatPipe.transform(moment.utc(), 'YYYY-MM-DDTHH:mm:ss');\n  //   const filename = `pmm-${this.dbServer.Name}-${date}-summary.zip`;\n  //   const zip = new JSZip();\n  //   zip.file('system_summary.txt', this.serverSummary);\n  //   if (this.dbServer.Subsystem === 'mongo') {\n  //     zip.file('server_summary.txt', this.mongoSummary);\n  //     this.testingVariable = true;\n  //   } else if (this.dbServer.Subsystem === 'mysql') {\n  //     zip.file('server_summary.txt', this.mysqlSummary);\n  //     this.testingVariable = true;\n  //   }\n  //   zip.generateAsync({type: 'blob'})\n  //     .then(function (content) {\n  //       // see FileSaver.js\n  //       saveAs(content, filename);\n  //     });\n  // }\n  //\n  //\n  // /**\n  //  * Overrides parent method.\n  //  * Executes on route was changed to refresh data.\n  //  * @param params - URL query parameters\n  //  */\n  // onChangeParams(params) {\n  //   if (!this.dbServer || !this.agent || !this.dbServer.Subsystem || this.isAllSelected || this.isNotExistSelected) {\n  //     return;\n  //   }\n  //   // to initalise loader when host was changed\n  //   this.mysqlSummary = '';\n  //   this.mongoSummary = '';\n  //   this.serverSummary = '';\n  //   this.mysqlSummaryError = '';\n  //   this.mongoSummaryError = '';\n  //   this.serverSummaryError = '';\n  //   this.mysqlSummaryLoader = true;\n  //   this.mongoSummaryLoader = true;\n  //   this.serverSummaryLoader = true;\n  //\n  //   this.getServerSummary(this.agent.UUID);\n  //   if (this.dbServer.Subsystem === 'mysql') {\n  //     this.getMySQLSummary(this.agent.UUID);\n  //   }\n  //   if (this.dbServer.Subsystem === 'mongo') {\n  //     this.getMongoSummary(this.agent.UUID)\n  //   }\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class SummaryService {\n\n  private httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getServer(agentUUID: string, serverUUID: string) {\n    const url = `/qan-api/agents/${agentUUID}/cmd`;\n    const data = {\n      UUID: serverUUID,\n    };\n    const params = {\n      AgentUUID: agentUUID,\n      Service: 'query',\n      Cmd: 'Summary',\n      Data: btoa(JSON.stringify(data))\n    };\n\n    return this.httpClient\n      .put(url, params, { headers: this.httpHeaders })\n      .toPromise()\n      .then((resp: any) => {\n        // if not error - continue\n        if (!resp.Error) {\n          return resp;\n        }\n        let err = resp.Error;\n        if (resp.Error === 'Executable file not found in $PATH') {\n          err = ' - Please install `pt-summary`.';\n          err += ' (Output: ' + resp.Error + ')';\n        }\n        throw new Error(err);\n      })\n      .then(resp => {\n        let str = window.atob(resp.Data);\n        str = str.replace(/\\\\n/g, '\\n');\n        str = str.replace(/\\\\t/g, '\\t');\n        return str.slice(1, -1);\n      });\n  }\n\n  getMySQL(agentUUID: string, dbServerUUID: string) {\n    const url = `/qan-api/agents/${agentUUID}/cmd`;\n    const data = {\n      UUID: dbServerUUID\n    };\n    const params = {\n      AgentUUID: agentUUID,\n      Service: 'query',\n      Cmd: 'Summary',\n      Data: btoa(JSON.stringify(data))\n    };\n\n    return this.httpClient\n      .put(url, params, { headers: this.httpHeaders })\n      .toPromise()\n      .then((resp: any) => {\n        // if not error - continue\n        if (!resp.Error) {\n          return resp;\n        }\n        let err = resp.Error;\n        if (resp.Error === 'Executable file not found in $PATH') {\n          err = ' - Please install `pt-mysql-summary`.';\n          err += ' (Output: ' + resp.Error + ')';\n        }\n        throw new Error(err);\n      })\n      .then(resp => {\n        let str = window.atob(resp.Data);\n        str = str.replace(/\\\\n/g, '\\n');\n        str = str.replace(/\\\\t/g, '\\t');\n        return str.slice(1, -1);\n      });\n  }\n\n  getMongo(agentUUID: string, dbServerUUID: string) {\n    const url = `/qan-api/agents/${agentUUID}/cmd`;\n    const data = {\n      UUID: dbServerUUID\n    };\n\n    const params = {\n      AgentUUID: agentUUID,\n      Service: 'query',\n      Cmd: 'Summary',\n      Data: btoa(JSON.stringify(data))\n    };\n\n    return this.httpClient\n      .put(url, params, { headers: this.httpHeaders })\n      .toPromise()\n      .then((resp: any) => {\n        // if not error - continue\n        if (!resp.Error) {\n          return resp;\n        }\n        let err = resp.Error;\n        if (resp.Error === 'Executable file not found in $PATH') {\n          err = ' - Please install `pt-mongodb-summary`.';\n          err += ' (Output: ' + resp.Error + ')';\n        }\n        if (resp.Error === 'Unknown command: GetMongoSummary') {\n          err = ' - Please update your `pmm-client`.';\n          err += ' (Output: ' + resp.Error + ')';\n        }\n        throw new Error(err);\n      })\n      .then(resp => {\n        let str = window.atob(resp.Data);\n        str = str.replace(/\\\\n/g, '\\n');\n        str = str.replace(/\\\\t/g, '\\t');\n        return str.slice(1, -1);\n      });\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  demoHosts: ['163.172.51.248', 'pmmdemo.percona.com'],\n  version: 'dev'\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}